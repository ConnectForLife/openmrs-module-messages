<?xml version="1.0" encoding="UTF-8"?>

<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog/1.9"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog/1.9
                  http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-1.9.xsd">

    <changeSet id="messages-1" author="Dawid Ruchniewicz">
        <preConditions onFail="MARK_RAN">
            <not><tableExists tableName="messages_scheduled_service_group"/></not>
        </preConditions>
        <comment>Created the messages_scheduled_service_group table</comment>
        <createTable tableName="messages_scheduled_service_group">
            <column name="messages_scheduled_service_group_id" type="int" autoIncrement="true">
                <constraints primaryKey="true"/>
            </column>
            <column name="msg_send_time" type="datetime"/>
            <column name="patient_id" type="int">
                <constraints nullable="false"/>
            </column>
            <column name="status" type="varchar(255)"/>
            <column name="uuid" type="char(38)">
                <constraints nullable="false" unique="true"/>
            </column>
            <column name="creator" type="int"/>
            <column name="changed_by" type="int"/>
            <column name="date_changed" type="datetime"/>
            <column name="date_created" type="datetime">
                <constraints nullable="false"/>
            </column>
            <column name="date_voided" type="datetime"/>
            <column name="void_reason" type="varchar(255)"/>
            <column name="voided" type="BOOLEAN" defaultValueBoolean="false">
                <constraints nullable="false"/>
            </column>
            <column name="voided_by" type="int"/>
        </createTable>
        <addForeignKeyConstraint constraintName="messages_scheduled_service_group_creator_fk"
                                 baseTableName="messages_scheduled_service_group" baseColumnNames="creator"
                                 referencedTableName="users" referencedColumnNames="user_id"/>
        <addForeignKeyConstraint constraintName="messages_scheduled_service_group_changed_by_fk"
                                 baseTableName="messages_scheduled_service_group" baseColumnNames="changed_by"
                                 referencedTableName="users" referencedColumnNames="user_id"/>
        <addForeignKeyConstraint constraintName="messages_scheduled_service_group_voided_by_fk"
                                 baseTableName="messages_scheduled_service_group" baseColumnNames="voided_by"
                                 referencedTableName="users" referencedColumnNames="user_id"/>
        <addForeignKeyConstraint constraintName="messages_scheduled_service_group_patient_fk"
                                 baseTableName="messages_scheduled_service_group" baseColumnNames="patient_id"
                                 referencedTableName="patient" referencedColumnNames="patient_id"/>
    </changeSet>

    <changeSet id="messages-2" author="Dawid Ruchniewicz">
        <preConditions onFail="MARK_RAN">
            <not><tableExists tableName="messages_template"/></not>
        </preConditions>
        <comment>Created the messages_template table</comment>
        <createTable tableName="messages_template">
            <column name="messages_template_id" type="int" autoIncrement="true">
                <constraints primaryKey="true"/>
            </column>
            <column name="service_query" type="TEXT">
                <constraints nullable="false"/>
            </column>
            <column name="service_query_type" type="varchar(255)">
                <constraints nullable="false"/>
            </column>
            <column name="uuid" type="char(38)">
                <constraints nullable="false" unique="true"/>
            </column>
            <column name="creator" type="int"/>
            <column name="changed_by" type="int"/>
            <column name="date_changed" type="datetime"/>
            <column name="date_created" type="datetime">
                <constraints nullable="false"/>
            </column>
            <column name="date_voided" type="datetime"/>
            <column name="void_reason" type="varchar(255)"/>
            <column name="voided" type="BOOLEAN" defaultValueBoolean="false">
                <constraints nullable="false"/>
            </column>
            <column name="voided_by" type="int"/>
        </createTable>
        <addForeignKeyConstraint constraintName="messages_template_creator_fk"
                                 baseTableName="messages_template" baseColumnNames="creator"
                                 referencedTableName="users" referencedColumnNames="user_id"/>
        <addForeignKeyConstraint constraintName="messages_template_changed_by_fk"
                                 baseTableName="messages_template" baseColumnNames="changed_by"
                                 referencedTableName="users" referencedColumnNames="user_id"/>
        <addForeignKeyConstraint constraintName="messages_template_voided_by_fk"
                                 baseTableName="messages_template" baseColumnNames="voided_by"
                                 referencedTableName="users" referencedColumnNames="user_id"/>
        </changeSet>

    <changeSet id="messages-3" author="Dawid Ruchniewicz">
        <preConditions onFail="MARK_RAN">
            <not><tableExists tableName="messages_template_field"/></not>
        </preConditions>
        <comment>Created the messages_template_field table</comment>
        <createTable tableName="messages_template_field">
            <column name="messages_template_field_id" type="int" autoIncrement="true">
                <constraints primaryKey="true"/>
            </column>
            <column name="name" type="varchar(255)">
                <constraints nullable="false"/>
            </column>
            <column name="mandatory" type="boolean">
                <constraints nullable="false"/>
            </column>
            <column name="default_value" type="TEXT"/>
            <column name="template_id" type="int">
                <constraints nullable="false"/>
            </column>
            <column name="value_concept" type="int"/>
            <column name="uuid" type="char(38)">
                <constraints nullable="false" unique="true"/>
            </column>
            <column name="creator" type="int"/>
            <column name="changed_by" type="int"/>
            <column name="date_changed" type="datetime"/>
            <column name="date_created" type="datetime">
                <constraints nullable="false"/>
            </column>
            <column name="date_voided" type="datetime"/>
            <column name="void_reason" type="varchar(255)"/>
            <column name="voided" type="BOOLEAN" defaultValueBoolean="false">
                <constraints nullable="false"/>
            </column>
            <column name="voided_by" type="int"/>
        </createTable>
        <addForeignKeyConstraint constraintName="messages_template_field_creator_fk"
                                 baseTableName="messages_template_field" baseColumnNames="creator"
                                 referencedTableName="users" referencedColumnNames="user_id"/>
        <addForeignKeyConstraint constraintName="messages_template_field_changed_by_fk"
                                 baseTableName="messages_template_field" baseColumnNames="changed_by"
                                 referencedTableName="users" referencedColumnNames="user_id"/>
        <addForeignKeyConstraint constraintName="messages_template_field_voided_by_fk"
                                 baseTableName="messages_template_field" baseColumnNames="voided_by"
                                 referencedTableName="users" referencedColumnNames="user_id"/>
        <addForeignKeyConstraint constraintName="messages_template_field_template_fk"
                                 baseTableName="messages_template_field" baseColumnNames="template_id"
                                 referencedTableName="messages_template" referencedColumnNames="messages_template_id"/>
        <addForeignKeyConstraint constraintName="messages_template_field_value_concept_fk"
                                 baseTableName="messages_template_field" baseColumnNames="value_concept"
                                 referencedTableName="concept" referencedColumnNames="concept_id"/>
    </changeSet>

    <changeSet id="messages-4" author="Dawid Ruchniewicz">
        <preConditions onFail="MARK_RAN">
            <not><tableExists tableName="messages_template_field_value"/></not>
        </preConditions>
        <comment>Created the messages_template_field_value table</comment>
        <createTable tableName="messages_template_field_value">
            <column name="messages_template_field_value_id" type="int" autoIncrement="true">
                <constraints primaryKey="true"/>
            </column>
            <column name="value" type="varchar(255)"/>
            <column name="template_field_id" type="int">
                <constraints nullable="false"/>
            </column>
            <column name="patient_template_id" type="int">
                <constraints nullable="false"/>
            </column>
            <column name="uuid" type="char(38)">
                <constraints nullable="false" unique="true"/>
            </column>
            <column name="creator" type="int"/>
            <column name="changed_by" type="int"/>
            <column name="date_changed" type="datetime"/>
            <column name="date_created" type="datetime">
                <constraints nullable="false"/>
            </column>
            <column name="date_voided" type="datetime"/>
            <column name="void_reason" type="varchar(255)"/>
            <column name="voided" type="BOOLEAN" defaultValueBoolean="false">
                <constraints nullable="false"/>
            </column>
            <column name="voided_by" type="int"/>
        </createTable>
        <addForeignKeyConstraint constraintName="messages_template_field_value_creator_fk"
                                 baseTableName="messages_template_field_value" baseColumnNames="creator"
                                 referencedTableName="users" referencedColumnNames="user_id"/>
        <addForeignKeyConstraint constraintName="messages_template_field_value_changed_by_fk"
                                 baseTableName="messages_template_field_value" baseColumnNames="changed_by"
                                 referencedTableName="users" referencedColumnNames="user_id"/>
        <addForeignKeyConstraint constraintName="messages_template_field_value_voided_by_fk"
                                 baseTableName="messages_template_field_value" baseColumnNames="voided_by"
                                 referencedTableName="users" referencedColumnNames="user_id"/>
        <addForeignKeyConstraint constraintName="messages_template_field_value_template_field_fk"
                                 baseTableName="messages_template_field_value" baseColumnNames="template_field_id"
                                 referencedTableName="messages_template_field"
                                 referencedColumnNames="messages_template_field_id"/>
        </changeSet>

    <changeSet id="messages-5" author="Dawid Ruchniewicz">
        <preConditions onFail="MARK_RAN">
            <not><tableExists tableName="messages_patient_template"/></not>
        </preConditions>
        <comment>Created the messages_patient_template table</comment>
        <createTable tableName="messages_patient_template">
            <column name="messages_patient_template_id" type="int" autoIncrement="true">
                <constraints primaryKey="true"/>
            </column>
            <column name="actor_id" type="int">
                <constraints nullable="false"/>
            </column>
            <column name="actor_type" type="int"/>
            <column name="service_query" type="TEXT">
                <constraints nullable="false"/>
            </column>
            <column name="service_query_type" type="varchar(255)">
                <constraints nullable="false"/>
            </column>
            <column name="patient_id" type="int">
                <constraints nullable="false"/>
            </column>
            <column name="template_id" type="int">
                <constraints nullable="false"/>
            </column>
            <column name="uuid" type="char(38)">
                <constraints nullable="false" unique="true"/>
            </column>
            <column name="creator" type="int"/>
            <column name="changed_by" type="int"/>
            <column name="date_changed" type="datetime"/>
            <column name="date_created" type="datetime">
                <constraints nullable="false"/>
            </column>
            <column name="date_voided" type="datetime"/>
            <column name="void_reason" type="varchar(255)"/>
            <column name="voided" type="BOOLEAN" defaultValueBoolean="false">
                <constraints nullable="false"/>
            </column>
            <column name="voided_by" type="int"/>
        </createTable>
        <addForeignKeyConstraint constraintName="messages_patient_template_creator_fk"
                                 baseTableName="messages_patient_template" baseColumnNames="creator"
                                 referencedTableName="users" referencedColumnNames="user_id"/>
        <addForeignKeyConstraint constraintName="messages_patient_template_changed_by_fk"
                                 baseTableName="messages_patient_template" baseColumnNames="changed_by"
                                 referencedTableName="users" referencedColumnNames="user_id"/>
        <addForeignKeyConstraint constraintName="messages_patient_template_voided_by_fk"
                                 baseTableName="messages_patient_template" baseColumnNames="voided_by"
                                 referencedTableName="users" referencedColumnNames="user_id"/>
        <addForeignKeyConstraint constraintName="messages_patient_template_actor_fk"
                                 baseTableName="messages_patient_template" baseColumnNames="actor_id"
                                 referencedTableName="person" referencedColumnNames="person_id"/>
        <addForeignKeyConstraint constraintName="messages_patient_template_actor_type_fk"
                                 baseTableName="messages_patient_template" baseColumnNames="actor_type"
                                 referencedTableName="relationship" referencedColumnNames="relationship_id"/>
        <addForeignKeyConstraint constraintName="messages_patient_template_patient_fk"
                                 baseTableName="messages_patient_template" baseColumnNames="patient_id"
                                 referencedTableName="patient" referencedColumnNames="patient_id"/>
        <addForeignKeyConstraint constraintName="messages_patient_template_template_fk"
                                 baseTableName="messages_patient_template" baseColumnNames="template_id"
                                 referencedTableName="messages_template_field_value"
                                 referencedColumnNames="messages_template_field_value_id"/>
    </changeSet>

    <changeSet id="messages-6" author="Dawid Ruchniewicz">
        <preConditions>
            <not><tableExists tableName="messages_scheduled_service"/></not>
        </preConditions>
        <comment>Created the messages_scheduled_service table</comment>
        <createTable tableName="messages_scheduled_service">
            <column name="messages_scheduled_service_id" type="int" autoIncrement="true">
                <constraints primaryKey="true"/>
            </column>
            <column name="group_id" type="int"/>
            <column name="service" type="int"/>
            <column name="patient_template_id" type="int">
                <constraints nullable="false"/>
            </column>
            <column name="channel_type" type="int">
                <constraints nullable="false"/>
            </column>
            <column name="status" type="varchar(255)"/>
            <column name="last_service_execution_id" type="int"/>
            <column name="uuid" type="char(38)">
                <constraints nullable="false" unique="true"/>
            </column>
            <column name="creator" type="int"/>
            <column name="changed_by" type="int"/>
            <column name="date_changed" type="datetime"/>
            <column name="date_created" type="datetime">
                <constraints nullable="false"/>
            </column>
            <column name="date_voided" type="datetime"/>
            <column name="void_reason" type="varchar(255)"/>
            <column name="voided" type="BOOLEAN" defaultValueBoolean="false">
                <constraints nullable="false"/>
            </column>
            <column name="voided_by" type="int"/>
        </createTable>
        <addForeignKeyConstraint constraintName="messages_scheduled_service_creator_fk"
                                 baseTableName="messages_scheduled_service" baseColumnNames="creator"
                                 referencedTableName="users" referencedColumnNames="user_id"/>
        <addForeignKeyConstraint constraintName="messages_scheduled_service_changed_by_fk"
                                 baseTableName="messages_scheduled_service" baseColumnNames="changed_by"
                                 referencedTableName="users" referencedColumnNames="user_id"/>
        <addForeignKeyConstraint constraintName="messages_scheduled_service_voided_by_fk"
                                 baseTableName="messages_scheduled_service" baseColumnNames="voided_by"
                                 referencedTableName="users" referencedColumnNames="user_id"/>
        <addForeignKeyConstraint constraintName="messages_scheduled_service_group_fk"
                                 baseTableName="messages_scheduled_service" baseColumnNames="group_id"
                                 referencedTableName="messages_scheduled_service_group"
                                 referencedColumnNames="messages_scheduled_service_group_id"/>
        <addForeignKeyConstraint constraintName="messages_scheduled_service_service_fk"
                                 baseTableName="messages_scheduled_service" baseColumnNames="service"
                                 referencedTableName="concept" referencedColumnNames="concept_id"/>
        <addForeignKeyConstraint constraintName="messages_scheduled_service_patient_template_fk"
                                 baseTableName="messages_scheduled_service" baseColumnNames="patient_template_id"
                                 referencedTableName="messages_patient_template"
                                 referencedColumnNames="messages_patient_template_id"/>
        <addForeignKeyConstraint constraintName="messages_scheduled_service_channel_type_fk"
                                 baseTableName="messages_scheduled_service" baseColumnNames="channel_type"
                                 referencedTableName="concept" referencedColumnNames="concept_id"/>
    </changeSet>

    <changeSet id="messages-7" author="Dawid Ruchniewicz">
        <preConditions>
            <not><tableExists tableName="messages_actor_response"/></not>
        </preConditions>
        <comment>Created the messages_actor_response table</comment>
        <createTable tableName="messages_actor_response">
            <column name="messages_actor_response_id" type="int" autoIncrement="true">
                <constraints primaryKey="true"/>
            </column>
            <column name="scheduled_service_id" type="int">
                <constraints nullable="false"/>
            </column>
            <column name="question" type="int"/>
            <column name="response" type="int"/>
            <column name="text_response" type="TEXT"/>
            <column name="answered_time" type="datetime"/>
            <column name="uuid" type="char(38)">
                <constraints nullable="false" unique="true"/>
            </column>
            <column name="creator" type="int"/>
            <column name="changed_by" type="int"/>
            <column name="date_changed" type="datetime"/>
            <column name="date_created" type="datetime">
                <constraints nullable="false"/>
            </column>
            <column name="date_voided" type="datetime"/>
            <column name="void_reason" type="varchar(255)"/>
            <column name="voided" type="BOOLEAN" defaultValueBoolean="false">
                <constraints nullable="false"/>
            </column>
            <column name="voided_by" type="int"/>
        </createTable>
        <addForeignKeyConstraint constraintName="messages_actor_response_creator_fk"
                                 baseTableName="messages_actor_response" baseColumnNames="creator"
                                 referencedTableName="users" referencedColumnNames="user_id"/>
        <addForeignKeyConstraint constraintName="messages_actor_response_changed_by_fk"
                                 baseTableName="messages_actor_response" baseColumnNames="changed_by"
                                 referencedTableName="users" referencedColumnNames="user_id"/>
        <addForeignKeyConstraint constraintName="messages_actor_response_voided_by_fk"
                                 baseTableName="messages_actor_response" baseColumnNames="voided_by"
                                 referencedTableName="users" referencedColumnNames="user_id"/>
        <addForeignKeyConstraint constraintName="messages_actor_response_scheduled_service_fk"
                                 baseTableName="messages_actor_response" baseColumnNames="scheduled_service_id"
                                 referencedTableName="messages_scheduled_service"
                                 referencedColumnNames="messages_scheduled_service_id"/>
        <addForeignKeyConstraint constraintName="messages_actor_response_question_fk"
                                 baseTableName="messages_actor_response" baseColumnNames="question"
                                 referencedTableName="concept" referencedColumnNames="concept_id"/>
        <addForeignKeyConstraint constraintName="messages_actor_response_response_fk"
                                 baseTableName="messages_actor_response" baseColumnNames="response"
                                 referencedTableName="concept" referencedColumnNames="concept_id"/>
    </changeSet>

    <changeSet id="messages-8" author="Dawid Ruchniewicz">
        <preConditions>
            <not><tableExists tableName="messages_delivery_attempt"/></not>
        </preConditions>
        <comment>Created the messages_delivery_attempt table</comment>
        <createTable tableName="messages_delivery_attempt">
            <column name="messages_delivery_attempt_id" type="int" autoIncrement="true">
                <constraints primaryKey="true"/>
            </column>
            <column name="scheduled_service_id" type="int">
                <constraints nullable="false"/>
            </column>
            <column name="timestamp" type="datetime">
                <constraints nullable="false"/>
            </column>
            <column name="new_status" type="varchar(255)">
                <constraints nullable="false"/>
            </column>
            <column name="attempt_number" type="int">
                <constraints nullable="false"/>
            </column>
            <column name="service_execution_id" type="varchar(255)">
                <constraints nullable="false"/>
            </column>
            <column name="uuid" type="char(38)">
                <constraints nullable="false" unique="true"/>
            </column>
            <column name="creator" type="int"/>
            <column name="changed_by" type="int"/>
            <column name="date_changed" type="datetime"/>
            <column name="date_created" type="datetime">
                <constraints nullable="false"/>
            </column>
            <column name="date_voided" type="datetime"/>
            <column name="void_reason" type="varchar(255)"/>
            <column name="voided" type="BOOLEAN" defaultValueBoolean="false">
                <constraints nullable="false"/>
            </column>
            <column name="voided_by" type="int"/>
        </createTable>
        <addForeignKeyConstraint constraintName="messages_delivery_attempt_creator_fk"
                                 baseTableName="messages_delivery_attempt" baseColumnNames="creator"
                                 referencedTableName="users" referencedColumnNames="user_id"/>
        <addForeignKeyConstraint constraintName="messages_delivery_attempt_changed_by_fk"
                                 baseTableName="messages_delivery_attempt" baseColumnNames="changed_by"
                                 referencedTableName="users" referencedColumnNames="user_id"/>
        <addForeignKeyConstraint constraintName="messages_delivery_attempt_voided_by_fk"
                                 baseTableName="messages_delivery_attempt" baseColumnNames="voided_by"
                                 referencedTableName="users" referencedColumnNames="user_id"/>
        <addForeignKeyConstraint constraintName="messages_delivery_attempt_service_fk"
                                 baseTableName="messages_delivery_attempt" baseColumnNames="scheduled_service_id"
                                 referencedTableName="concept" referencedColumnNames="concept_id"/>
    </changeSet>

    <changeSet id="messages-9" author="Dawid Ruchniewicz">
        <preConditions>
            <not><tableExists tableName="messages_schedule_service_parameter"/></not>
        </preConditions>
        <comment>Created the messages_schedule_service_parameter table</comment>
        <createTable tableName="messages_schedule_service_parameter">
            <column name="messages_schedule_service_parameter_id" type="int" autoIncrement="true">
                <constraints primaryKey="true"/>
            </column>
            <column name="scheduled_message" type="int"/>
            <column name="parameter_type" type="varchar(255)"/>
            <column name="parameter_value" type="TEXT"/>
            <column name="uuid" type="char(38)">
                <constraints nullable="false" unique="true"/>
            </column>
            <column name="creator" type="int"/>
            <column name="changed_by" type="int"/>
            <column name="date_changed" type="datetime"/>
            <column name="date_created" type="datetime">
                <constraints nullable="false"/>
            </column>
            <column name="date_voided" type="datetime"/>
            <column name="void_reason" type="varchar(255)"/>
            <column name="voided" type="BOOLEAN" defaultValueBoolean="false">
                <constraints nullable="false"/>
            </column>
            <column name="voided_by" type="int"/>
        </createTable>
        <addForeignKeyConstraint constraintName="messages_schedule_service_parameter_creator_fk"
                                 baseTableName="messages_schedule_service_parameter" baseColumnNames="creator"
                                 referencedTableName="users" referencedColumnNames="user_id"/>
        <addForeignKeyConstraint constraintName="messages_schedule_service_parameter_changed_by_fk"
                                 baseTableName="messages_schedule_service_parameter" baseColumnNames="changed_by"
                                 referencedTableName="users" referencedColumnNames="user_id"/>
        <addForeignKeyConstraint constraintName="messages_schedule_service_parameter_voided_by_fk"
                                 baseTableName="messages_schedule_service_parameter" baseColumnNames="voided_by"
                                 referencedTableName="users" referencedColumnNames="user_id"/>
        <addForeignKeyConstraint constraintName="messages_schedule_service_parameter_scheduled_message_fk"
                                 baseTableName="messages_schedule_service_parameter" baseColumnNames="scheduled_message"
                                 referencedTableName="messages_scheduled_service"
                                 referencedColumnNames="messages_scheduled_service_id"/>
    </changeSet>

    <changeSet id="messages-10" author="Paweł Cieszko">
        <addUniqueConstraint columnNames="actor_id, patient_id, template_id"
                             constraintName="messages_patient_template_actor_id_patient_id_template_id_ux"
                             tableName="messages_patient_template"/>
    </changeSet>

    <changeSet id="messages-11" author="Dawid Ruchniewcz">
        <preConditions onFail="MARK_RAN">
            <tableExists tableName="messages_template_field_value"/>
            <columnExists tableName="messages_template_field_value" columnName="patient_template_id"/>
        </preConditions>
        <comment>Removed patient_template_id column</comment>
        <dropColumn tableName="messages_template_field_value"
                    columnName="patient_template_id"/>
    </changeSet>

    <changeSet id="messages-12" author="Dawid Ruchniewicz">
        <preConditions onFail="MARK_RAN">
            <tableExists tableName="messages_scheduled_service"/>
            <columnExists tableName="messages_scheduled_service" columnName="last_service_execution_id"/>
        </preConditions>
        <comment>Removed lastServiceExecution column</comment>
        <dropColumn tableName="messages_scheduled_service"
                    columnName="last_service_execution_id"/>
    </changeSet>

    <changeSet id="messages-13" author="Dawid Ruchniewicz">
        <preConditions onFail="MARK_RAN">
            <tableExists tableName="messages_scheduled_service"/>
        </preConditions>
        <comment>Added lastServiceExecution column</comment>
        <addColumn tableName="messages_scheduled_service">
            <column name="last_service_execution_id" type="varchar(255)"/>
        </addColumn>
    </changeSet>

    <changeSet id="messages-14" author="Daniel Serkowski">
        <preConditions>
            <tableExists tableName="messages_delivery_attempt"/>
        </preConditions>
        <dropForeignKeyConstraint constraintName="messages_delivery_attempt_service_fk"
                                  baseTableName="messages_delivery_attempt" />
        <addForeignKeyConstraint constraintName="messages_delivery_attempt_scheduled_service_fk"
                                 baseTableName="messages_delivery_attempt" baseColumnNames="scheduled_service_id"
                                 referencedTableName="messages_scheduled_service"
                                 referencedColumnNames="messages_scheduled_service_id" />
    </changeSet>

    <changeSet id="messages-15" author="Arkadiusz Lalo">
        <preConditions onFail="MARK_RAN">
            <tableExists tableName="messages_template_field"/>
        </preConditions>
        <comment>Added templateFieldType column</comment>
        <addColumn tableName="messages_template_field">
            <column name="template_field_type" type="varchar(255)">
                <constraints nullable="false" />
            </column>
        </addColumn>
        <dropForeignKeyConstraint constraintName="messages_template_field_value_concept_fk" baseTableName="messages_template_field"/>
        <dropColumn tableName="messages_template_field" columnName="value_concept"/>
    </changeSet>

    <changeSet id="messages-16" author="Arkadiusz Lalo">
        <preConditions onFail="MARK_RAN">
            <tableExists tableName="messages_template"/>
        </preConditions>
        <comment>Added name column</comment>
        <addColumn tableName="messages_template">
            <column name="name" type="varchar(255)">
                <constraints nullable="false" />
            </column>
        </addColumn>
    </changeSet>

    <changeSet id="messages-17" author="Karol Cissewski">
        <preConditions onFail="MARK_RAN">
            <tableExists tableName="messages_template_field_value"/>
        </preConditions>
        <comment>Added patient_template_id column</comment>
        <addColumn tableName="messages_template_field_value">
            <column name="patient_template_id" type="int">
                <constraints nullable="false" />
            </column>
        </addColumn>
        <addForeignKeyConstraint baseTableName="messages_template_field_value" baseColumnNames="patient_template_id"
                                 constraintName="fk_messages_template_field_value_patient_template_id"
                                 referencedTableName="messages_patient_template"
                                 referencedColumnNames="messages_patient_template_id"/>
    </changeSet>

    <changeSet id="messages-18" author="Daniel Serkowski">
        <preConditions>
            <tableExists tableName="messages_patient_template" />
            <tableExists tableName="messages_template" />
        </preConditions>
        <comment>Fixing incorrect FK definition between PatientTemplate and Template tables</comment>
        <dropForeignKeyConstraint baseTableName="messages_patient_template"
                                  constraintName="messages_patient_template_template_fk" />
        <addForeignKeyConstraint constraintName="messages_patient_template_template_fk"
                                 baseTableName="messages_patient_template" baseColumnNames="template_id"
                                 referencedTableName="messages_template"
                                 referencedColumnNames="messages_template_id"/>
    </changeSet>

    <changeSet id="messages-19" author="Dawid Ruchniewicz">
        <preConditions>
            <tableExists tableName="messages_template"/>
            <tableExists tableName="messages_template_field"/>
            <sqlCheck expectedResult="0">
                SELECT COUNT(*) FROM messages_template
                WHERE uuid = '9556482a-20b2-11ea-ac12-0242c0a82002'
            </sqlCheck>
        </preConditions>
        <comment>Added new inserts for templates and template fields</comment>
        <sql>
            INSERT INTO messages_template
            (service_query, service_query_type, name, creator, uuid, date_created)
            VALUES(
            'select EXECUTION_DATE, MESSAGE_ID, CHANNEL_ID, mssg_status as STATUS_ID from
            (select TIMESTAMP(selected_date, times) AS EXECUTION_DATE, 1 AS MESSAGE_ID, :Service_type AS CHANNEL_ID
            from (select * from (select adddate(''2019-12-01'',t4*10000 + t3*1000 + t2*100 + t1*10 + t0) selected_date
            from  (select 0 t0 union select 1 union select 2 union select 3 union select 4 union  select 5 union
            select 6 union select 7 union select 8 union select 9) t0,  (select 0 t1 union select 1 union
            select 2 union select 3 union select 4 union  select 5 union select 6 union select 7 union
            select 8 union select 9) t1,  (select 0 t2 union select 1 union select 2 union select 3 union
            select 4 union  select 5 union select 6 union select 7 union select 8 union select 9) t2,
            (select 0 t3 union select 1 union select 2 union select 3 union select 4 union  select 5 union
            select 6 union select 7 union select 8 union select 9) t3,  (select 0 t4 union select 1 union
            select 2 union select 3 union select 4 union  select 5 union select 6 union select 7 union
            select 8 union select 9) t4) v where selected_date between :Start_of_daily_messages and :End_of_daily_messages
            and selected_date between :startDate and :endDate  and :Week_day_of_delivering_message
            like concat(''%'',DAYNAME(selected_date),''%'') ) dates JOIN (select :bestContactTime times) timeslist) temp
            LEFT JOIN (select mssg.msg_send_time as mssg_dates, mssg.status as mssg_status
            from messages_scheduled_service_group mssg where mssg.patient_id = :patientId) mss on mss.mssg_dates = EXECUTION_DATE;',
            'SQL',
            'Adherence report daily',
            1,
            '9556482a-20b2-11ea-ac12-0242c0a82002',
            now()
            );
        </sql>
        <sql>
            INSERT INTO messages_template_field
            (name, mandatory, default_value, template_id, template_field_type, creator, uuid, date_created)
            VALUES(
            'Service type',
            1,
            'Deactivate service',
            (select messages_template_id from messages_template where uuid = '9556482a-20b2-11ea-ac12-0242c0a82002'),
            'SERVICE_TYPE',
            1,
            '95566224-20b2-11ea-ac12-0242c0a82002',
            now()
            );
        </sql>
        <sql>
            INSERT INTO messages_template_field
            (name, mandatory, default_value, template_id, template_field_type, creator, uuid, date_created)
            VALUES(
            'Week day of delivering message',
            1,
            'Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday',
            (select messages_template_id from messages_template where uuid = '9556482a-20b2-11ea-ac12-0242c0a82002'),
            'DAY_OF_WEEK',
            1,
            '95567627-20b2-11ea-ac12-0242c0a82002',
            now()
            );
        </sql>
        <sql>
            INSERT INTO messages_template_field
            (name, mandatory, default_value, template_id, template_field_type, creator, uuid, date_created)
            VALUES(
            'Start of daily messages',
            0,
            ' ',
            (select messages_template_id from messages_template where uuid = '9556482a-20b2-11ea-ac12-0242c0a82002'),
            'START_OF_MESSAGES',
            1,
            '955687fc-20b2-11ea-ac12-0242c0a82002',
            now()
            );
        </sql>
        <sql>
            INSERT INTO messages_template_field
            (name, mandatory, default_value, template_id, template_field_type, creator, uuid, date_created)
            VALUES(
            'End of daily messages',
            1,
            '2020-01-30',
            (select messages_template_id from messages_template where uuid = '9556482a-20b2-11ea-ac12-0242c0a82002'),
            'END_OF_MESSAGES',
            1,
            '9556992c-20b2-11ea-ac12-0242c0a82002',
            now()
            );
        </sql>
    </changeSet>

    <changeSet id="messages-20" author="Daniel Serkowski">
        <preConditions onFail="MARK_RAN">
            <tableExists tableName="messages_scheduled_service_group"/>
        </preConditions>
        <comment>Adding missing actor_id column</comment>
        <addColumn tableName="messages_scheduled_service_group">
            <column name="actor_id" type="int">
                <constraints nullable="false" />
            </column>
        </addColumn>
        <addForeignKeyConstraint constraintName="messages_scheduled_service_group_actor_fk"
                                 baseTableName="messages_scheduled_service_group" baseColumnNames="actor_id"
                                 referencedTableName="person" referencedColumnNames="person_id"/>
    </changeSet>

    <changeSet id="messages-22" author="Michał Lewandowski">
        <preConditions>
            <tableExists tableName="messages_template"/>
            <tableExists tableName="messages_patient_template"/>
        </preConditions>
        <comment>Update messages_template and messages_patient_template with improved query</comment>
        <sql>
            Update messages_template set service_query =
            'select EXECUTION_DATE, MESSAGE_ID, CHANNEL_ID, mssg_status as STATUS_ID from
            (select TIMESTAMP(selected_date, times) AS EXECUTION_DATE, 1 AS MESSAGE_ID, :Service_type AS CHANNEL_ID
            from (select * from (select adddate(\'2019-12-01\',t4*10000 + t3*1000 + t2*100 + t1*10 + t0) selected_date
            from  (select 0 t0 union select 1 union select 2 union select 3 union select 4 union  select 5 union
            select 6 union select 7 union select 8 union select 9) t0,  (select 0 t1 union select 1 union
            select 2 union select 3 union select 4 union  select 5 union select 6 union select 7 union
            select 8 union select 9) t1,  (select 0 t2 union select 1 union select 2 union select 3 union
            select 4 union  select 5 union select 6 union select 7 union select 8 union select 9) t2,
            (select 0 t3 union select 1 union select 2 union select 3 union select 4 union  select 5 union
            select 6 union select 7 union select 8 union select 9) t3,  (select 0 t4 union select 1 union
            select 2 union select 3 union select 4 union  select 5 union select 6 union select 7 union
            select 8 union select 9) t4) v where selected_date between :Start_of_daily_messages and :End_of_daily_messages
            and :Week_day_of_delivering_message
            like concat(\'%\',DAYNAME(selected_date),\'%\')) dates JOIN (select :bestContactTime times) timeslist) temp
            LEFT JOIN (select mssg.msg_send_time as mssg_dates, mssg.status as mssg_status
            from messages_scheduled_service_group mssg where mssg.patient_id = :patientId) mss on mss.mssg_dates = EXECUTION_DATE
            where EXECUTION_DATE >= :startDate and EXECUTION_DATE &lt;= :endDate ;'
            where name = 'Adherence report daily';
        </sql>
        <sql>
            Update messages_patient_template set service_query = 'select EXECUTION_DATE, MESSAGE_ID, CHANNEL_ID, mssg_status as STATUS_ID from
            (select TIMESTAMP(selected_date, times) AS EXECUTION_DATE, 1 AS MESSAGE_ID, :Service_type AS CHANNEL_ID
            from (select * from (select adddate(\'2019-12-01\',t4*10000 + t3*1000 + t2*100 + t1*10 + t0) selected_date
            from  (select 0 t0 union select 1 union select 2 union select 3 union select 4 union  select 5 union
            select 6 union select 7 union select 8 union select 9) t0,  (select 0 t1 union select 1 union
            select 2 union select 3 union select 4 union  select 5 union select 6 union select 7 union
            select 8 union select 9) t1,  (select 0 t2 union select 1 union select 2 union select 3 union
            select 4 union  select 5 union select 6 union select 7 union select 8 union select 9) t2,
            (select 0 t3 union select 1 union select 2 union select 3 union select 4 union  select 5 union
            select 6 union select 7 union select 8 union select 9) t3,  (select 0 t4 union select 1 union
            select 2 union select 3 union select 4 union  select 5 union select 6 union select 7 union
            select 8 union select 9) t4) v where selected_date between :Start_of_daily_messages and :End_of_daily_messages
            and :Week_day_of_delivering_message
            like concat(\'%\',DAYNAME(selected_date),\'%\')) dates JOIN (select :bestContactTime times) timeslist) temp
            LEFT JOIN (select mssg.msg_send_time as mssg_dates, mssg.status as mssg_status
            from messages_scheduled_service_group mssg where mssg.patient_id = :patientId) mss on mss.mssg_dates = EXECUTION_DATE
            where EXECUTION_DATE >= :startDate and EXECUTION_DATE &lt;= :endDate ;'
            where template_id = (select messages_template_id from messages_template where name = 'Adherence report daily') ;
        </sql>

    </changeSet>

    <changeSet id="messages-23" author="Michał Lewandowski">
        <preConditions>
            <tableExists tableName="messages_template"/>
            <tableExists tableName="messages_template_field"/>
        </preConditions>
        <comment>Added new inserts for templates and template fields</comment>
        <sql>
            INSERT INTO messages_template
            (service_query, service_query_type, name, creator, uuid, date_created)
            VALUES(
            'select EXECUTION_DATE, MESSAGE_ID, CHANNEL_ID, mssg_status as STATUS_ID, visitTypeId, locationId, dateStarted from
            (select TIMESTAMP(selected_date, :bestContactTime ) AS EXECUTION_DATE, 1 AS MESSAGE_ID, :Service_type AS
            CHANNEL_ID, visitTypeId, locationId, visit_dates as dateStarted
            from (select * from (select adddate(\'2019-11-01\',t4*10000 + t3*1000 + t2*100 + t1*10 + t0) selected_date
            from (select 0 t0 union select 1 union select 2 union select 3 union select 4 union select 5 union
            select 6 union select 7 union select 8 union select 9) t0, (select 0 t1 union select 1 union
            select 2 union select 3 union select 4 union select 5 union select 6 union select 7 union
            select 8 union select 9) t1, (select 0 t2 union select 1 union select 2 union select 3 union
            select 4 union select 5 union select 6 union select 7 union select 8 union select 9) t2,
            (select 0 t3 union select 1 union select 2 union select 3 union select 4 union select 5 union
            select 6 union select 7 union select 8 union select 9) t3, (select 0 t4 union select 1 union
            select 2 union select 3 union select 4 union select 5 union select 6 union select 7 union
            select 8 union select 9) t4) dates_list
            where selected_date between :Start_of_messages and :End_of_messages) dates_in_range
            JOIN (Select date_started as visit_dates, visit_type_id as visitTypeId, location_id as locationId from visit where
            patient_id = :patientId ) dates_of_visit where (select property_value from global_property
            where property =\'message.daysToCallBeforeVisit.default\') like concat(\'%\',datediff(visit_dates, selected_date),\'%\')
            and date(visit_dates) !=  selected_date )dates_before_visit
            LEFT JOIN (select mssg.msg_send_time as mssg_dates, mssg.status as mssg_status from
            messages_scheduled_service_group mssg where mssg.patient_id = :patientId) mss on mss.mssg_dates = EXECUTION_DATE
            where EXECUTION_DATE >= :startDate and EXECUTION_DATE &lt;= :endDate ;',
            'SQL',
            'Visit reminder',
            1,
            '95573fe3-20b2-11ea-ac12-0242c0a82002',
            now()
            );
        </sql>
        <sql>
            INSERT INTO messages_template_field
            (name, mandatory, default_value, template_id, template_field_type, creator, uuid, date_created)
            VALUES(
            'Service type',
            1,
            'Deactivate service',
            (select messages_template_id from messages_template where uuid = '95573fe3-20b2-11ea-ac12-0242c0a82002'),
            'SERVICE_TYPE',
            1,
            '95574976-20b2-11ea-ac12-0242c0a82002',
            now()
            );
        </sql>
        <sql>
            INSERT INTO messages_template_field
            (name, mandatory, default_value, template_id, template_field_type, creator, uuid, date_created)
            VALUES(
            'Start of messages',
            0,
            ' ',
            (select messages_template_id from messages_template where uuid = '95573fe3-20b2-11ea-ac12-0242c0a82002'),
            'START_OF_MESSAGES',
            1,
            '95575327-20b2-11ea-ac12-0242c0a82002',
            now()
            );
        </sql>
        <sql>
            INSERT INTO messages_template_field
            (name, mandatory, default_value, template_id, template_field_type, creator, uuid, date_created)
            VALUES(
            'End of messages',
            1,
            '2020-01-30',
            (select messages_template_id from messages_template where uuid = '95573fe3-20b2-11ea-ac12-0242c0a82002'),
            'END_OF_MESSAGES',
            1,
            '95575cbd-20b2-11ea-ac12-0242c0a82002',
            now()
            );
        </sql>
    </changeSet>

    <changeSet id="messages-24" author="Oskar Hinc">
        <preConditions>
            <tableExists tableName="messages_scheduled_service"/>
            <foreignKeyConstraintExists foreignKeyName="messages_scheduled_service_channel_type_fk"/>
            <foreignKeyConstraintExists foreignKeyName="messages_scheduled_service_service_fk"/>
            <columnExists tableName="messages_scheduled_service" columnName="channel_type"/>
            <columnExists tableName="messages_scheduled_service" columnName="service"/>
        </preConditions>

        <comment>Changes type of few messages_scheduled_service columns from concept to string</comment>

        <dropForeignKeyConstraint constraintName="messages_scheduled_service_channel_type_fk"
                                  baseTableName="messages_scheduled_service" />
        <dropColumn tableName="messages_scheduled_service"
                    columnName="channel_type"/>

        <dropForeignKeyConstraint constraintName="messages_scheduled_service_service_fk"
                                  baseTableName="messages_scheduled_service" />
        <dropColumn tableName="messages_scheduled_service"
                    columnName="service"/>

        <addColumn tableName="messages_template">
            <column name="channel_type" type="varchar(255)">
                <constraints nullable="false" />
            </column>
            <column name="service" type="varchar(255)" />
        </addColumn>
    </changeSet>

    <changeSet id="messages-25" author="Oskar Hinc">
        <preConditions>
            <tableExists tableName="messages_template_field"/>
            <columnExists tableName="messages_template_field" columnName="default_value"/>
            <columnExists tableName="messages_template_field" columnName="template_field_type"/>
        </preConditions>

        <comment>Changed default values for start of messages fields to empty string</comment>

        <sql>
            UPDATE messages_template_field
            SET default_value=''
            WHERE template_field_type='START_OF_MESSAGES';
        </sql>

    </changeSet>

    <changeSet id="messages-26" author="Daniel Serkowski">
        <preConditions>
            <tableExists tableName="messages_scheduled_service"/>
            <tableExists tableName="messages_template"/>
            <not><columnExists tableName="messages_scheduled_service" columnName="channel_type"/></not>
            <not><columnExists tableName="messages_scheduled_service" columnName="service"/></not>
            <columnExists tableName="messages_template" columnName="channel_type"/>
            <columnExists tableName="messages_template" columnName="service"/>
        </preConditions>

        <comment>Fixed the issue with defining channel_type and service in messages_template instead in
            messages_scheduled_service (issue of the changeSet 'messages-24')</comment>

        <dropColumn tableName="messages_template" columnName="channel_type"/>
        <dropColumn tableName="messages_template" columnName="service"/>

        <addColumn tableName="messages_scheduled_service">
            <column name="channel_type" type="varchar(255)">
                <constraints nullable="false"/>
            </column>
            <column name="service" type="varchar(255)"/>
        </addColumn>
    </changeSet>

    <changeSet id="messages-27" author="Daniel Serkowski">
        <preConditions>
            <tableExists tableName="global_property"/>
        </preConditions>

        <comment>Resets messages.reschedulingStrategy to the default value (the property structure and its description
            have been changed). It is in order to apply the new changes to all already existing environments. The
            migration can be removed if the liquibase refactor will be conducted (eg. replacing all changes by one
            changeSet).</comment>

        <delete tableName="global_property">
            <where>property='messages.reschedulingStrategy'</where>
        </delete>
    </changeSet>

    <changeSet id="messages-28" author="Arkadiusz Lalo">
        <preConditions>
            <tableExists tableName="global_property"/>
        </preConditions>

        <comment>
            Resets message.consent.validation to the default value. It is in order to apply the new changes to all
            already existing environments. The migration can be removed if the liquibase refactor will be
            conducted (eg. replacing all changes by one changeSet).
        </comment>

        <delete tableName="global_property">
            <where>property='message.consent.validation'</where>
        </delete>
    </changeSet>

    <changeSet id="messages-29" author="Oskar Hinc">
        <preConditions>
            <tableExists tableName="global_property"/>
        </preConditions>

        <comment>
            Resets message.bestContactTime.default to the default value. It is in order to apply the new changes to all
            already existing environments. The migration can be removed if the liquibase refactor will be
            conducted (eg. replacing all changes by one changeSet).
        </comment>

        <delete tableName="global_property">
            <where>property='message.bestContactTime.default'</where>
        </delete>
    </changeSet>

    <changeSet id="messages-30" author="Arkadiusz Lalo">
        <preConditions onFail="MARK_RAN">
            <tableExists tableName="person_attribute_type" />
            <sqlCheck expectedResult="1">
                select count(*) from person_attribute_type
                    where uuid = 'dda246c6-c806-402a-9b7c-e2c1574a6441' and name like 'Patient status'
            </sqlCheck>
        </preConditions>

        <comment>
            Change the name and description for the person status attribute. It is in order to apply the new changes to all
            already existing environments. The migration can be removed if the liquibase refactor will be
            conducted (eg. replacing all changes by one changeSet).
        </comment>

        <update tableName="person_attribute_type">
            <column name="name" value="Person status" />
            <column name="description" value="Person status attribute" />
            <where>uuid = 'dda246c6-c806-402a-9b7c-e2c1574a6441'</where>
        </update>
    </changeSet>

    <changeSet id="messages-31" author="Michał Lewandowski">
        <preConditions>
            <tableExists tableName="messages_template"/>
            <tableExists tableName="messages_template_field"/>
            <tableExists tableName="messages_scheduled_service"/>
        </preConditions>

        <comment>Added view for dates, function with if for query, update Query to adjust to edge cases</comment>

        <sql>
            DROP VIEW IF EXISTS DIGITS_0;
            CREATE VIEW DIGITS_0 as SELECT 0 t0 union select 1 union select 2 union select 3 union select 4
            union  select 5 union select 6 union select 7 union select 8 union select 9;

            DROP VIEW IF EXISTS DIGITS_1;
            CREATE VIEW DIGITS_1 as SELECT 0 t1 union select 1 union select 2 union select 3 union select 4
            union  select 5 union select 6 union select 7 union select 8 union select 9;

            DROP VIEW IF EXISTS DIGITS_2;
            CREATE VIEW DIGITS_2 as SELECT 0 t2 union select 1 union select 2 union select 3 union select 4
            union  select 5 union select 6 union select 7 union select 8 union select 9;

            DROP VIEW IF EXISTS DIGITS_3;
            CREATE VIEW DIGITS_3 as SELECT 0 t3 union select 1 union select 2 union select 3 union select 4
            union  select 5 union select 6 union select 7 union select 8 union select 9;

            DROP VIEW IF EXISTS DIGITS_4;
            CREATE VIEW DIGITS_4 as SELECT 0 t4 union select 1 union select 2 union select 3 union select 4
            union  select 5 union select 6 union select 7 union select 8 union select 9;

            DROP VIEW IF EXISTS DATES_LIST;
            CREATE VIEW DATES_LIST as select adddate(CURRENT_DATE(),t4*10000 + t3*1000 + t2*100 + t1*10 + t0) selected_date
            from  DIGITS_0 as t0, DIGITS_1 as t1, DIGITS_2 as t2, DIGITS_3 as t3, DIGITS_4 as t4;
        </sql>

        <sql>
            Update messages_template set service_query =
            'select EXECUTION_DATE, MESSAGE_ID, CHANNEL_ID, null as STATUS_ID from
            (select TIMESTAMP(selected_date, :bestContactTime) AS EXECUTION_DATE, 1 AS MESSAGE_ID, :Service_type AS CHANNEL_ID
            from (select * from (select * from DATES_LIST) v where selected_date >= :Start_of_daily_messages and selected_date &lt;= :End_of_daily_messages
            and selected_date &lt; :endDate  and :Week_day_of_delivering_message
            like concat(\'%\',DAYNAME(selected_date),\'%\') and selected_date > GET_PREDICTION_START_DATE_FOR_ADHERENCE_DAILY(:patientId) ) dates ) temp
            where CHANNEL_ID != \'Deactivate service\'
            UNION
            Select mssg.msg_send_time as EXECUTION_DATE, 1 as MESSAGE_ID, mss.channel_type as CHANNEL_ID, mss.status as STATUS_ID from messages_scheduled_service mss
            join messages_patient_template mpt on mpt.messages_patient_template_id = mss.patient_template_id
            join messages_template mt on mt.messages_template_id = mpt.template_id
            join messages_scheduled_service_group mssg on mssg.messages_scheduled_service_group_id = mss.group_id
            where mt.name = \'Adherence report daily\' and mpt.patient_id = :patientId and \'PENDING, DELIVERED, FAILED\' like concat(\'%\',mss.status,\'%\') and mssg.msg_send_time > :startDate
            order by 1 desc;'
            where name = 'Adherence report daily';
        </sql>

        <sql>
            Update messages_patient_template set service_query = ''
            where template_id = (select messages_template_id from messages_template where name = 'Adherence report daily') ;
        </sql>
        <sql>
            ALTER TABLE messages_scheduled_service
            ADD CHECK (status != 'FUTURE');
        </sql>

    </changeSet>
    <changeSet id="messages-32" author="Michał Lewandowski">
        <sql splitStatements="false" stripComments="false">
            <![CDATA[

                CREATE FUNCTION `GET_PREDICTION_START_DATE_FOR_ADHERENCE_DAILY`(patient_id long)
                RETURNS DATE
                BEGIN
                DECLARE mssg_date DATE;
                SET mssg_date =
                    (SELECT EXECUTION_DATE FROM
                        (SELECT
                            mssg.msg_send_time AS EXECUTION_DATE,
                            1 AS MESSAGE_ID,
                            mss.channel_type AS CHANNEL_ID,
                            mss.status AS STATUS_ID
                        FROM messages_scheduled_service mss
                            JOIN messages_patient_template mpt on mpt.messages_patient_template_id = mss.patient_template_id
                            JOIN messages_template mt on mt.messages_template_id = mpt.template_id
                            JOIN messages_scheduled_service_group mssg on mssg.messages_scheduled_service_group_id = mss.group_id
                        WHERE
                            mt.name = 'Adherence report daily'
                            AND mpt.patient_id = patient_id
                        ORDER BY 1 DESC)
                    a LIMIT 1);
                RETURN if(mssg_date > NOW(), mssg_date, NOW());
                END

            ]]>
        </sql>
    </changeSet>

    <changeSet id="messages-33" author="Michał Lewandowski">
        <preConditions>
            <tableExists tableName="messages_template"/>
            <tableExists tableName="messages_template_field"/>
            <tableExists tableName="messages_scheduled_service"/>
        </preConditions>

        <comment>Added view for dates, function with if for query, update Query to adjust to edge cases</comment>

        <sql>
            Update messages_template set service_query =
            'select EXECUTION_DATE, MESSAGE_ID, CHANNEL_ID, null as STATUS_ID, visitTypeId, locationId, dateStarted from
            (select TIMESTAMP(selected_date, :bestContactTime ) AS EXECUTION_DATE, 1 AS MESSAGE_ID, :Service_type AS
            CHANNEL_ID, visitTypeId, locationId, visit_dates as dateStarted
            from (select * from (select * from DATES_LIST) dates_list
            where selected_date >= :Start_of_messages and selected_date &lt;= :End_of_messages) dates_in_range
            JOIN (Select date_started as visit_dates, visit_type_id as visitTypeId, location_id as locationId from visit
            where patient_id = :patientId ) dates_of_visit
            where (select property_value from global_property
            where property =\'message.daysToCallBeforeVisit.default\') like concat(\'%\',datediff(visit_dates, selected_date),\'%\')
            and date(visit_dates) !=  selected_date )dates_before_visit
            where EXECUTION_DATE &lt;= :endDate and EXECUTION_DATE >= GET_PREDICTION_START_DATE_FOR_VISIT(:patientId)
            and CHANNEL_ID != \'Deactivate service\'
            Union
            Select mssg.msg_send_time as EXECUTION_DATE, 1 as MESSAGE_ID, mss.channel_type as CHANNEL_ID,
            mss.status as STATUS_ID, null as visitTypeId, null as locationId, null as dateStarted
            from messages_scheduled_service mss
            join messages_patient_template mpt on mpt.messages_patient_template_id = mss.patient_template_id
            join messages_template mt on mt.messages_template_id = mpt.template_id
            join messages_scheduled_service_group mssg on mssg.messages_scheduled_service_group_id = mss.group_id
            where mt.name = \'Visit reminder\' and mpt.patient_id = :patientId and mssg.msg_send_time > :startDate
            order by 1 desc;'
            where name = 'Visit reminder';
        </sql>

        <sql>
            Update messages_patient_template set service_query = ''
            where template_id = (select messages_template_id from messages_template where name = 'Visit reminder') ;
        </sql>
    </changeSet>

    <changeSet id="messages-34" author="Michał Lewandowski">
        <sql splitStatements="false" stripComments="false">
            <![CDATA[
                        CREATE FUNCTION `GET_PREDICTION_START_DATE_FOR_VISIT`(patient_id long)
                        RETURNS date
                        BEGIN
                        DECLARE mssg_date DATE;
                        SET mssg_date =
                            (SELECT EXECUTION_DATE FROM
                                (SELECT mssg.msg_send_time AS EXECUTION_DATE, 1 AS MESSAGE_ID,
                                    mss.channel_type AS CHANNEL_ID, mss.status AS STATUS_ID
                                FROM messages_scheduled_service mss
                                    JOIN messages_patient_template mpt on mpt.messages_patient_template_id = mss.patient_template_id
                                    JOIN messages_template mt on mt.messages_template_id = mpt.template_id
                                    JOIN messages_scheduled_service_group mssg on mssg.messages_scheduled_service_group_id = mss.group_id
                                WHERE
                                    mt.name = 'Visit reminder'
                                    AND mpt.patient_id = patient_id
                                ORDER BY 1 DESC)
                               a LIMIT 1);
                        RETURN if(mssg_date > NOW(), mssg_date, NOW());
                        END
                ]]>
        </sql>
    </changeSet>

    <changeSet id="messages-35" author="Michał Lewandowski">
        <preConditions>
            <tableExists tableName="messages_template"/>
            <tableExists tableName="messages_template_field"/>
            <tableExists tableName="messages_scheduled_service"/>
        </preConditions>

        <comment>Adjust date conditions</comment>

        <sql>
            Update messages_template set service_query =
            'select EXECUTION_DATE, MESSAGE_ID, CHANNEL_ID, null as STATUS_ID from
            (select TIMESTAMP(selected_date, :bestContactTime) AS EXECUTION_DATE, 1 AS MESSAGE_ID, :Service_type AS CHANNEL_ID
            from (select * from (select * from DATES_LIST) v
            where selected_date >= :Start_of_daily_messages
                and selected_date &lt;= :End_of_daily_messages
                and selected_date &lt;= :endDate and selected_date >= :startDate
                and :Week_day_of_delivering_message
                    like concat(\'%\',DAYNAME(selected_date),\'%\') ) dates ) temp
            where EXECUTION_DATE > GET_PREDICTION_START_DATE_FOR_ADHERENCE_DAILY(:patientId)
                and CHANNEL_ID != \'Deactivate service\'
            UNION
            Select mssg.msg_send_time as EXECUTION_DATE, 1 as MESSAGE_ID, mss.channel_type as CHANNEL_ID, mss.status as STATUS_ID
            from messages_scheduled_service mss
                join messages_patient_template mpt on mpt.messages_patient_template_id = mss.patient_template_id
                join messages_template mt on mt.messages_template_id = mpt.template_id
                join messages_scheduled_service_group mssg on mssg.messages_scheduled_service_group_id = mss.group_id
            where mt.name = \'Adherence report daily\'
                and mpt.patient_id = :patientId
                and mssg.msg_send_time >= :startDate
                and mssg.msg_send_time &lt;= :endDate
            order by 1 desc;'
            where name = 'Adherence report daily';
        </sql>

        <sql>
            Update messages_template set service_query =
            'select EXECUTION_DATE, MESSAGE_ID, CHANNEL_ID, null as STATUS_ID, visitTypeId, locationId, dateStarted from
            (select TIMESTAMP(selected_date, :bestContactTime ) AS EXECUTION_DATE, 1 AS MESSAGE_ID, :Service_type AS
            CHANNEL_ID, visitTypeId, locationId, visit_dates as dateStarted
            from (select * from (select * from DATES_LIST) dates_list
            where selected_date >= :Start_of_messages
                and selected_date &lt;= :End_of_messages
            ) dates_in_range
            JOIN (Select date_started as visit_dates, visit_type_id as visitTypeId, location_id as locationId from visit
            where patient_id = :patientId ) dates_of_visit
            where (select property_value from global_property
            where property =\'message.daysToCallBeforeVisit.default\') like concat(\'%\',datediff(visit_dates, selected_date),\'%\')
                and date(visit_dates) !=  selected_date )dates_before_visit
            where EXECUTION_DATE &lt;= :endDate and EXECUTION_DATE >= :startDate
                and EXECUTION_DATE >= GET_PREDICTION_START_DATE_FOR_VISIT(:patientId)
                and CHANNEL_ID != \'Deactivate service\'
            Union
            Select mssg.msg_send_time as EXECUTION_DATE, 1 as MESSAGE_ID, mss.channel_type as CHANNEL_ID,
            mss.status as STATUS_ID, null as visitTypeId, null as locationId, null as dateStarted
            from messages_scheduled_service mss
                join messages_patient_template mpt on mpt.messages_patient_template_id = mss.patient_template_id
                join messages_template mt on mt.messages_template_id = mpt.template_id
                join messages_scheduled_service_group mssg on mssg.messages_scheduled_service_group_id = mss.group_id
            where mt.name = \'Visit reminder\'
                and mpt.patient_id = :patientId
                and mssg.msg_send_time >= :startDate
                and mssg.msg_send_time &lt;= :endDate
            order by 1 desc;'
            where name = 'Visit reminder';
        </sql>
    </changeSet>

    <changeSet id="messages-36" author="Arkadiusz Lalo">
        <preConditions onFail="MARK_RAN">
            <tableExists tableName="global_property"/>
            <sqlCheck expectedResult="1">
                select count(*) from global_property
                where property = 'message.personStatus.configuration'
            </sqlCheck>
        </preConditions>

        <comment>Resets message.personStatus.configuration to the default value (the property structure and its description
            have been changed). It is in order to apply the new changes to all already existing environments. The
            migration can be removed if the liquibase refactor will be conducted (eg. replacing all changes by one
            changeSet).</comment>

        <delete tableName="global_property">
            <where>property='message.personStatus.configuration'</where>
        </delete>
    </changeSet>
    <changeSet id="messages-37" author="Michał Lewandowski">
        <sql>
            DROP FUNCTION IF EXISTS GET_PREDICTION_START_DATE_FOR_VISIT;
        </sql>
        <sql splitStatements="false" stripComments="false">

            <![CDATA[
                        CREATE FUNCTION `GET_PREDICTION_START_DATE_FOR_VISIT`(patient_id long)
                        RETURNS DATETIME
                        BEGIN
                        DECLARE mssg_date DATE;
                        SET mssg_date =
                            (SELECT EXECUTION_DATE FROM
                                (SELECT mssg.msg_send_time AS EXECUTION_DATE, 1 AS MESSAGE_ID,
                                    mss.channel_type AS CHANNEL_ID, mss.status AS STATUS_ID
                                FROM messages_scheduled_service mss
                                    JOIN messages_patient_template mpt on mpt.messages_patient_template_id = mss.patient_template_id
                                    JOIN messages_template mt on mt.messages_template_id = mpt.template_id
                                    JOIN messages_scheduled_service_group mssg on mssg.messages_scheduled_service_group_id = mss.group_id
                                WHERE
                                    mt.name = 'Visit reminder'
                                    AND mpt.patient_id = patient_id
                                ORDER BY 1 DESC)
                               a LIMIT 1);
                        RETURN if(mssg_date > NOW(), mssg_date, NOW());
                        END
                ]]>
        </sql>
        <sql>
            DROP FUNCTION IF EXISTS GET_PREDICTION_START_DATE_FOR_ADHERENCE_DAILY;
        </sql>
        <sql splitStatements="false" stripComments="false">

            <![CDATA[
                CREATE FUNCTION `GET_PREDICTION_START_DATE_FOR_ADHERENCE_DAILY`(patient_id long)
                RETURNS DATETIME
                BEGIN
                DECLARE mssg_date DATE;
                SET mssg_date =
                    (SELECT EXECUTION_DATE FROM
                        (SELECT
                            mssg.msg_send_time AS EXECUTION_DATE,
                            1 AS MESSAGE_ID,
                            mss.channel_type AS CHANNEL_ID,
                            mss.status AS STATUS_ID
                        FROM messages_scheduled_service mss
                            JOIN messages_patient_template mpt on mpt.messages_patient_template_id = mss.patient_template_id
                            JOIN messages_template mt on mt.messages_template_id = mpt.template_id
                            JOIN messages_scheduled_service_group mssg on mssg.messages_scheduled_service_group_id = mss.group_id
                        WHERE
                            mt.name = 'Adherence report daily'
                            AND mpt.patient_id = patient_id
                        ORDER BY 1 DESC)
                    a LIMIT 1);
                RETURN if(mssg_date > NOW(), mssg_date, NOW());
                END

            ]]>
        </sql>
    </changeSet>
    <changeSet id="messages-38" author="Michał Lewandowski">
        <sql>
            Update messages_template_field set default_value = 'NO_DATE|EMPTY' where template_field_type = 'END_OF_MESSAGES';
        </sql>
    </changeSet>

    <changeSet id="messages-39" author="Artur Fijał">
        <preConditions>
            <not><tableExists tableName="messages_template_field_default_values"/></not>
        </preConditions>
        <comment>Created the template_field_default_values table</comment>
        <createTable tableName="messages_template_field_default_values">
            <column name="messages_template_field_default_values_id" type="int" autoIncrement="true">
                <constraints primaryKey="true"/>
            </column>
            <column name="uuid" type="char(38)">
                <constraints nullable="false" unique="true"/>
            </column>
            <column name="relationship_type" type="int">
                <constraints nullable="false"/>
            </column>
            <column name="relationship_direction" type="TEXT">
                <constraints nullable="false"/>
            </column>
            <column name="template_field" type="int">
                <constraints nullable="false"/>
            </column>
            <column name="default_value" type="TEXT"/>
            <column name="creator" type="int"/>
            <column name="changed_by" type="int"/>
            <column name="date_changed" type="datetime"/>
            <column name="date_created" type="datetime">
                <constraints nullable="false"/>
            </column>
            <column name="date_voided" type="datetime"/>
            <column name="void_reason" type="varchar(255)"/>
            <column name="voided" type="BOOLEAN" defaultValueBoolean="false">
                <constraints nullable="false"/>
            </column>
            <column name="voided_by" type="int"/>
        </createTable>
        <addForeignKeyConstraint constraintName="messages_template_field_default_values_relationship_type_fk"
                                 baseTableName="messages_template_field_default_values" baseColumnNames="relationship_type"
                                 referencedTableName="relationship_type" referencedColumnNames="relationship_type_id"/>
        <addForeignKeyConstraint constraintName="messages_template_field_default_values_template_field_fk"
                                 baseTableName="messages_template_field_default_values" baseColumnNames="template_field"
                                 referencedTableName="messages_template_field" referencedColumnNames="messages_template_field_id"/>
    </changeSet>

    <changeSet id="messages-40" author="Michał Lewandowski">
        <preConditions>
            <tableExists tableName="messages_template"/>
            <tableExists tableName="messages_template_field"/>
            <sqlCheck expectedResult="0">
                SELECT COUNT(*) FROM messages_template
                WHERE uuid = '96d93c15-3884-11ea-b1e9-0242ac160002'
            </sqlCheck>
        </preConditions>

        <comment>Added new inserts for templates and template fields</comment>

        <sql>
            INSERT INTO messages_template
            (
                service_query, service_query_type, name, creator, uuid, date_created
            )
            VALUES(
                'SELECT EXECUTION_DATE, MESSAGE_ID, CHANNEL_ID, null as STATUS_ID FROM
                (SELECT TIMESTAMP(selected_date, :bestContactTime) AS EXECUTION_DATE, 1 AS MESSAGE_ID, :Service_type AS CHANNEL_ID
                FROM (SELECT * FROM (SELECT * FROM DATES_LIST) v
                WHERE selected_date >= :Start_of_weekly_messages
                AND selected_date &lt;= :End_of_weekly_messages
                AND selected_date &lt;= :endDate
                AND selected_date >= :startDate
                AND :Week_day_of_delivering_message
                like concat(\'%\',DAYNAME(selected_date),\'%\') ) dates ) temp
                WHERE EXECUTION_DATE > GET_PREDICTION_START_DATE_FOR_ADHERENCE_WEEKLY(:patientId)
                AND CHANNEL_ID != \'Deactivate service\'
                UNION
                SELECT mssg.msg_send_time as EXECUTION_DATE, 1 as MESSAGE_ID, mss.channel_type as CHANNEL_ID, mss.status as STATUS_ID
                FROM messages_scheduled_service mss
                JOIN messages_patient_template mpt on mpt.messages_patient_template_id = mss.patient_template_id
                JOIN messages_template mt on mt.messages_template_id = mpt.template_id
                JOIN messages_scheduled_service_group mssg on mssg.messages_scheduled_service_group_id = mss.group_id
                WHERE mt.name = \'Adherence report weekly\'
                AND mpt.patient_id = :patientId
                AND mssg.msg_send_time >= :startDate
                AND mssg.msg_send_time &lt;= :endDate
                ORDER BY 1 DESC;',
                'SQL',
                'Adherence report weekly',
                1,
                '96d93c15-3884-11ea-b1e9-0242ac160002',
                now()
            );
        </sql>

        <sql>
            INSERT INTO messages_template_field
            (
                name, mandatory, default_value, template_id, template_field_type, creator, uuid, date_created
            )
            VALUES(
                'Service type',
                1,
                'Deactivate service',
                (SELECT messages_template_id FROM messages_template WHERE uuid = '96d93c15-3884-11ea-b1e9-0242ac160002'
                ),
                'SERVICE_TYPE',
                1,
                'ce1ae5a2-3884-11ea-b1e9-0242ac160002',
                now()
            );
        </sql>

        <sql>
            INSERT INTO messages_template_field
            (
                name, mandatory, default_value, template_id, template_field_type, creator, uuid, date_created
            )
            VALUES(
                'Week day of delivering message',
                1,
                'Monday',
                (SELECT messages_template_id FROM messages_template WHERE uuid = '96d93c15-3884-11ea-b1e9-0242ac160002'),
                'DAY_OF_WEEK_SINGLE',
                1,
                'dce23c53-3884-11ea-b1e9-0242ac160002',
                now()
            );
        </sql>

        <sql>
            INSERT INTO messages_template_field
            (
                name, mandatory, default_value, template_id, template_field_type, creator, uuid, date_created
            )
            VALUES(
                'Start of weekly messages',
                0,
                '',
                (SELECT messages_template_id FROM messages_template WHERE uuid = '96d93c15-3884-11ea-b1e9-0242ac160002'),
                'START_OF_MESSAGES',
                1,
                'fc9cf90e-3884-11ea-b1e9-0242ac160002',
                now()
            );
        </sql>

        <sql>
            INSERT INTO messages_template_field
            (
                name, mandatory, default_value, template_id, template_field_type, creator, uuid, date_created
            )
            VALUES(
                'End of weekly messages',
                1,
                'NO_DATE|EMPTY',
                (SELECT messages_template_id FROM messages_template WHERE uuid = '96d93c15-3884-11ea-b1e9-0242ac160002'),
                'END_OF_MESSAGES',
                1,
                'f0f4750c-3884-11ea-b1e9-0242ac160002',
                now()
            );
        </sql>

        <sql splitStatements="false" stripComments="false">
            <![CDATA[
                CREATE FUNCTION `GET_PREDICTION_START_DATE_FOR_ADHERENCE_WEEKLY`(patient_id long)
                RETURNS DATETIME
                BEGIN
                DECLARE mssg_date DATE;
                SET mssg_date =
                    (SELECT EXECUTION_DATE FROM
                        (SELECT mssg.msg_send_time AS EXECUTION_DATE, 1 AS MESSAGE_ID,
                            mss.channel_type AS CHANNEL_ID, mss.status AS STATUS_ID
                        FROM messages_scheduled_service mss
                            JOIN messages_patient_template mpt on mpt.messages_patient_template_id = mss.patient_template_id
                            JOIN messages_template mt on mt.messages_template_id = mpt.template_id
                            JOIN messages_scheduled_service_group mssg on mssg.messages_scheduled_service_group_id = mss.group_id
                        WHERE
                            mt.name = 'Adherence report weekly'
                            AND mpt.patient_id = patient_id
                        ORDER BY 1 DESC)
                       a LIMIT 1);
                RETURN if(mssg_date > NOW(), mssg_date, NOW());
                END
            ]]>
        </sql>
    </changeSet>

    <changeSet id="messages-41" author="Arkadiusz Lalo">
        <preConditions onFail="MARK_RAN">
            <tableExists tableName="global_property"/>
            <sqlCheck expectedResult="1">
                select count(*) from global_property
                where property = 'message.personStatus.configuration'
            </sqlCheck>
        </preConditions>

        <comment>Resets message.personStatus.configuration to the default value (the property structure and its description
            have been changed). It is in order to apply the new changes to all already existing environments. The
            migration can be removed if the liquibase refactor will be conducted (eg. replacing all changes by one
            changeSet).</comment>

        <delete tableName="global_property">
            <where>property='message.personStatus.configuration'</where>
        </delete>
    </changeSet>

    <changeSet id="messages-42" author="Dawid Ruchniewicz">
        <preConditions>
            <tableExists tableName="messages_template"/>
            <tableExists tableName="messages_template_field"/>
        </preConditions>
        <comment>Added query for Health tip service and its template fields</comment>
        <sql>
            INSERT INTO messages_template
            (
                service_query, service_query_type, name, creator, uuid, date_created
            )
            VALUES(
                'SELECT EXECUTION_DATE, MESSAGE_ID, CHANNEL_ID, NULL AS STATUS_ID, HEALTH_TIP_ID
                FROM (
                SELECT TIMESTAMP(selected_date, times) AS EXECUTION_DATE, 1 AS MESSAGE_ID, :Service_type AS CHANNEL_ID
                FROM (
                SELECT *
                FROM
                (SELECT *
                FROM DATES_LIST) dates_list
                WHERE selected_date >= :startDate
                AND selected_date &lt;= :endDate
                AND selected_date >= :Start_of_messages
                AND selected_date &lt;= :End_of_messages
                AND (DAYOFMONTH(selected_date) &lt; IF ((
                SELECT value
                FROM messages_template_field_value WHERE template_field_id = (
                SELECT messages_template_field_id
                FROM messages_template_field WHERE name = \'Frequency of the message\'
                AND template_id = (SELECT messages_template_id FROM messages_template WHERE name = \'Health tip\'))) = \'Weekly\'
                OR (SELECT value FROM messages_template_field_value WHERE template_field_id = (SELECT messages_template_field_id FROM messages_template_field where name = \'Frequency of the message\'
                AND template_id = (SELECT messages_template_id FROM messages_template WHERE name = \'Health tip\'))) = \'Daily\', 32, 8) )
                AND :Week_day_of_delivering_message like concat(\'%\',DAYNAME(selected_date),\'%\') ) dates
                JOIN (SELECT :bestContactTime times) timeslist) temp
                JOIN (SELECT group_concat(HT_ID) as HEALTH_TIP_ID
                FROM ( (SELECT concept_id as HT_ID FROM concept_set as cs WHERE cs.concept_set
                IN (SELECT concept_id FROM concept_name cn WHERE :Categories_of_the_message like concat(\'%\', cn.name, \'%\'))
                AND concept_id not IN (SELECT question FROM messages_actor_response mar
                JOIN messages_scheduled_service mss on mar.scheduled_service_id = mss.messages_scheduled_service_id
                JOIN messages_patient_template mpt on mss.patient_template_id = mpt.messages_patient_template_id
                JOIN messages_template mt on mpt.template_id = mt.messages_template_id
                WHERE mt.name = \'Health tip\' AND mpt.patient_id = :patientId AND mss.status = \'DELIVERED\') order by cs.sort_weight ASC limit 3) tips)) gc
                WHERE EXECUTION_DATE > GET_PREDICTION_START_DATE_FOR_HEALTH_TIP(:patientId) AND CHANNEL_ID != \'Deactivate service\'
                Union
                SELECT mssg.msg_send_time as EXECUTION_DATE, 1 as MESSAGE_ID, mss.channel_type as CHANNEL_ID,
                mss.status as STATUS_ID, null as HEALTH_TIP_ID
                FROM messages_scheduled_service mss
                JOIN messages_patient_template mpt on mpt.messages_patient_template_id = mss.patient_template_id
                JOIN messages_template mt on mt.messages_template_id = mpt.template_id
                JOIN messages_scheduled_service_group mssg on mssg.messages_scheduled_service_group_id = mss.group_id
                WHERE mt.name = \'Health tip\'
                AND mpt.patient_id = :patientId
                AND mssg.msg_send_time >= :startDate
                AND mssg.msg_send_time &lt;= :endDate
                ORDER BY 1 DESC ;',
                'SQL',
                'Health tip',
                1,
                '9556f9ab-20b2-11ea-ac12-0242c0a82002',
                now()
            );
        </sql>
        <sql>
            INSERT INTO messages_template_field
            (
                name, mandatory, default_value, template_id, template_field_type, creator, uuid, date_created
            )
            VALUES(
                'Service type',
                1,
                'Deactivate service',
                (SELECT messages_template_id FROM messages_template WHERE uuid = '9556f9ab-20b2-11ea-ac12-0242c0a82002'),
                'SERVICE_TYPE',
                1,
                '95570356-20b2-11ea-ac12-0242c0a82002',
                now()
            );
        </sql>
        <sql>
            INSERT INTO messages_template_field
            (
                name, mandatory, default_value, template_id, template_field_type, creator, uuid, date_created
            )
            VALUES(
                'Frequency of the message',
                1,
                'Daily',
                (SELECT messages_template_id FROM messages_template WHERE uuid = '9556f9ab-20b2-11ea-ac12-0242c0a82002'),
                'MESSAGING_FREQUENCY_DAILY_OR_WEEKLY_OR_MONTHLY',
                1,
                '95570d01-20b2-11ea-ac12-0242c0a82002',
                now()
            );
        </sql>
        <sql>
            INSERT INTO messages_template_field
            (
                name, mandatory, default_value, template_id, template_field_type, creator, uuid, date_created
            )
            VALUES(
                'Week day of delivering message',
                1,
                'Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday',
                (SELECT messages_template_id FROM messages_template WHERE uuid = '9556f9ab-20b2-11ea-ac12-0242c0a82002'),
                'DAY_OF_WEEK',
                1,
                '955716a6-20b2-11ea-ac12-0242c0a82002',
                now()
            );
        </sql>
        <sql>
            INSERT INTO messages_template_field
            (
                name, mandatory, default_value, template_id, template_field_type, creator, uuid, date_created
            )
            VALUES(
                'Start of messages',
                0,
                '',
                (SELECT messages_template_id FROM messages_template WHERE uuid = '9556f9ab-20b2-11ea-ac12-0242c0a82002'),
                'START_OF_MESSAGES',
                1,
                '9557232f-20b2-11ea-ac12-0242c0a82002',
                now()
            );
        </sql>
        <sql>
            INSERT INTO messages_template_field
            (
                name, mandatory, default_value, template_id, template_field_type, creator, uuid, date_created
            )
            VALUES(
                'Categories of the message',
                1,
                'Category1',
                (SELECT messages_template_id FROM messages_template WHERE uuid = '9556f9ab-20b2-11ea-ac12-0242c0a82002'),
                'CATEGORY_OF_MESSAGE',
                1,
                '95572cd9-20b2-11ea-ac12-0242c0a82002',
                now()
            );
        </sql>
        <sql>
            INSERT INTO messages_template_field
            (
                name, mandatory, default_value, template_id, template_field_type, creator, uuid, date_created
            )
            VALUES(
                'End of messages',
                1,
                'NO_DATE|EMPTY',
                (SELECT messages_template_id FROM messages_template WHERE uuid = '9556f9ab-20b2-11ea-ac12-0242c0a82002'),
                'END_OF_MESSAGES',
                1,
                '95573791-20b2-11ea-ac12-0242c0a82002',
                now()
            );
        </sql>
    </changeSet>
    <changeSet id="messages-43" author="Michał Lewandowski">
        <sql splitStatements="false" stripComments="false">
            <![CDATA[
                        CREATE FUNCTION `GET_PREDICTION_START_DATE_FOR_HEALTH_TIP`(patient_id long)
                        RETURNS DATETIME
                        BEGIN
                        DECLARE mssg_date DATE;
                        SET mssg_date =
                            (SELECT EXECUTION_DATE FROM
                                (SELECT mssg.msg_send_time AS EXECUTION_DATE, 1 AS MESSAGE_ID,
                                    mss.channel_type AS CHANNEL_ID, mss.status AS STATUS_ID
                                FROM messages_scheduled_service mss
                                    JOIN messages_patient_template mpt on mpt.messages_patient_template_id = mss.patient_template_id
                                    JOIN messages_template mt on mt.messages_template_id = mpt.template_id
                                    JOIN messages_scheduled_service_group mssg on mssg.messages_scheduled_service_group_id = mss.group_id
                                WHERE
                                    mt.name = 'Health tip'
                                    AND mpt.patient_id = patient_id
                                ORDER BY 1 DESC)
                               a LIMIT 1);
                        RETURN if(mssg_date > NOW(), mssg_date, NOW());
                        END
                ]]>
        </sql>
    </changeSet>
    <changeSet id="messages-44" author="Michał Lewandowski">
        <preConditions>
            <tableExists tableName="messages_template"/>
            <tableExists tableName="messages_template_field"/>
            <tableExists tableName="messages_scheduled_service"/>
        </preConditions>

        <comment>Fix Health tip Query</comment>

        <sql>
            Update messages_template set service_query =
            'SELECT EXECUTION_DATE, MESSAGE_ID, CHANNEL_ID, NULL AS STATUS_ID, HEALTH_TIP_ID
            FROM (
            SELECT TIMESTAMP(selected_date, times) AS EXECUTION_DATE, 1 AS MESSAGE_ID, :Service_type AS CHANNEL_ID
            FROM (
            SELECT *
            FROM
            (SELECT *
            FROM DATES_LIST) dates_list
            WHERE selected_date >= :startDate
            AND selected_date &lt;= :endDate
            AND selected_date >= :Start_of_messages
            AND selected_date &lt;= :End_of_messages
            AND (DAYOFMONTH(selected_date) &lt; IF (
            :Frequency_of_the_message = \'Weekly\'
            OR :Frequency_of_the_message = \'Daily\', 32, 8) )
            AND :Week_day_of_delivering_message like concat(\'%\',DAYNAME(selected_date),\'%\') ) dates
            JOIN (SELECT :bestContactTime times) timeslist) temp
            JOIN (SELECT group_concat(HT_ID) as HEALTH_TIP_ID
            FROM ( (SELECT concept_id as HT_ID FROM concept_set as cs WHERE cs.concept_set
            IN (SELECT concept_id FROM concept_name cn WHERE :Categories_of_the_message like concat(\'%\', cn.name, \'%\'))
            AND concept_id not IN (SELECT question FROM messages_actor_response mar
            JOIN messages_scheduled_service mss on mar.scheduled_service_id = mss.messages_scheduled_service_id
            JOIN messages_patient_template mpt on mss.patient_template_id = mpt.messages_patient_template_id
            JOIN messages_template mt on mpt.template_id = mt.messages_template_id
            WHERE mt.name = \'Health tip\' AND mpt.patient_id = :patientId AND mss.status = \'DELIVERED\') order by cs.sort_weight ASC limit 3) tips)) gc
            WHERE EXECUTION_DATE > GET_PREDICTION_START_DATE_FOR_HEALTH_TIP(:patientId) AND CHANNEL_ID != \'Deactivate service\'
            Union
            SELECT mssg.msg_send_time as EXECUTION_DATE, 1 as MESSAGE_ID, mss.channel_type as CHANNEL_ID,
            mss.status as STATUS_ID, null as HEALTH_TIP_ID
            FROM messages_scheduled_service mss
            JOIN messages_patient_template mpt on mpt.messages_patient_template_id = mss.patient_template_id
            JOIN messages_template mt on mt.messages_template_id = mpt.template_id
            JOIN messages_scheduled_service_group mssg on mssg.messages_scheduled_service_group_id = mss.group_id
            WHERE mt.name = \'Health tip\'
            AND mpt.patient_id = :patientId
            AND mssg.msg_send_time >= :startDate
            AND mssg.msg_send_time &lt;= :endDate
            ORDER BY 1 DESC ;'
            where name = 'Health tip';
        </sql>
    </changeSet>

    <changeSet id="messages-45" author="Daniel Serkowski">
        <preConditions>
            <tableExists tableName="messages_template_field"/>
            <sqlCheck expectedResult="1">
                select count(*) from messages_template_field
                where uuid = '95572cd9-20b2-11ea-ac12-0242c0a82002'
            </sqlCheck>
        </preConditions>

        <comment>Updating default_value of Categories of the message for the HealthTip messages
            (removing the invalid value 'Category1)'</comment>

        <update tableName="messages_template_field">
            <column name="default_value" value=""/>
            <where>uuid = '95572cd9-20b2-11ea-ac12-0242c0a82002' and default_value = 'Category1'</where>
        </update>
    </changeSet>

    <changeSet id="messages-46" author="Dawid Ruchniewicz">
        <preConditions>
            <tableExists tableName="messages_template"/>
            <tableExists tableName="messages_template_field"/>
            <tableExists tableName="messages_scheduled_service"/>
        </preConditions>
        <comment>Added Adherence Feedback service query</comment>
        <sql>
            INSERT INTO messages_template
            (service_query, service_query_type, name, creator, uuid, date_created)
            VALUES(
            'SELECT EXECUTION_DATE, MESSAGE_ID, CHANNEL_ID, null as STATUS_ID, ADHERENCE_LEVEL, ADHERENCE_TREND
            FROM (SELECT TIMESTAMP(selected_date, times) AS EXECUTION_DATE, 1 AS MESSAGE_ID, :Service_type AS CHANNEL_ID
            FROM (SELECT * FROM (SELECT *
            FROM DATES_LIST) dates_list
            WHERE (dayofmonth(selected_date) &lt; IF (:Frequency_of_the_message = \'Weekly\', 32, 8))
            AND selected_date >= :Start_of_messages and selected_date &lt;= :End_of_messages
            AND :Week_day_of_delivering_message like concat(\'%\',DAYNAME(selected_date),\'%\')) dates
            JOIN (SELECT :bestContactTime times) timeslist) temp
            JOIN (SELECT if(sum(text_response = \'YES\') / sum(text_response = \'YES\' OR text_response = \'NO\') >
            (SELECT (select property_value FROM global_property
            WHERE property = \'messages.cutOffScoreForHighMediumAdherenceLevel\') / 100), \'HIGH\',
            (SELECT IF(sum(text_response = \'YES\') / sum(text_response = \'YES\' OR text_response = \'NO\') >
            (SELECT (SELECT property_value FROM global_property
            WHERE property = \'messages.cutOffScoreForMediumLowAdherenceLevel\') / 100), \'MEDIUM\', \'LOW\')
            FROM messages_actor_response mar
            JOIN messages_scheduled_service mss on mar.scheduled_service_id = mss.messages_scheduled_service_id
            JOIN messages_patient_template mpt on mss.patient_template_id = mpt.messages_patient_template_id
            JOIN messages_template mt on mpt.template_id = mt.messages_template_id
            WHERE mt.name = \'Adherence report daily\' OR mt.name = \'Adherence report weekly\'
            AND mar.answered_time >= (select date_add(:Start_of_messages, interval -
            (SELECT property_value FROM global_property
            WHERE property = \'messages.benchmarkPeriod\') day)) AND mar.answered_time &lt;= :Start_of_messages)) as ADHERENCE_LEVEL
            FROM messages_actor_response mar
            JOIN messages_scheduled_service mss on mar.scheduled_service_id = mss.messages_scheduled_service_id
            JOIN messages_patient_template mpt on mss.patient_template_id = mpt.messages_patient_template_id
            JOIN messages_template mt on mpt.template_id = mt.messages_template_id
            WHERE mt.name = \'Adherence report daily\' OR mt.name = \'Adherence report weekly\'
            AND mar.answered_time >= (select date_add(:Start_of_messages, interval -
            (SELECT property_value FROM global_property
            WHERE property = \'messages.benchmarkPeriod\') day)) AND mar.answered_time &lt;= :Start_of_messages) adhLev
            JOIN (SELECT if(sum(text_response = \'YES\') / sum(text_response = \'YES\' OR text_response = \'NO\') -
            (SELECT sum(text_response = \'YES\') / sum(text_response = \'YES\' OR text_response = \'NO\')
            FROM messages_actor_response mar
            JOIN messages_scheduled_service mss on mar.scheduled_service_id = mss.messages_scheduled_service_id
            JOIN messages_patient_template mpt on mss.patient_template_id = mpt.messages_patient_template_id
            JOIN messages_template mt on mpt.template_id = mt.messages_template_id
            WHERE mt.name = \'Adherence report daily\' OR mt.name = \'Adherence report weekly\'
            AND mar.answered_time >= (select date_add(:Start_of_messages, interval -
            (SELECT 2 * (SELECT property_value FROM global_property WHERE property = \'messages.benchmarkPeriod\')) day))
            AND mar.answered_time &lt;= (SELECT date_add(:Start_of_messages, interval -
            (SELECT property_value FROM global_property WHERE property = \'messages.benchmarkPeriod\') day))) >
            (SELECT (SELECT property_value FROM global_property
            WHERE property = \'messages.cutOffScoreForAdherenceTrend\') / 100), \'RISING\',
            (SELECT if(sum(text_response = \'YES\') / sum(text_response = \'YES\' OR text_response = \'NO\') -
            (SELECT sum(text_response = \'YES\') / sum(text_response = \'YES\' OR text_response = \'NO\')
            FROM messages_actor_response mar
            JOIN messages_scheduled_service mss on mar.scheduled_service_id = mss.messages_scheduled_service_id
            JOIN messages_patient_template mpt on mss.patient_template_id = mpt.messages_patient_template_id
            JOIN messages_template mt on mpt.template_id = mt.messages_template_id
            WHERE mt.name = \'Adherence report daily\'
            OR mt.name = \'Adherence report weekly\'
            AND mar.answered_time >= (SELECT date_add(:Start_of_messages, interval -
            (SELECT 2 * (SELECT property_value FROM global_property WHERE property = \'messages.benchmarkPeriod\')) day))
            AND mar.answered_time &lt;= (SELECT date_add(:Start_of_messages, interval -
            (SELECT property_value FROM global_property WHERE property = \'messages.benchmarkPeriod\') day))
            ) &lt;-1 * (SELECT (SELECT property_value FROM global_property
            WHERE property = \'messages.cutOffScoreForAdherenceTrend\') / 100), \'FALLING\', \'STABLE\'))) as ADHERENCE_TREND
            FROM messages_actor_response mar
            JOIN messages_scheduled_service mss on mar.scheduled_service_id = mss.messages_scheduled_service_id
            JOIN messages_patient_template mpt on mss.patient_template_id = mpt.messages_patient_template_id
            JOIN messages_template mt on mpt.template_id = mt.messages_template_id
            WHERE mt.name = \'Adherence report daily\' OR mt.name = \'Adherence report weekly\'
            AND mar.answered_time >= (SELECT date_add(:Start_of_messages, interval -
            (SELECT property_value FROM global_property WHERE property = \'messages.benchmarkPeriod\') day)) AND mar.answered_time &lt;= :Start_of_messages) adhTre
            WHERE EXECUTION_DATE >= :startDate
            AND EXECUTION_DATE &lt;= :endDate
            AND EXECUTION_DATE > GET_PREDICTION_START_DATE_FOR_ADHERENCE_FEEDBACK(:patientId)
            AND CHANNEL_ID != \'Deactivate service\'
            Union
            SELECT mssg.msg_send_time as EXECUTION_DATE, 1 as MESSAGE_ID, mss.channel_type as CHANNEL_ID,
            mss.status as STATUS_ID, null as ADHERENCE_LEVEL, null as ADHERENCE_TREND
            FROM messages_scheduled_service mss
            JOIN messages_patient_template mpt on mpt.messages_patient_template_id = mss.patient_template_id
            JOIN messages_template mt on mt.messages_template_id = mpt.template_id
            JOIN messages_scheduled_service_group mssg on mssg.messages_scheduled_service_group_id = mss.group_id
            WHERE mt.name = \'Adherence feedback\'
            AND mpt.patient_id = :patientId
            AND mssg.msg_send_time >= :startDate
            AND mssg.msg_send_time &lt;= :endDate
            ORDER BY 1 DESC ;',
            'SQL',
            'Adherence feedback',
            1,
            '9556a62d-20b2-11ea-ac12-0242c0a82002',
            now()
            );
        </sql>
        <sql>
            INSERT INTO messages_template_field
            (name, mandatory, default_value, template_id, template_field_type, creator, uuid, date_created)
            VALUES(
            'Service type',
            1,
            'Deactivate service',
            (select messages_template_id from messages_template where uuid = '9556a62d-20b2-11ea-ac12-0242c0a82002'),
            'SERVICE_TYPE',
            1,
            '9556b39a-20b2-11ea-ac12-0242c0a82002',
            now()
            );
        </sql>
        <sql>
            INSERT INTO messages_template_field
            (name, mandatory, default_value, template_id, template_field_type, creator, uuid, date_created)
            VALUES(
            'Frequency of the message',
            1,
            'Weekly',
            (select messages_template_id from messages_template where uuid = '9556a62d-20b2-11ea-ac12-0242c0a82002'),
            'MESSAGING_FREQUENCY_WEEKLY_OR_MONTHLY',
            1,
            '9556c330-20b2-11ea-ac12-0242c0a82002',
            now()
            );
        </sql>
        <sql>
            INSERT INTO messages_template_field
            (name, mandatory, default_value, template_id, template_field_type, creator, uuid, date_created)
            VALUES(
            'Week day of delivering message',
            1,
            'Monday',
            (select messages_template_id from messages_template where uuid = '9556a62d-20b2-11ea-ac12-0242c0a82002'),
            'DAY_OF_WEEK',
            1,
            '9556d458-20b2-11ea-ac12-0242c0a82002',
            now()
            );
        </sql>
        <sql>
            INSERT INTO messages_template_field
            (name, mandatory, default_value, template_id, template_field_type, creator, uuid, date_created)
            VALUES(
            'Start of messages',
            0,
            '',
            (select messages_template_id from messages_template where uuid = '9556a62d-20b2-11ea-ac12-0242c0a82002'),
            'START_OF_MESSAGES',
            1,
            '9556e428-20b2-11ea-ac12-0242c0a82002',
            now()
            );
        </sql>
        <sql>
            INSERT INTO messages_template_field
            (name, mandatory, default_value, template_id, template_field_type, creator, uuid, date_created)
            VALUES(
            'End of messages',
            1,
            'NO_DATE|EMPTY',
            (select messages_template_id from messages_template where uuid = '9556a62d-20b2-11ea-ac12-0242c0a82002'),
            'END_OF_MESSAGES',
            1,
            '9556f070-20b2-11ea-ac12-0242c0a82002',
            now()
            );
        </sql>
    </changeSet>

    <changeSet id="messages-47" author="Michał Lewandowski">
        <sql splitStatements="false" stripComments="false">
            <![CDATA[
                        CREATE FUNCTION `GET_PREDICTION_START_DATE_FOR_ADHERENCE_FEEDBACK`(patient_id long)
                        RETURNS DATETIME
                        BEGIN
                        DECLARE mssg_date DATE;
                        SET mssg_date =
                            (SELECT EXECUTION_DATE FROM
                                (SELECT mssg.msg_send_time AS EXECUTION_DATE, 1 AS MESSAGE_ID,
                                    mss.channel_type AS CHANNEL_ID, mss.status AS STATUS_ID
                                FROM messages_scheduled_service mss
                                    JOIN messages_patient_template mpt on mpt.messages_patient_template_id = mss.patient_template_id
                                    JOIN messages_template mt on mt.messages_template_id = mpt.template_id
                                    JOIN messages_scheduled_service_group mssg on mssg.messages_scheduled_service_group_id = mss.group_id
                                WHERE
                                    mt.name = 'Adherence feedback'
                                    AND mpt.patient_id = patient_id
                                ORDER BY 1 DESC)
                               a LIMIT 1);
                        RETURN if(mssg_date > NOW(), mssg_date, NOW());
                        END
                ]]>
    </sql>
    </changeSet>

    <changeSet id="messages-48" author="Michał Lewandowski">
        <preConditions>
            <tableExists tableName="messages_template"/>
            <tableExists tableName="messages_template_field"/>
            <tableExists tableName="messages_scheduled_service"/>
        </preConditions>

        <comment>Adjust date before visit conditions</comment>

        <sql>
            Update messages_template set service_query =
            'SELECT EXECUTION_DATE, MESSAGE_ID, CHANNEL_ID, null as STATUS_ID, visitTypeId, locationId, dateStarted FROM
            (SELECT TIMESTAMP(selected_date, :bestContactTime ) AS EXECUTION_DATE, 1 AS MESSAGE_ID, :Service_type AS
            CHANNEL_ID, visitTypeId, locationId, visit_dates as dateStarted
            FROM (SELECT * FROM (SELECT * FROM DATES_LIST) dates_list
            WHERE selected_date >= :Start_of_messages
                AND selected_date &lt;= :End_of_messages
            ) dates_in_range
            JOIN (SELECT date_started as visit_dates, visit_type_id as visitTypeId, location_id as locationId FROM visit
            WHERE patient_id = :patientId ) dates_of_visit
            WHERE concat(\',\',(SELECT property_value FROM global_property
            WHERE property =\'message.daysToCallBeforeVisit.default\'), \',\') LIKE concat(\'%,\',datediff(visit_dates, selected_date),\',%\')
                AND date(visit_dates) !=  selected_date )dates_before_visit
            WHERE EXECUTION_DATE &lt;= :endDate
                AND EXECUTION_DATE >= :startDate
                AND EXECUTION_DATE >= GET_PREDICTION_START_DATE_FOR_VISIT(:patientId)
                AND CHANNEL_ID != \'Deactivate service\'
            Union
            SELECT mssg.msg_send_time as EXECUTION_DATE, 1 as MESSAGE_ID, mss.channel_type as CHANNEL_ID,
            mss.status as STATUS_ID, null as visitTypeId, null as locationId, null as dateStarted
            FROM messages_scheduled_service mss
                JOIN messages_patient_template mpt on mpt.messages_patient_template_id = mss.patient_template_id
                JOIN messages_template mt on mt.messages_template_id = mpt.template_id
                JOIN messages_scheduled_service_group mssg on mssg.messages_scheduled_service_group_id = mss.group_id
            WHERE mt.name = \'Visit reminder\'
                AND mpt.patient_id = :patientId
                AND mssg.msg_send_time >= :startDate
                AND mssg.msg_send_time &lt;= :endDate
            ORDER BY 1 desc;'
            WHERE name = 'Visit reminder';
        </sql>
    </changeSet>

    <changeSet id="messages-49" author="Michał Lewandowski">
        <preConditions>
            <tableExists tableName="messages_template"/>
            <tableExists tableName="messages_template_field"/>
            <tableExists tableName="messages_scheduled_service"/>
        </preConditions>

        <comment>Added view for dates, function with IF for query, UPDATE Query to adjust to edge cases</comment>

        <sql>
            <![CDATA[
                UPDATE messages_template SET service_query =
                    'SELECT EXECUTION_DATE,
                        MESSAGE_ID,
                        CHANNEL_ID, null AS STATUS_ID
                    FROM
                        (SELECT TIMESTAMP(selected_date, :bestContactTime) AS EXECUTION_DATE,
                            1 AS MESSAGE_ID,
                            :Service_type AS CHANNEL_ID
                        FROM (
                            SELECT * FROM (SELECT * FROM DATES_LIST) v
                            WHERE selected_date <= DATE(:endDateTime)
                                AND selected_date >= DATE(:startDateTime)
                                AND :Week_day_of_delivering_message
                                    LIKE concat(\'%\',DAYNAME(selected_date),\'%\') ) dates ) temp
                        WHERE EXECUTION_DATE > GET_PREDICTION_START_DATE_FOR_ADHERENCE_DAILY(:patientId, :actorId)
                            AND EXECUTION_DATE <= :endDateTime
                            AND EXECUTION_DATE >= :startDateTime
                            AND CHANNEL_ID != \'Deactivate service\'
                    UNION
                        SELECT mssg.msg_send_time AS EXECUTION_DATE,
                            1 AS MESSAGE_ID,
                            mss.channel_type AS CHANNEL_ID,
                            mss.status AS STATUS_ID
                        FROM messages_scheduled_service mss
                            JOIN messages_patient_template mpt on mpt.messages_patient_template_id = mss.patient_template_id
                            JOIN messages_template mt on mt.messages_template_id = mpt.template_id
                            JOIN messages_scheduled_service_group mssg on mssg.messages_scheduled_service_group_id = mss.group_id
                        WHERE mt.name = \'Adherence report daily\'
                            AND mpt.patient_id = :patientId
                            AND mpt.actor_id = :actorId
                            AND mssg.msg_send_time >= :startDateTime
                            AND mssg.msg_send_time <= :endDateTime
                        ORDER BY 1 desc;'
                WHERE name = 'Adherence report daily';
            ]]>
        </sql>
        <sql>
            <![CDATA[
                UPDATE messages_template SET service_query =
                    'SELECT EXECUTION_DATE,
                        MESSAGE_ID,
                        CHANNEL_ID,
                        null AS STATUS_ID,
                        visitTypeId,
                        locationId,
                        dateStarted
                    FROM
                    (
                        SELECT TIMESTAMP(selected_date, :bestContactTime ) AS EXECUTION_DATE,
                         1 AS MESSAGE_ID,
                         :Service_type AS CHANNEL_ID,
                         visitTypeId,
                         locationId,
                         visit_dates AS dateStarted
                        FROM
                        (
                            SELECT *
                            FROM (
                                SELECT * FROM DATES_LIST
                            ) dates_list

                            ) dates_in_range
                            JOIN (
                                SELECT date_started AS visit_dates,
                                    visit_type_id AS visitTypeId,
                                    location_id AS locationId
                                FROM visit
                                WHERE patient_id = :patientId
                        ) dates_of_visit
                        WHERE concat(\',\',(
                            SELECT property_value
                            FROM global_property
                            WHERE property =\'message.daysToCallBeforeVisit.default\'), \',\')
                                LIKE concat(\'%,\',datediff(visit_dates, selected_date),\',%\')
                                AND date(visit_dates) !=  selected_date
                    )dates_before_visit
                    WHERE EXECUTION_DATE <= :endDateTime
                        AND EXECUTION_DATE >= :startDateTime
                        AND EXECUTION_DATE >= GET_PREDICTION_START_DATE_FOR_VISIT(:patientId, :actorId)
                        AND CHANNEL_ID != \'Deactivate service\'
                    UNION
                        SELECT mssg.msg_send_time AS EXECUTION_DATE,
                            1 AS MESSAGE_ID,
                            mss.channel_type AS CHANNEL_ID,
                            mss.status AS STATUS_ID,
                            null AS visitTypeId,
                            null AS locationId,
                            null AS dateStarted
                        FROM messages_scheduled_service mss
                            JOIN messages_patient_template mpt ON mpt.messages_patient_template_id = mss.patient_template_id
                            JOIN messages_template mt ON mt.messages_template_id = mpt.template_id
                            JOIN messages_scheduled_service_group mssg ON mssg.messages_scheduled_service_group_id = mss.group_id
                        WHERE mt.name = \'Visit reminder\'
                            AND mpt.patient_id = :patientId
                            AND mpt.actor_id = :actorId
                            AND mssg.msg_send_time >= :startDateTime
                            AND mssg.msg_send_time <= :endDateTime
                        ORDER BY 1 desc;'
                WHERE name = 'Visit reminder';
            ]]>
        </sql>
        <sql>
            <![CDATA[
                UPDATE messages_template SET service_query =
                    'SELECT EXECUTION_DATE,
                        MESSAGE_ID,
                        CHANNEL_ID,
                        null AS STATUS_ID
                    FROM
                    (
                        SELECT TIMESTAMP(selected_date, :bestContactTime) AS EXECUTION_DATE,
                            1 AS MESSAGE_ID,
                            :Service_type AS CHANNEL_ID
                        FROM (
                            SELECT *
                            FROM (SELECT * FROM DATES_LIST) v
                            WHERE selected_date <= DATE(:endDateTime)
                            AND selected_date >= DATE(:startDateTime)
                            AND :Week_day_of_delivering_message
                            LIKE concat(\'%\',DAYNAME(selected_date),\'%\')
                        ) dates
                    ) temp
                    WHERE EXECUTION_DATE > GET_PREDICTION_START_DATE_FOR_ADHERENCE_WEEKLY(:patientId, :actorId)
                        AND EXECUTION_DATE <= :endDateTime
                        AND EXECUTION_DATE >= :startDateTime
                        AND CHANNEL_ID != \'Deactivate service\'
                    UNION
                        SELECT mssg.msg_send_time AS EXECUTION_DATE,
                            1 AS MESSAGE_ID,
                            mss.channel_type AS CHANNEL_ID,
                            mss.status AS STATUS_ID
                        FROM messages_scheduled_service mss
                            JOIN messages_patient_template mpt on mpt.messages_patient_template_id = mss.patient_template_id
                            JOIN messages_template mt on mt.messages_template_id = mpt.template_id
                            JOIN messages_scheduled_service_group mssg on mssg.messages_scheduled_service_group_id = mss.group_id
                        WHERE mt.name = \'Adherence report weekly\'
                            AND mpt.patient_id = :patientId
                            AND mpt.actor_id = :actorId
                            AND mssg.msg_send_time >= :startDateTime
                            AND mssg.msg_send_time <= :endDateTime
                        ORDER BY 1 DESC;'
                WHERE name = 'Adherence report weekly';
            ]]>
        </sql>
        <sql>
            <![CDATA[
                UPDATE messages_template SET service_query =
                    'SELECT EXECUTION_DATE,
                        MESSAGE_ID,
                        CHANNEL_ID,
                        NULL AS STATUS_ID,
                        HEALTH_TIP_ID
                    FROM (
                        SELECT TIMESTAMP(selected_date, times) AS EXECUTION_DATE,
                            1 AS MESSAGE_ID,
                            :Service_type AS CHANNEL_ID
                        FROM (
                            SELECT *
                            FROM
                                (SELECT * FROM DATES_LIST) dates_list
                            WHERE selected_date >= DATE(:startDateTime)
                                AND selected_date <= DATE(:endDateTime)
                                AND (DAYOFMONTH(selected_date) < IF
                                    (
                                        :Frequency_of_the_message = \'Weekly\'
                                        OR :Frequency_of_the_message = \'Daily\', 32, 8
                                    )
                                )
                                AND :Week_day_of_delivering_message
                                     LIKE concat(\'%\',DAYNAME(selected_date),\'%\')
                        ) dates
                            JOIN (SELECT :bestContactTime times) timeslist) temp
                            JOIN (
                                SELECT group_concat(HT_ID) AS HEALTH_TIP_ID
                                FROM (
                                    (
                                        SELECT concept_id AS HT_ID
                                        FROM concept_set AS cs
                                        WHERE
                                            cs.concept_set IN (
                                                SELECT concept_id
                                                FROM concept_name cn
                                                WHERE :Categories_of_the_message LIKE concat(\'%\', cn.name, \'%\')
                                            )
                                            AND concept_id not IN (
                                                SELECT question
                                                FROM messages_actor_response mar
                                                    JOIN messages_scheduled_service mss on mar.scheduled_service_id = mss.messages_scheduled_service_id
                                                    JOIN messages_patient_template mpt on mss.patient_template_id = mpt.messages_patient_template_id
                                                    JOIN messages_template mt on mpt.template_id = mt.messages_template_id
                                                WHERE mt.name = \'Health tip\'
                                                    AND mpt.patient_id = :patientId
                                                    AND mss.status = \'DELIVERED\'
                                            )
                                        ORDER BY cs.sort_weight ASC limit 3
                                    ) tips
                                )
                            ) gc
                    WHERE EXECUTION_DATE > GET_PREDICTION_START_DATE_FOR_HEALTH_TIP(:patientId, :actorId)
                        AND EXECUTION_DATE >= :startDateTime
                        AND EXECUTION_DATE <= :endDateTime
                        AND CHANNEL_ID != \'Deactivate service\'
                UNION
                    SELECT mssg.msg_send_time AS EXECUTION_DATE,
                        1 AS MESSAGE_ID,
                        mss.channel_type AS CHANNEL_ID,
                        mss.status AS STATUS_ID,
                        null AS HEALTH_TIP_ID
                    FROM messages_scheduled_service mss
                        JOIN messages_patient_template mpt on mpt.messages_patient_template_id = mss.patient_template_id
                        JOIN messages_template mt on mt.messages_template_id = mpt.template_id
                        JOIN messages_scheduled_service_group mssg on mssg.messages_scheduled_service_group_id = mss.group_id
                    WHERE mt.name = \'Health tip\'
                        AND mpt.patient_id = :patientId
                        AND mpt.actor_id = :actorId
                        AND mssg.msg_send_time >= :startDateTime
                        AND mssg.msg_send_time <= :endDateTime
                    ORDER BY 1 DESC ;'
            WHERE name = 'Health tip';
            ]]>
        </sql>
        <sql>
            <![CDATA[
            UPDATE messages_template SET service_query =
                'SELECT EXECUTION_DATE,
                       MESSAGE_ID,
                       CHANNEL_ID,
                       NULL AS STATUS_ID,
                       ADHERENCE_LEVEL,
                       ADHERENCE_TREND
                FROM   (
                              SELECT Timestamp(selected_date, times) AS EXECUTION_DATE,
                                     1                               AS MESSAGE_ID,
                                     :Service_type                   AS CHANNEL_ID
                              FROM   (
                                            SELECT *
                                            FROM   (
                                                          SELECT *
                                                          FROM DATES_LIST) dates_list
                                            WHERE  (
                                                          Dayofmonth(selected_date) <IF (:Frequency_of_the_message = \'Weekly\', 32, 8))
                                            AND    :Week_day_of_delivering_message LIKE concat(\'%\',dayname(selected_date),\'%\')) dates
                              JOIN
                                     (
                                            SELECT :bestContactTime times) timeslist) temp
                JOIN
                       (
                              SELECT IF(sum(text_response = \'YES\') / sum(text_response = \'YES\'
                              OR     text_response = \'NO\') >
                                     (
                                            SELECT
                                                   (
                                                          SELECT property_value
                                                          FROM   global_property
                                                          WHERE  property = \'messages.cutOffScoreForHighMediumAdherenceLevel\') / 100), \'HIGH\',
                                     (
                                            SELECT IF(sum(text_response = \'YES\') / sum(text_response = \'YES\'
                                            OR     text_response = \'NO\') >
                                                   (
                                                          SELECT
                                                                 (
                                                                        SELECT property_value
                                                                        FROM   global_property
                                                                        WHERE  property = \'messages.cutOffScoreForMediumLowAdherenceLevel\') / 100), \'MEDIUM\', \'LOW\')
                                            FROM   messages_actor_response mar
                                            JOIN   messages_scheduled_service mss
                                            ON     mar.scheduled_service_id = mss.messages_scheduled_service_id
                                            JOIN   messages_patient_template mpt
                                            ON     mss.patient_template_id = mpt.messages_patient_template_id
                                            JOIN   messages_template mt
                                            ON     mpt.template_id = mt.messages_template_id
                                            WHERE  mt.NAME = \'Adherence report daily\'
                                            OR     mt.NAME = \'Adherence report weekly\'
                                            AND    mar.answered_time >=
                                                   (
                                                          SELECT date_add(NOW(), interval -
                                                                 (
                                                                        SELECT property_value
                                                                        FROM   global_property
                                                                        WHERE  property = \'messages.benchmarkPeriod\') day))
                                            AND    mar.answered_time <= NOW())) AS ADHERENCE_LEVEL
                              FROM   messages_actor_response mar
                              JOIN   messages_scheduled_service mss
                              ON     mar.scheduled_service_id = mss.messages_scheduled_service_id
                              JOIN   messages_patient_template mpt
                              ON     mss.patient_template_id = mpt.messages_patient_template_id
                              JOIN   messages_template mt
                              ON     mpt.template_id = mt.messages_template_id
                              WHERE  mt.NAME = \'Adherence report daily\'
                              OR     mt.NAME = \'Adherence report weekly\'
                              AND    mar.answered_time >=
                                     (
                                            SELECT date_add(NOW(), interval -
                                                   (
                                                          SELECT property_value
                                                          FROM   global_property
                                                          WHERE  property = \'messages.benchmarkPeriod\') day))
                              AND    mar.answered_time <= NOW()) adhlev
                JOIN
                       (
                              SELECT IF(sum(text_response = \'YES\') / sum(text_response = \'YES\'
                              OR     text_response = \'NO\')         -
                                     (
                                            SELECT sum(text_response = \'YES\') / sum(text_response = \'YES\'
                                            OR     text_response = \'NO\')
                                            FROM   messages_actor_response mar
                                            JOIN   messages_scheduled_service mss
                                            ON     mar.scheduled_service_id = mss.messages_scheduled_service_id
                                            JOIN   messages_patient_template mpt
                                            ON     mss.patient_template_id = mpt.messages_patient_template_id
                                            JOIN   messages_template mt
                                            ON     mpt.template_id = mt.messages_template_id
                                            WHERE  mt.NAME = \'Adherence report daily\'
                                            OR     mt.NAME = \'Adherence report weekly\'
                                            AND    mar.answered_time >=
                                                   (
                                                          SELECT date_add(NOW(), interval -
                                                                 (
                                                                        SELECT 2 *
                                                                               (
                                                                                      SELECT property_value
                                                                                      FROM   global_property
                                                                                      WHERE  property = \'messages.benchmarkPeriod\')) day))
                                            AND    mar.answered_time <=
                                                   (
                                                          SELECT date_add(NOW(), interval -
                                                                 (
                                                                        SELECT property_value
                                                                        FROM   global_property
                                                                        WHERE  property = \'messages.benchmarkPeriod\') day))) >
                                     (
                                            SELECT
                                                   (
                                                          SELECT property_value
                                                          FROM   global_property
                                                          WHERE  property = \'messages.cutOffScoreForAdherenceTrend\') / 100), \'RISING\',
                                     (
                                            SELECT IF(sum(text_response = \'YES\') / sum(text_response = \'YES\'
                                            OR     text_response = \'NO\')         -
                                                   (
                                                          SELECT sum(text_response = \'YES\') / sum(text_response = \'YES\'
                                                          OR     text_response = \'NO\')
                                                          FROM   messages_actor_response mar
                                                          JOIN   messages_scheduled_service mss
                                                          ON     mar.scheduled_service_id = mss.messages_scheduled_service_id
                                                          JOIN   messages_patient_template mpt
                                                          ON     mss.patient_template_id = mpt.messages_patient_template_id
                                                          JOIN   messages_template mt
                                                          ON     mpt.template_id = mt.messages_template_id
                                                          WHERE  mt.NAME = \'Adherence report daily\'
                                                          OR     mt.NAME = \'Adherence report weekly\'
                                                          AND    mar.answered_time >=
                                                                 (
                                                                        SELECT date_add(NOW(), interval -
                                                                               (
                                                                                      SELECT 2 *
                                                                                             (
                                                                                                    SELECT property_value
                                                                                                    FROM   global_property
                                                                                                    WHERE  property = \'messages.benchmarkPeriod\')) day))
                                                          AND    mar.answered_time <=
                                                                 (
                                                                        SELECT date_add(NOW(), interval -
                                                                               (
                                                                                      SELECT property_value
                                                                                      FROM   global_property
                                                                                      WHERE  property = \'messages.benchmarkPeriod\') day)) ) <-1 *
                                                   (
                                                          SELECT
                                                                 (
                                                                        SELECT property_value
                                                                        FROM   global_property
                                                                        WHERE  property = \'messages.cutOffScoreForAdherenceTrend\') / 100), \'FALLING\', \'STABLE\'))) AS ADHERENCE_TREND
                              FROM   messages_actor_response mar
                              JOIN   messages_scheduled_service mss
                              ON     mar.scheduled_service_id = mss.messages_scheduled_service_id
                              JOIN   messages_patient_template mpt
                              ON     mss.patient_template_id = mpt.messages_patient_template_id
                              JOIN   messages_template mt
                              ON     mpt.template_id = mt.messages_template_id
                              WHERE  mt.NAME = \'Adherence report daily\'
                              OR     mt.NAME = \'Adherence report weekly\'
                              AND    mar.answered_time >=
                                     (
                                            SELECT date_add(NOW(), interval -
                                                   (
                                                          SELECT property_value
                                                          FROM   global_property
                                                          WHERE  property = \'messages.benchmarkPeriod\') day))
                              AND    mar.answered_time <= NOW()) adhtre
                WHERE  EXECUTION_DATE >= :startDateTime
                AND    EXECUTION_DATE <= :endDateTime
                AND    EXECUTION_DATE > get_prediction_start_date_for_adherence_feedback(:patientId, :actorId)
                AND    CHANNEL_ID != \'Deactivate service\'
                UNION
                SELECT   mssg.msg_send_time AS EXECUTION_DATE,
                         1                  AS MESSAGE_ID,
                         mss.channel_type   AS CHANNEL_ID,
                         mss.status         AS STATUS_ID,
                         NULL               AS ADHERENCE_LEVEL,
                         NULL               AS ADHERENCE_TREND
                FROM     messages_scheduled_service mss
                JOIN     messages_patient_template mpt
                ON       mpt.messages_patient_template_id = mss.patient_template_id
                JOIN     messages_template mt
                ON       mt.messages_template_id = mpt.template_id
                JOIN     messages_scheduled_service_group mssg
                ON       mssg.messages_scheduled_service_group_id = mss.group_id
                WHERE    mt.NAME = \'Adherence feedback\'
                AND      mpt.patient_id = :patientId
                AND      mpt.actor_id =:actorId
                AND      mssg.msg_send_time >= :startDateTime
                AND      mssg.msg_send_time <= :endDateTime
                ORDER BY 1 DESC ; '
            WHERE name = 'Adherence feedback';
            ]]>
        </sql>


    </changeSet>

    <changeSet id="messages-50" author="Michał Lewandowski">

        <sql>
            DROP FUNCTION IF EXISTS GET_PREDICTION_START_DATE_FOR_ADHERENCE_DAILY;
        </sql>
        <sql splitStatements="false" stripComments="false">
            <![CDATA[
                        CREATE FUNCTION `GET_PREDICTION_START_DATE_FOR_ADHERENCE_DAILY`(patient_id long, actor_id long)
                        RETURNS DATETIME
                        BEGIN
                        DECLARE mssg_date DATE;
                        SET mssg_date =
                            (SELECT EXECUTION_DATE FROM
                                (SELECT mssg.msg_send_time AS EXECUTION_DATE, 1 AS MESSAGE_ID,
                                    mss.channel_type AS CHANNEL_ID, mss.status AS STATUS_ID
                                FROM messages_scheduled_service mss
                                    JOIN messages_patient_template mpt on mpt.messages_patient_template_id = mss.patient_template_id
                                    JOIN messages_template mt on mt.messages_template_id = mpt.template_id
                                    JOIN messages_scheduled_service_group mssg on mssg.messages_scheduled_service_group_id = mss.group_id
                                WHERE
                                    mt.name = 'Adherence report daily'
                                    AND mpt.patient_id = patient_id
                                    AND mpt.actor_id = actor_id
                                ORDER BY 1 DESC)
                               a LIMIT 1);
                        RETURN if(mssg_date > NOW(), mssg_date, NOW());
                        END
                ]]>
        </sql>
        <sql>
            DROP FUNCTION IF EXISTS GET_PREDICTION_START_DATE_FOR_VISIT;
        </sql>
        <sql splitStatements="false" stripComments="false">
            <![CDATA[
                        CREATE FUNCTION `GET_PREDICTION_START_DATE_FOR_VISIT`(patient_id long, actor_id long)
                        RETURNS DATETIME
                        BEGIN
                        DECLARE mssg_date DATE;
                        SET mssg_date =
                            (SELECT EXECUTION_DATE FROM
                                (SELECT mssg.msg_send_time AS EXECUTION_DATE, 1 AS MESSAGE_ID,
                                    mss.channel_type AS CHANNEL_ID, mss.status AS STATUS_ID
                                FROM messages_scheduled_service mss
                                    JOIN messages_patient_template mpt on mpt.messages_patient_template_id = mss.patient_template_id
                                    JOIN messages_template mt on mt.messages_template_id = mpt.template_id
                                    JOIN messages_scheduled_service_group mssg on mssg.messages_scheduled_service_group_id = mss.group_id
                                WHERE
                                    mt.name = 'Visit reminder'
                                    AND mpt.patient_id = patient_id
                                    AND mpt.actor_id = actor_id
                                ORDER BY 1 DESC)
                               a LIMIT 1);
                        RETURN if(mssg_date > NOW(), mssg_date, NOW());
                        END
                ]]>
        </sql>
        <sql>
            DROP FUNCTION IF EXISTS GET_PREDICTION_START_DATE_FOR_ADHERENCE_WEEKLY;
        </sql>
        <sql splitStatements="false" stripComments="false">
            <![CDATA[
                        CREATE FUNCTION `GET_PREDICTION_START_DATE_FOR_ADHERENCE_WEEKLY`(patient_id long, actor_id long)
                        RETURNS DATETIME
                        BEGIN
                        DECLARE mssg_date DATE;
                        SET mssg_date =
                            (SELECT EXECUTION_DATE FROM
                                (SELECT mssg.msg_send_time AS EXECUTION_DATE, 1 AS MESSAGE_ID,
                                    mss.channel_type AS CHANNEL_ID, mss.status AS STATUS_ID
                                FROM messages_scheduled_service mss
                                    JOIN messages_patient_template mpt on mpt.messages_patient_template_id = mss.patient_template_id
                                    JOIN messages_template mt on mt.messages_template_id = mpt.template_id
                                    JOIN messages_scheduled_service_group mssg on mssg.messages_scheduled_service_group_id = mss.group_id
                                WHERE
                                    mt.name = 'Adherence report weekly'
                                    AND mpt.patient_id = patient_id
                                    AND mpt.actor_id = actor_id
                                ORDER BY 1 DESC)
                               a LIMIT 1);
                        RETURN if(mssg_date > NOW(), mssg_date, NOW());
                        END
                ]]>
        </sql>
        <sql>
            DROP FUNCTION IF EXISTS GET_PREDICTION_START_DATE_FOR_HEALTH_TIP;
        </sql>
        <sql splitStatements="false" stripComments="false">
            <![CDATA[
                        CREATE FUNCTION `GET_PREDICTION_START_DATE_FOR_HEALTH_TIP`(patient_id long, actor_id long)
                        RETURNS DATETIME
                        BEGIN
                        DECLARE mssg_date DATE;
                        SET mssg_date =
                            (SELECT EXECUTION_DATE FROM
                                (SELECT mssg.msg_send_time AS EXECUTION_DATE, 1 AS MESSAGE_ID,
                                    mss.channel_type AS CHANNEL_ID, mss.status AS STATUS_ID
                                FROM messages_scheduled_service mss
                                    JOIN messages_patient_template mpt on mpt.messages_patient_template_id = mss.patient_template_id
                                    JOIN messages_template mt on mt.messages_template_id = mpt.template_id
                                    JOIN messages_scheduled_service_group mssg on mssg.messages_scheduled_service_group_id = mss.group_id
                                WHERE
                                    mt.name = 'Health tip'
                                    AND mpt.patient_id = patient_id
                                    AND mpt.actor_id = actor_id
                                ORDER BY 1 DESC)
                               a LIMIT 1);
                        RETURN if(mssg_date > NOW(), mssg_date, NOW());
                        END
                ]]>
        </sql>
        <sql>
            DROP FUNCTION IF EXISTS GET_PREDICTION_START_DATE_FOR_ADHERENCE_FEEDBACK;
        </sql>
        <sql splitStatements="false" stripComments="false">
            <![CDATA[
                        CREATE FUNCTION `GET_PREDICTION_START_DATE_FOR_ADHERENCE_FEEDBACK`(patient_id long, actor_id long)
                        RETURNS DATETIME
                        BEGIN
                        DECLARE mssg_date DATE;
                        SET mssg_date =
                            (SELECT EXECUTION_DATE FROM
                                (SELECT mssg.msg_send_time AS EXECUTION_DATE, 1 AS MESSAGE_ID,
                                    mss.channel_type AS CHANNEL_ID, mss.status AS STATUS_ID
                                FROM messages_scheduled_service mss
                                    JOIN messages_patient_template mpt on mpt.messages_patient_template_id = mss.patient_template_id
                                    JOIN messages_template mt on mt.messages_template_id = mpt.template_id
                                    JOIN messages_scheduled_service_group mssg on mssg.messages_scheduled_service_group_id = mss.group_id
                                WHERE
                                    mt.name = 'Adherence feedback'
                                    AND mpt.patient_id = patient_id
                                    AND mpt.actor_id = actor_id
                                ORDER BY 1 DESC)
                               a LIMIT 1);
                        RETURN if(mssg_date > NOW(), mssg_date, NOW());
                        END
                ]]>
        </sql>
    </changeSet>

    <changeSet id="messages-51" author="Dawid Ruchniewicz">
        <preConditions>
            <tableExists tableName="messages_template"/>
            <tableExists tableName="messages_template_field"/>
            <tableExists tableName="messages_scheduled_service"/>
        </preConditions>

        <comment>Fixed one issue with date in interval and changed formatting</comment>

        <sql>
            <![CDATA[
            UPDATE messages_template SET service_query =
                'SELECT EXECUTION_DATE,
                       MESSAGE_ID,
                       CHANNEL_ID,
                       NULL AS STATUS_ID,
                       ADHERENCE_LEVEL,
                       ADHERENCE_TREND
                FROM   (
                              SELECT Timestamp(selected_date, times) AS EXECUTION_DATE,
                                     1                               AS MESSAGE_ID,
                                     :Service_type                   AS CHANNEL_ID
                              FROM   (
                                            SELECT *
                                            FROM   (
                                                          SELECT *
                                                          FROM DATES_LIST) dates_list
                                            WHERE  (
                                                          Dayofmonth(selected_date) <IF (:Frequency_of_the_message = \'Weekly\', 32, 8))
                                            AND    :Week_day_of_delivering_message LIKE concat(\'%\',dayname(selected_date),\'%\')) dates
                              JOIN
                                     (
                                            SELECT :bestContactTime times) timeslist) temp
                JOIN
                       (
                              SELECT IF(sum(text_response = \'YES\') / sum(text_response = \'YES\'
                              OR     text_response = \'NO\') >
                                     (
                                            SELECT
                                                   (
                                                          SELECT property_value
                                                          FROM   global_property
                                                          WHERE  property = \'messages.cutOffScoreForHighMediumAdherenceLevel\') / 100), \'HIGH\',
                                     (
                                            SELECT IF(sum(text_response = \'YES\') / sum(text_response = \'YES\'
                                            OR     text_response = \'NO\') >
                                                   (
                                                          SELECT
                                                                 (
                                                                        SELECT property_value
                                                                        FROM   global_property
                                                                        WHERE  property = \'messages.cutOffScoreForMediumLowAdherenceLevel\') / 100), \'MEDIUM\', \'LOW\')
                                            FROM   messages_actor_response mar
                                            JOIN   messages_scheduled_service mss
                                            ON     mar.scheduled_service_id = mss.messages_scheduled_service_id
                                            JOIN   messages_patient_template mpt
                                            ON     mss.patient_template_id = mpt.messages_patient_template_id
                                            JOIN   messages_template mt
                                            ON     mpt.template_id = mt.messages_template_id
                                            WHERE  mt.NAME = \'Adherence report daily\'
                                            AND    mar.answered_time >=
                                                   (
                                                          SELECT date_add(now(), interval -
                                                                 (
                                                                        SELECT property_value
                                                                        FROM   global_property
                                                                        WHERE  property = \'messages.benchmarkPeriod\') day))
                                            AND    mar.answered_time <= now()
                                            OR     mt.NAME = \'Adherence report weekly\'
                                            AND    mar.answered_time >=
                                                   (
                                                          SELECT date_add(now(), interval -
                                                                 (
                                                                        SELECT property_value
                                                                        FROM   global_property
                                                                        WHERE  property = \'messages.benchmarkPeriod\') day))
                                            AND    mar.answered_time <= now())) AS ADHERENCE_LEVEL
                              FROM   messages_actor_response mar
                              JOIN   messages_scheduled_service mss
                              ON     mar.scheduled_service_id = mss.messages_scheduled_service_id
                              JOIN   messages_patient_template mpt
                              ON     mss.patient_template_id = mpt.messages_patient_template_id
                              JOIN   messages_template mt
                              ON     mpt.template_id = mt.messages_template_id
                              WHERE  mt.NAME = \'Adherence report daily\'
                              AND    mar.answered_time >=
                                     (
                                            SELECT date_add(now(), interval -
                                                   (
                                                          SELECT property_value
                                                          FROM   global_property
                                                          WHERE  property = \'messages.benchmarkPeriod\') day))
                              AND    mar.answered_time <= now()
                              OR     mt.NAME = \'Adherence report weekly\'
                              AND    mar.answered_time >=
                                     (
                                            SELECT date_add(now(), interval -
                                                   (
                                                          SELECT property_value
                                                          FROM   global_property
                                                          WHERE  property = \'messages.benchmarkPeriod\') day))
                              AND    mar.answered_time <= now()) adhlev
                JOIN
                       (
                              SELECT IF(sum(text_response = \'YES\') / sum(text_response = \'YES\'
                              OR     text_response = \'NO\')         -
                                     (
                                            SELECT sum(text_response = \'YES\') / sum(text_response = \'YES\'
                                            OR     text_response = \'NO\')
                                            FROM   messages_actor_response mar
                                            JOIN   messages_scheduled_service mss
                                            ON     mar.scheduled_service_id = mss.messages_scheduled_service_id
                                            JOIN   messages_patient_template mpt
                                            ON     mss.patient_template_id = mpt.messages_patient_template_id
                                            JOIN   messages_template mt
                                            ON     mpt.template_id = mt.messages_template_id
                                            WHERE  mt.NAME = \'Adherence report daily\'
                                            AND    mar.answered_time >=
                                                   (
                                                          SELECT date_add(now(), interval -
                                                                 (
                                                                        SELECT 2 *
                                                                               (
                                                                        SELECT property_value
                                                                        FROM   global_property
                                                                        WHERE  property = \'messages.benchmarkPeriod\')) day))
                                            AND    mar.answered_time <=
                                                   (
                                                          SELECT date_add(now(), interval -
                                                                 (
                                                                        SELECT property_value
                                                                        FROM   global_property
                                                                        WHERE  property = \'messages.benchmarkPeriod\') day))
                                            OR     mt.NAME = \'Adherence report weekly\'
                                            AND    mar.answered_time >=
                                                   (
                                                          SELECT date_add(now(), interval -
                                                                 (
                                                                        SELECT 2 *
                                                                               (
                                                                                      SELECT property_value
                                                                                      FROM   global_property
                                                                                      WHERE  property = \'messages.benchmarkPeriod\')) day))
                                            AND    mar.answered_time <=
                                                   (
                                                          SELECT date_add(now(), interval -
                                                                 (
                                                                        SELECT property_value
                                                                        FROM   global_property
                                                                        WHERE  property = \'messages.benchmarkPeriod\') day))) >
                                     (
                                            SELECT
                                                   (
                                                          SELECT property_value
                                                          FROM   global_property
                                                          WHERE  property = \'messages.cutOffScoreForAdherenceTrend\') / 100), \'RISING\',
                                     (
                                            SELECT IF(sum(text_response = \'YES\') / sum(text_response = \'YES\'
                                            OR     text_response = \'NO\')         -
                                                   (
                                                          SELECT sum(text_response = \'YES\') / sum(text_response = \'YES\'
                                                          OR     text_response = \'NO\')
                                                          FROM   messages_actor_response mar
                                                          JOIN   messages_scheduled_service mss
                                                          ON     mar.scheduled_service_id = mss.messages_scheduled_service_id
                                                          JOIN   messages_patient_template mpt
                                                          ON     mss.patient_template_id = mpt.messages_patient_template_id
                                                          JOIN   messages_template mt
                                                          ON     mpt.template_id = mt.messages_template_id
                                                          WHERE  mt.NAME = \'Adherence report daily\'
                                                          AND    mar.answered_time >=
                                                                 (
                                                                        SELECT date_add(now(), interval -
                                                                               (
                                                                                      SELECT 2 *
                                                                                             (
                                                                                                    SELECT property_value
                                                                                                    FROM   global_property
                                                                                                    WHERE  property = \'messages.benchmarkPeriod\')) day))
                                                          AND    mar.answered_time <=
                                                                 (
                                                                        SELECT date_add(now(), interval -
                                                                               (
                                                                                      SELECT property_value
                                                                                      FROM   global_property
                                                                                      WHERE  property = \'messages.benchmarkPeriod\') day))
                                                          OR     mt.NAME = \'Adherence report weekly\'
                                                          AND    mar.answered_time >=
                                                                 (
                                                                        SELECT date_add(now(), interval -
                                                                               (
                                                                                      SELECT 2 *
                                                                                             (
                                                                                                    SELECT property_value
                                                                                                    FROM   global_property
                                                                                                    WHERE  property = \'messages.benchmarkPeriod\')) day))
                                                          AND    mar.answered_time <=
                                                                 (
                                                                        SELECT date_add(now(), interval -
                                                                               (
                                                                                      SELECT property_value
                                                                                      FROM   global_property
                                                                                      WHERE  property = \'messages.benchmarkPeriod\') day)) ) <-1 *
                                                   (
                                                          SELECT
                                                                 (
                                                                        SELECT property_value
                                                                        FROM   global_property
                                                                        WHERE  property = \'messages.cutOffScoreForAdherenceTrend\') / 100), \'FALLING\', \'STABLE\'))) AS ADHERENCE_TREND
                              FROM   messages_actor_response mar
                              JOIN   messages_scheduled_service mss
                              ON     mar.scheduled_service_id = mss.messages_scheduled_service_id
                              JOIN   messages_patient_template mpt
                              ON     mss.patient_template_id = mpt.messages_patient_template_id
                              JOIN   messages_template mt
                              ON     mpt.template_id = mt.messages_template_id
                              WHERE  mt.NAME = \'Adherence report daily\'
                              AND    mar.answered_time >=
                                     (
                                            SELECT date_add(now(), interval -
                                                   (
                                                          SELECT property_value
                                                          FROM   global_property
                                                          WHERE  property = \'messages.benchmarkPeriod\') day))
                              AND    mar.answered_time <= now()
                              OR     mt.NAME = \'Adherence report weekly\'
                              AND    mar.answered_time >=
                                     (
                                            SELECT date_add(now(), interval -
                                                   (
                                                          SELECT property_value
                                                          FROM   global_property
                                                          WHERE  property = \'messages.benchmarkPeriod\') day))
                              AND    mar.answered_time <= now()) adhtre
                WHERE  EXECUTION_DATE >= :startDateTime
                AND    EXECUTION_DATE <= :endDateTime
                AND    EXECUTION_DATE > get_prediction_start_date_for_adherence_feedback(:patientId, :actorId)
                AND    CHANNEL_ID != \'Deactivate service\'
                UNION
                SELECT   mssg.msg_send_time AS EXECUTION_DATE,
                         1                  AS MESSAGE_ID,
                         mss.channel_type   AS CHANNEL_ID,
                         mss.status         AS STATUS_ID,
                         NULL               AS ADHERENCE_LEVEL,
                         NULL               AS ADHERENCE_TREND
                FROM     messages_scheduled_service mss
                JOIN     messages_patient_template mpt
                ON       mpt.messages_patient_template_id = mss.patient_template_id
                JOIN     messages_template mt
                ON       mt.messages_template_id = mpt.template_id
                JOIN     messages_scheduled_service_group mssg
                ON       mssg.messages_scheduled_service_group_id = mss.group_id
                WHERE    mt.NAME = \'Adherence feedback\'
                AND      mpt.patient_id = :patientId
                AND      mpt.actor_id =:actorId
                AND      mssg.msg_send_time >= :startDateTime
                AND      mssg.msg_send_time <= :endDateTime
                ORDER BY 1 DESC ; '
            WHERE name = 'Adherence feedback';
            ]]>
        </sql>
    </changeSet>

    <changeSet id="messages-52" author="Dawid Ruchniewicz">
        <preConditions>
            <tableExists tableName="messages_template"/>
            <tableExists tableName="messages_template_field"/>
            <tableExists tableName="messages_scheduled_service"/>
        </preConditions>

        <comment>Change number of played health tips into global property value</comment>

        <sql>
            <![CDATA[
                UPDATE messages_template SET service_query =
                    'SELECT EXECUTION_DATE,
                        MESSAGE_ID,
                        CHANNEL_ID,
                        NULL AS STATUS_ID,
                        HEALTH_TIP_ID
                    FROM (
                        SELECT TIMESTAMP(selected_date, times) AS EXECUTION_DATE,
                            1 AS MESSAGE_ID,
                            :Service_type AS CHANNEL_ID
                        FROM (
                            SELECT *
                            FROM
                                (SELECT * FROM DATES_LIST) dates_list
                            WHERE selected_date >= DATE(:startDateTime)
                                AND selected_date <= DATE(:endDateTime)
                                AND (DAYOFMONTH(selected_date) < IF
                                    (
                                        :Frequency_of_the_message = \'Weekly\'
                                        OR :Frequency_of_the_message = \'Daily\', 32, 8
                                    )
                                )
                                AND :Week_day_of_delivering_message
                                     LIKE concat(\'%\',DAYNAME(selected_date),\'%\')
                        ) dates
                            JOIN (SELECT :bestContactTime times) timeslist) temp
                            JOIN (
                                SELECT group_concat(HT_ID) AS HEALTH_TIP_ID
                                FROM (
                                    (
                                        SELECT @row_number\\:=@row_number + 1, concept_id AS HT_ID
                                        FROM concept_set AS cs, (select @row_number\\:=0) as rn
                                        WHERE
                                            cs.concept_set IN (
                                                SELECT concept_id
                                                FROM concept_name cn
                                                WHERE :Categories_of_the_message LIKE concat(\'%\', cn.name, \'%\')
                                            )
                                            AND concept_id not IN (
                                                SELECT question
                                                FROM messages_actor_response mar
                                                    JOIN messages_scheduled_service mss on mar.scheduled_service_id = mss.messages_scheduled_service_id
                                                    JOIN messages_patient_template mpt on mss.patient_template_id = mpt.messages_patient_template_id
                                                    JOIN messages_template mt on mpt.template_id = mt.messages_template_id
                                                WHERE mt.name = \'Health tip\'
                                                    AND mpt.patient_id = :patientId
                                                    AND mss.status = \'DELIVERED\'
                                            )
                                        AND @row_number <
                                        (
                                            SELECT property_value
                                            FROM global_property
                                            WHERE property = \'messages.numberOfHealthTipsPlayedPerOneCall\'
                                        )
                                        ORDER BY cs.sort_weight ASC
                                    ) tips
                                )
                            ) gc
                    WHERE EXECUTION_DATE > GET_PREDICTION_START_DATE_FOR_HEALTH_TIP(:patientId, :actorId)
                        AND EXECUTION_DATE >= :startDateTime
                        AND EXECUTION_DATE <= :endDateTime
                        AND CHANNEL_ID != \'Deactivate service\'
                UNION
                    SELECT mssg.msg_send_time AS EXECUTION_DATE,
                        1 AS MESSAGE_ID,
                        mss.channel_type AS CHANNEL_ID,
                        mss.status AS STATUS_ID,
                        null AS HEALTH_TIP_ID
                    FROM messages_scheduled_service mss
                        JOIN messages_patient_template mpt on mpt.messages_patient_template_id = mss.patient_template_id
                        JOIN messages_template mt on mt.messages_template_id = mpt.template_id
                        JOIN messages_scheduled_service_group mssg on mssg.messages_scheduled_service_group_id = mss.group_id
                    WHERE mt.name = \'Health tip\'
                        AND mpt.patient_id = :patientId
                        AND mpt.actor_id = :actorId
                        AND mssg.msg_send_time >= :startDateTime
                        AND mssg.msg_send_time <= :endDateTime
                    ORDER BY 1 DESC ;'
            WHERE name = 'Health tip';
            ]]>
        </sql>
    </changeSet>
    <changeSet id="messages-53" author="Michał Lewandowski">
        <sql>
            <![CDATA[
                UPDATE messages_template SET service_query =
                    'SELECT EXECUTION_DATE,
                        MESSAGE_ID,
                        CHANNEL_ID,
                        null AS STATUS_ID,
                        visitTypeId,
                        locationId,
                        dateStarted
                    FROM
                    (
                        SELECT TIMESTAMP(selected_date, :bestContactTime ) AS EXECUTION_DATE,
                         1 AS MESSAGE_ID,
                         :Service_type AS CHANNEL_ID,
                         visitTypeId,
                         locationId,
                         visit_dates AS dateStarted
                        FROM
                        DATES_LIST

                            JOIN (
                                SELECT date_started AS visit_dates,
                                    visit_type_id AS visitTypeId,
                                    location_id AS locationId
                                FROM visit
                                WHERE patient_id = :patientId
                        ) dates_of_visit
                        WHERE concat(\',\',(
                            SELECT property_value
                            FROM global_property
                            WHERE property =\'message.daysToCallBeforeVisit.default\'), \',\')
                                LIKE concat(\'%,\',datediff(visit_dates, selected_date),\',%\')
                                AND date(visit_dates) !=  selected_date
                    )dates_before_visit
                    WHERE EXECUTION_DATE <= :endDateTime
                        AND EXECUTION_DATE >= :startDateTime
                        AND EXECUTION_DATE > GET_PREDICTION_START_DATE_FOR_VISIT(:patientId, :actorId)
                        AND CHANNEL_ID != \'Deactivate service\'
                    UNION
                        SELECT mssg.msg_send_time AS EXECUTION_DATE,
                            1 AS MESSAGE_ID,
                            mss.channel_type AS CHANNEL_ID,
                            mss.status AS STATUS_ID,
                            null AS visitTypeId,
                            null AS locationId,
                            null AS dateStarted
                        FROM messages_scheduled_service mss
                            JOIN messages_patient_template mpt ON mpt.messages_patient_template_id = mss.patient_template_id
                            JOIN messages_template mt ON mt.messages_template_id = mpt.template_id
                            JOIN messages_scheduled_service_group mssg ON mssg.messages_scheduled_service_group_id = mss.group_id
                        WHERE mt.name = \'Visit reminder\'
                            AND mpt.patient_id = :patientId
                            AND mpt.actor_id = :actorId
                            AND mssg.msg_send_time >= :startDateTime
                            AND mssg.msg_send_time <= :endDateTime
                        ORDER BY 1 desc;'
                WHERE name = 'Visit reminder';
            ]]>
        </sql>
        <sql>
            DROP FUNCTION IF EXISTS GET_PREDICTION_START_DATE_FOR_ADHERENCE_DAILY;
        </sql>
        <sql splitStatements="false" stripComments="false">
            <![CDATA[
                        CREATE FUNCTION `GET_PREDICTION_START_DATE_FOR_ADHERENCE_DAILY`(patient_id long, actor_id long)
                        RETURNS DATETIME
                        BEGIN
                        DECLARE mssg_date DATETIME;
                        SET mssg_date =
                            (SELECT EXECUTION_DATE FROM
                                (SELECT mssg.msg_send_time AS EXECUTION_DATE, 1 AS MESSAGE_ID,
                                    mss.channel_type AS CHANNEL_ID, mss.status AS STATUS_ID
                                FROM messages_scheduled_service mss
                                    JOIN messages_patient_template mpt on mpt.messages_patient_template_id = mss.patient_template_id
                                    JOIN messages_template mt on mt.messages_template_id = mpt.template_id
                                    JOIN messages_scheduled_service_group mssg on mssg.messages_scheduled_service_group_id = mss.group_id
                                WHERE
                                    mt.name = 'Adherence report daily'
                                    AND mpt.patient_id = patient_id
                                    AND mpt.actor_id = actor_id
                                ORDER BY 1 DESC)
                               a LIMIT 1);
                        RETURN if(mssg_date > NOW(), mssg_date, NOW());
                        END
                ]]>
        </sql>
        <sql>
            DROP FUNCTION IF EXISTS GET_PREDICTION_START_DATE_FOR_VISIT;
        </sql>
        <sql splitStatements="false" stripComments="false">
            <![CDATA[
                        CREATE FUNCTION `GET_PREDICTION_START_DATE_FOR_VISIT`(patient_id long, actor_id long)
                        RETURNS DATETIME
                        BEGIN
                        DECLARE mssg_date DATETIME;
                        SET mssg_date =
                            (SELECT EXECUTION_DATE FROM
                                (SELECT mssg.msg_send_time AS EXECUTION_DATE, 1 AS MESSAGE_ID,
                                    mss.channel_type AS CHANNEL_ID, mss.status AS STATUS_ID
                                FROM messages_scheduled_service mss
                                    JOIN messages_patient_template mpt on mpt.messages_patient_template_id = mss.patient_template_id
                                    JOIN messages_template mt on mt.messages_template_id = mpt.template_id
                                    JOIN messages_scheduled_service_group mssg on mssg.messages_scheduled_service_group_id = mss.group_id
                                WHERE
                                    mt.name = 'Visit reminder'
                                    AND mpt.patient_id = patient_id
                                    AND mpt.actor_id = actor_id
                                ORDER BY 1 DESC)
                               a LIMIT 1);
                        RETURN if(mssg_date > NOW(), mssg_date, NOW());
                        END
                ]]>
        </sql>
        <sql>
            DROP FUNCTION IF EXISTS GET_PREDICTION_START_DATE_FOR_ADHERENCE_WEEKLY;
        </sql>
        <sql splitStatements="false" stripComments="false">
            <![CDATA[
                        CREATE FUNCTION `GET_PREDICTION_START_DATE_FOR_ADHERENCE_WEEKLY`(patient_id long, actor_id long)
                        RETURNS DATETIME
                        BEGIN
                        DECLARE mssg_date DATETIME;
                        SET mssg_date =
                            (SELECT EXECUTION_DATE FROM
                                (SELECT mssg.msg_send_time AS EXECUTION_DATE, 1 AS MESSAGE_ID,
                                    mss.channel_type AS CHANNEL_ID, mss.status AS STATUS_ID
                                FROM messages_scheduled_service mss
                                    JOIN messages_patient_template mpt on mpt.messages_patient_template_id = mss.patient_template_id
                                    JOIN messages_template mt on mt.messages_template_id = mpt.template_id
                                    JOIN messages_scheduled_service_group mssg on mssg.messages_scheduled_service_group_id = mss.group_id
                                WHERE
                                    mt.name = 'Adherence report weekly'
                                    AND mpt.patient_id = patient_id
                                    AND mpt.actor_id = actor_id
                                ORDER BY 1 DESC)
                               a LIMIT 1);
                        RETURN if(mssg_date > NOW(), mssg_date, NOW());
                        END
                ]]>
        </sql>
        <sql>
            DROP FUNCTION IF EXISTS GET_PREDICTION_START_DATE_FOR_HEALTH_TIP;
        </sql>
        <sql splitStatements="false" stripComments="false">
            <![CDATA[
                        CREATE FUNCTION `GET_PREDICTION_START_DATE_FOR_HEALTH_TIP`(patient_id long, actor_id long)
                        RETURNS DATETIME
                        BEGIN
                        DECLARE mssg_date DATETIME;
                        SET mssg_date =
                            (SELECT EXECUTION_DATE FROM
                                (SELECT mssg.msg_send_time AS EXECUTION_DATE, 1 AS MESSAGE_ID,
                                    mss.channel_type AS CHANNEL_ID, mss.status AS STATUS_ID
                                FROM messages_scheduled_service mss
                                    JOIN messages_patient_template mpt on mpt.messages_patient_template_id = mss.patient_template_id
                                    JOIN messages_template mt on mt.messages_template_id = mpt.template_id
                                    JOIN messages_scheduled_service_group mssg on mssg.messages_scheduled_service_group_id = mss.group_id
                                WHERE
                                    mt.name = 'Health tip'
                                    AND mpt.patient_id = patient_id
                                    AND mpt.actor_id = actor_id
                                ORDER BY 1 DESC)
                               a LIMIT 1);
                        RETURN if(mssg_date > NOW(), mssg_date, NOW());
                        END
                ]]>
        </sql>
        <sql>
            DROP FUNCTION IF EXISTS GET_PREDICTION_START_DATE_FOR_ADHERENCE_FEEDBACK;
        </sql>
        <sql splitStatements="false" stripComments="false">
            <![CDATA[
                        CREATE FUNCTION `GET_PREDICTION_START_DATE_FOR_ADHERENCE_FEEDBACK`(patient_id long, actor_id long)
                        RETURNS DATETIME
                        BEGIN
                        DECLARE mssg_date DATETIME;
                        SET mssg_date =
                            (SELECT EXECUTION_DATE FROM
                                (SELECT mssg.msg_send_time AS EXECUTION_DATE, 1 AS MESSAGE_ID,
                                    mss.channel_type AS CHANNEL_ID, mss.status AS STATUS_ID
                                FROM messages_scheduled_service mss
                                    JOIN messages_patient_template mpt on mpt.messages_patient_template_id = mss.patient_template_id
                                    JOIN messages_template mt on mt.messages_template_id = mpt.template_id
                                    JOIN messages_scheduled_service_group mssg on mssg.messages_scheduled_service_group_id = mss.group_id
                                WHERE
                                    mt.name = 'Adherence feedback'
                                    AND mpt.patient_id = patient_id
                                    AND mpt.actor_id = actor_id
                                ORDER BY 1 DESC)
                               a LIMIT 1);
                        RETURN if(mssg_date > NOW(), mssg_date, NOW());
                        END
                ]]>
        </sql>
    </changeSet>

    <changeSet id="messages-54" author="Daniel Serkowski">
        <preConditions>
            <tableExists tableName="global_property"/>
        </preConditions>

        <comment>Resets messages.reschedulingStrategy to the default value (the property structure and its description
            have been changed). It is in order to apply the new changes to all already existing environments. The
            migration can be removed if the liquibase refactor will be conducted (eg. replacing all changes by one
            changeSet).</comment>

        <delete tableName="global_property">
            <where>property='messages.reschedulingStrategy'</where>
        </delete>
    </changeSet>

    <changeSet id="messages-55" author="Daniel Serkowski">
        <comment>Removes the not null constraint on service_execution_id in messages_delivery_attempt. In some cases,
            the attempts can fail before executor invokes eg. real call. The failure may be caused by temporary internal
            server error, so in order to register it in this table, we need to get rid of the not null requirement.</comment>

        <dropNotNullConstraint tableName="messages_delivery_attempt"
                               columnName="service_execution_id"
                               columnDataType="varchar(255)"/>
    </changeSet>

    <changeSet id="messages-56" author="Michał Lewandowski">
        <preConditions>
            <tableExists tableName="messages_template"/>
            <tableExists tableName="messages_template_field"/>
            <tableExists tableName="messages_scheduled_service"/>
        </preConditions>

        <comment>Adjust date before visit conditions</comment>

        <sql>
            <![CDATA[
                UPDATE messages_template SET service_query =
                    'SELECT EXECUTION_DATE,
                        MESSAGE_ID,
                        CHANNEL_ID,
                        null AS STATUS_ID,
                        visitTypeId,
                        locationId,
                        dateStarted,
                        visitId,
                        timeStarted

                    FROM
                    (
                        SELECT TIMESTAMP(selected_date, :bestContactTime ) AS EXECUTION_DATE,
                         1 AS MESSAGE_ID,
                         :Service_type AS CHANNEL_ID,
                         visitTypeId,
                         locationId,
                         dateStarted,
                         visitId,
                         valueReference AS timeStarted
                        FROM
                        DATES_LIST

                            JOIN (
                                SELECT v.date_started AS visit_dates,
                                    v.visit_type_id AS visitTypeId,
                                    v.location_id AS locationId,
                                    v.visit_id AS visitId,
                                    v.date_started AS dateStarted,
                                    va.value_reference AS valueReference
                                FROM visit v
                                JOIN visit_attribute va ON va.visit_id=v.visit_id
                                JOIN visit_attribute_type vat ON va.attribute_type_id = vat.visit_attribute_type_id
                                WHERE v.patient_id = :patientId AND vat.name=\'Visit Time\'
                        ) dates_of_visit
                        WHERE concat(\',\',(
                            SELECT property_value
                            FROM global_property
                            WHERE property =\'message.daysToCallBeforeVisit.default\'), \',\')
                                LIKE concat(\'%,\',datediff(visit_dates, selected_date),\',%\')
                                AND date(visit_dates) !=  selected_date
                    )dates_before_visit
                    WHERE EXECUTION_DATE <= :endDateTime
                        AND EXECUTION_DATE >= :startDateTime
                        AND EXECUTION_DATE > GET_PREDICTION_START_DATE_FOR_VISIT(:patientId, :actorId)
                        AND CHANNEL_ID != \'Deactivate service\'
                    UNION
                        SELECT mssg.msg_send_time AS EXECUTION_DATE,
                            1 AS MESSAGE_ID,
                            mss.channel_type AS CHANNEL_ID,
                            mss.status AS STATUS_ID,
                            null AS visitTypeId,
                            null AS locationId,
                            null AS dateStarted,
							null AS visitId,
							null AS timeStarted
                        FROM messages_scheduled_service mss
                            JOIN messages_patient_template mpt ON mpt.messages_patient_template_id = mss.patient_template_id
                            JOIN messages_template mt ON mt.messages_template_id = mpt.template_id
                            JOIN messages_scheduled_service_group mssg ON mssg.messages_scheduled_service_group_id = mss.group_id
                        WHERE mt.name = \'Visit reminder\'
                            AND mpt.patient_id = :patientId
                            AND mpt.actor_id = :actorId
                            AND mssg.msg_send_time >= :startDateTime
                            AND mssg.msg_send_time <= :endDateTime
                        ORDER BY 1 desc;'
                WHERE name = 'Visit reminder';
            ]]>
        </sql>
    </changeSet>

    <changeSet id="messages-57" author="Dawid Ruchniewicz">
        <preConditions>
            <tableExists tableName="messages_template"/>
            <tableExists tableName="messages_template_field"/>
            <tableExists tableName="messages_scheduled_service"/>
        </preConditions>

        <comment>Added additional return parameters</comment>

        <sql>
            <![CDATA[
            UPDATE messages_template SET service_query =
                'SELECT EXECUTION_DATE,
                       MESSAGE_ID,
                       CHANNEL_ID,
                       NULL AS STATUS_ID,
                       ADHERENCE_LEVEL,
                       ADHERENCE_TREND,
                       (SELECT property_value
                       FROM global_property
                       WHERE property = \'messages.cutOffScoreForMediumLowAdherenceLevel\') as ADHERENCE_LEVEL_CUT_OFF_SCORE_MEDIUM_LOW,
                       (SELECT property_value
                       FROM global_property
                       WHERE property = \'messages.cutOffScoreForHighMediumAdherenceLevel\') as ADHERENCE_LEVEL_CUT_OFF_SCORE_HIGH_MEDIUM,
                       (SELECT property_value
                       FROM global_property
                       WHERE property = \'messages.cutOffScoreForAdherenceTrend\') as ADHERENCE_TREND_CUT_OFF_SCORE,
                       (SELECT property_value
                       FROM global_property
                       WHERE property = \'messages.benchmarkPeriod\') as BENCHMARK_PERIOD
                FROM   (
                              SELECT Timestamp(selected_date, times) AS EXECUTION_DATE,
                                     1                               AS MESSAGE_ID,
                                     :Service_type                   AS CHANNEL_ID
                              FROM   (
                                            SELECT *
                                            FROM   (
                                                          SELECT *
                                                          FROM DATES_LIST) dates_list
                                            WHERE  (
                                                          Dayofmonth(selected_date) <IF (:Frequency_of_the_message = \'Weekly\', 32, 8))
                                            AND    :Week_day_of_delivering_message LIKE concat(\'%\',dayname(selected_date),\'%\')) dates
                              JOIN
                                     (
                                            SELECT :bestContactTime times) timeslist) temp
                JOIN
                       (
                              SELECT IF(sum(text_response = \'YES\') / sum(text_response = \'YES\'
                              OR     text_response = \'NO\') >
                                     (
                                            SELECT
                                                   (
                                                          SELECT property_value
                                                          FROM   global_property
                                                          WHERE  property = \'messages.cutOffScoreForHighMediumAdherenceLevel\') / 100), \'HIGH\',
                                     (
                                            SELECT IF(sum(text_response = \'YES\') / sum(text_response = \'YES\'
                                            OR     text_response = \'NO\') >
                                                   (
                                                          SELECT
                                                                 (
                                                                        SELECT property_value
                                                                        FROM   global_property
                                                                        WHERE  property = \'messages.cutOffScoreForMediumLowAdherenceLevel\') / 100), \'MEDIUM\', \'LOW\')
                                            FROM   messages_actor_response mar
                                            JOIN   messages_scheduled_service mss
                                            ON     mar.scheduled_service_id = mss.messages_scheduled_service_id
                                            JOIN   messages_patient_template mpt
                                            ON     mss.patient_template_id = mpt.messages_patient_template_id
                                            JOIN   messages_template mt
                                            ON     mpt.template_id = mt.messages_template_id
                                            WHERE  mt.NAME = \'Adherence report daily\'
                                            AND    mar.answered_time >=
                                                   (
                                                          SELECT date_add(now(), interval -
                                                                 (
                                                                        SELECT property_value
                                                                        FROM   global_property
                                                                        WHERE  property = \'messages.benchmarkPeriod\') day))
                                            AND    mar.answered_time <= now()
                                            OR     mt.NAME = \'Adherence report weekly\'
                                            AND    mar.answered_time >=
                                                   (
                                                          SELECT date_add(now(), interval -
                                                                 (
                                                                        SELECT property_value
                                                                        FROM   global_property
                                                                        WHERE  property = \'messages.benchmarkPeriod\') day))
                                            AND    mar.answered_time <= now())) AS ADHERENCE_LEVEL
                              FROM   messages_actor_response mar
                              JOIN   messages_scheduled_service mss
                              ON     mar.scheduled_service_id = mss.messages_scheduled_service_id
                              JOIN   messages_patient_template mpt
                              ON     mss.patient_template_id = mpt.messages_patient_template_id
                              JOIN   messages_template mt
                              ON     mpt.template_id = mt.messages_template_id
                              WHERE  mt.NAME = \'Adherence report daily\'
                              AND    mar.answered_time >=
                                     (
                                            SELECT date_add(now(), interval -
                                                   (
                                                          SELECT property_value
                                                          FROM   global_property
                                                          WHERE  property = \'messages.benchmarkPeriod\') day))
                              AND    mar.answered_time <= now()
                              OR     mt.NAME = \'Adherence report weekly\'
                              AND    mar.answered_time >=
                                     (
                                            SELECT date_add(now(), interval -
                                                   (
                                                          SELECT property_value
                                                          FROM   global_property
                                                          WHERE  property = \'messages.benchmarkPeriod\') day))
                              AND    mar.answered_time <= now()) adhlev
                JOIN
                       (
                              SELECT IF(sum(text_response = \'YES\') / sum(text_response = \'YES\'
                              OR     text_response = \'NO\')         -
                                     (
                                            SELECT sum(text_response = \'YES\') / sum(text_response = \'YES\'
                                            OR     text_response = \'NO\')
                                            FROM   messages_actor_response mar
                                            JOIN   messages_scheduled_service mss
                                            ON     mar.scheduled_service_id = mss.messages_scheduled_service_id
                                            JOIN   messages_patient_template mpt
                                            ON     mss.patient_template_id = mpt.messages_patient_template_id
                                            JOIN   messages_template mt
                                            ON     mpt.template_id = mt.messages_template_id
                                            WHERE  mt.NAME = \'Adherence report daily\'
                                            AND    mar.answered_time >=
                                                   (
                                                          SELECT date_add(now(), interval -
                                                                 (
                                                                        SELECT 2 *
                                                                               (
                                                                        SELECT property_value
                                                                        FROM   global_property
                                                                        WHERE  property = \'messages.benchmarkPeriod\')) day))
                                            AND    mar.answered_time <=
                                                   (
                                                          SELECT date_add(now(), interval -
                                                                 (
                                                                        SELECT property_value
                                                                        FROM   global_property
                                                                        WHERE  property = \'messages.benchmarkPeriod\') day))
                                            OR     mt.NAME = \'Adherence report weekly\'
                                            AND    mar.answered_time >=
                                                   (
                                                          SELECT date_add(now(), interval -
                                                                 (
                                                                        SELECT 2 *
                                                                               (
                                                                                      SELECT property_value
                                                                                      FROM   global_property
                                                                                      WHERE  property = \'messages.benchmarkPeriod\')) day))
                                            AND    mar.answered_time <=
                                                   (
                                                          SELECT date_add(now(), interval -
                                                                 (
                                                                        SELECT property_value
                                                                        FROM   global_property
                                                                        WHERE  property = \'messages.benchmarkPeriod\') day))) >
                                     (
                                            SELECT
                                                   (
                                                          SELECT property_value
                                                          FROM   global_property
                                                          WHERE  property = \'messages.cutOffScoreForAdherenceTrend\') / 100), \'RISING\',
                                     (
                                            SELECT IF(sum(text_response = \'YES\') / sum(text_response = \'YES\'
                                            OR     text_response = \'NO\')         -
                                                   (
                                                          SELECT sum(text_response = \'YES\') / sum(text_response = \'YES\'
                                                          OR     text_response = \'NO\')
                                                          FROM   messages_actor_response mar
                                                          JOIN   messages_scheduled_service mss
                                                          ON     mar.scheduled_service_id = mss.messages_scheduled_service_id
                                                          JOIN   messages_patient_template mpt
                                                          ON     mss.patient_template_id = mpt.messages_patient_template_id
                                                          JOIN   messages_template mt
                                                          ON     mpt.template_id = mt.messages_template_id
                                                          WHERE  mt.NAME = \'Adherence report daily\'
                                                          AND    mar.answered_time >=
                                                                 (
                                                                        SELECT date_add(now(), interval -
                                                                               (
                                                                                      SELECT 2 *
                                                                                             (
                                                                                                    SELECT property_value
                                                                                                    FROM   global_property
                                                                                                    WHERE  property = \'messages.benchmarkPeriod\')) day))
                                                          AND    mar.answered_time <=
                                                                 (
                                                                        SELECT date_add(now(), interval -
                                                                               (
                                                                                      SELECT property_value
                                                                                      FROM   global_property
                                                                                      WHERE  property = \'messages.benchmarkPeriod\') day))
                                                          OR     mt.NAME = \'Adherence report weekly\'
                                                          AND    mar.answered_time >=
                                                                 (
                                                                        SELECT date_add(now(), interval -
                                                                               (
                                                                                      SELECT 2 *
                                                                                             (
                                                                                                    SELECT property_value
                                                                                                    FROM   global_property
                                                                                                    WHERE  property = \'messages.benchmarkPeriod\')) day))
                                                          AND    mar.answered_time <=
                                                                 (
                                                                        SELECT date_add(now(), interval -
                                                                               (
                                                                                      SELECT property_value
                                                                                      FROM   global_property
                                                                                      WHERE  property = \'messages.benchmarkPeriod\') day)) ) <-1 *
                                                   (
                                                          SELECT
                                                                 (
                                                                        SELECT property_value
                                                                        FROM   global_property
                                                                        WHERE  property = \'messages.cutOffScoreForAdherenceTrend\') / 100), \'FALLING\', \'STABLE\'))) AS ADHERENCE_TREND
                              FROM   messages_actor_response mar
                              JOIN   messages_scheduled_service mss
                              ON     mar.scheduled_service_id = mss.messages_scheduled_service_id
                              JOIN   messages_patient_template mpt
                              ON     mss.patient_template_id = mpt.messages_patient_template_id
                              JOIN   messages_template mt
                              ON     mpt.template_id = mt.messages_template_id
                              WHERE  mt.NAME = \'Adherence report daily\'
                              AND    mar.answered_time >=
                                     (
                                            SELECT date_add(now(), interval -
                                                   (
                                                          SELECT property_value
                                                          FROM   global_property
                                                          WHERE  property = \'messages.benchmarkPeriod\') day))
                              AND    mar.answered_time <= now()
                              OR     mt.NAME = \'Adherence report weekly\'
                              AND    mar.answered_time >=
                                     (
                                            SELECT date_add(now(), interval -
                                                   (
                                                          SELECT property_value
                                                          FROM   global_property
                                                          WHERE  property = \'messages.benchmarkPeriod\') day))
                              AND    mar.answered_time <= now()) adhtre
                WHERE  EXECUTION_DATE >= :startDateTime
                AND    EXECUTION_DATE <= :endDateTime
                AND    EXECUTION_DATE > get_prediction_start_date_for_adherence_feedback(:patientId, :actorId)
                AND    CHANNEL_ID != \'Deactivate service\'
                UNION
                SELECT   mssg.msg_send_time AS EXECUTION_DATE,
                         1                  AS MESSAGE_ID,
                         mss.channel_type   AS CHANNEL_ID,
                         mss.status         AS STATUS_ID,
                         NULL               AS ADHERENCE_LEVEL,
                         NULL               AS ADHERENCE_TREND,
                         NULL               AS ADHERENCE_LEVEL_CUT_OFF_SCORE_MEDIUM_LOW,
                         NULL               AS ADHERENCE_LEVEL_CUT_OFF_SCORE_HIGH_MEDIUM,
                         NULL               AS ADHERENCE_TREND_CUT_OFF_SCORE,
                         NULL               AS BENCHMARK_PERIOD
                FROM     messages_scheduled_service mss
                JOIN     messages_patient_template mpt
                ON       mpt.messages_patient_template_id = mss.patient_template_id
                JOIN     messages_template mt
                ON       mt.messages_template_id = mpt.template_id
                JOIN     messages_scheduled_service_group mssg
                ON       mssg.messages_scheduled_service_group_id = mss.group_id
                WHERE    mt.NAME = \'Adherence feedback\'
                AND      mpt.patient_id = :patientId
                AND      mpt.actor_id =:actorId
                AND      mssg.msg_send_time >= :startDateTime
                AND      mssg.msg_send_time <= :endDateTime
                ORDER BY 1 DESC ; '
            WHERE name = 'Adherence feedback';
            ]]>
        </sql>
    </changeSet>

    <changeSet id="messages-58" author="Arkadiusz Lalo">
        <preConditions onFail="MARK_RAN">
            <tableExists tableName="messages_actor_response" />
            <not>
                <tableExists tableName="messages_actor_response_type" />
            </not>
            <not>
                <columnExists tableName="messages_actor_response" columnName="actor_id" />
            </not>
            <not>
                <columnExists tableName="messages_actor_response" columnName="patient_id" />
            </not>
            <not>
                <columnExists tableName="messages_actor_response" columnName="source_id" />
            </not>
            <not>
                <columnExists tableName="messages_actor_response" columnName="source_type" />
            </not>
            <not>
                <columnExists tableName="messages_actor_response" columnName="text_question" />
            </not>
        </preConditions>
        <comment>
            Adds new columns which will be used in next migration in order to change
            the structure of messages_actor_response. Additionally creates messages_actor_response_type
            table which will be used by new messages_actor_response table.
        </comment>
        <createTable tableName="messages_actor_response_type">
            <column name="name" type="varchar(255)">
                <constraints primaryKey="true"/>
            </column>
        </createTable>
        <insert tableName="messages_actor_response_type">
            <column name="name" value="SCHEDULED_SERVICE" />
        </insert>
        <insert tableName="messages_actor_response_type">
            <column name="name" value="SCHEDULED_SERVICE_GROUP" />
        </insert>
        <insert tableName="messages_actor_response_type">
            <column name="name" value="OTHER" />
        </insert>
        <addColumn tableName="messages_actor_response">
            <column name="actor_id" type="int"/>
            <column name="patient_id" type="int"/>
            <column name="source_id" type="varchar(255)"/>
            <column name="source_type" type="varchar(255)" />
            <column name="text_question" type="TEXT" />
        </addColumn>
        <addForeignKeyConstraint constraintName="messages_actor_response_actor_fk"
                                 baseTableName="messages_actor_response" baseColumnNames="actor_id"
                                 referencedTableName="person" referencedColumnNames="person_id"/>
        <addForeignKeyConstraint constraintName="messages_actor_response_patient_fk"
                                 baseTableName="messages_actor_response" baseColumnNames="patient_id"
                                 referencedTableName="patient" referencedColumnNames="patient_id"/>
        <addForeignKeyConstraint constraintName="messages_actor_response_source_type_fk"
                                 baseTableName="messages_actor_response" baseColumnNames="source_type"
                                 referencedTableName="messages_actor_response_type" referencedColumnNames="name"/>
    </changeSet>

    <changeSet id="messages-59" author="Arkadiusz Lalo">
        <preConditions onFail="MARK_RAN">
            <tableExists tableName="messages_actor_response" />
            <tableExists tableName="messages_actor_response_type" />
            <columnExists tableName="messages_actor_response" columnName="actor_id" />
            <columnExists tableName="messages_actor_response" columnName="patient_id" />
            <columnExists tableName="messages_actor_response" columnName="source_id" />
            <columnExists tableName="messages_actor_response" columnName="source_type" />
            <columnExists tableName="messages_actor_response" columnName="text_question" />
            <columnExists tableName="messages_actor_response" columnName="scheduled_service_id" />
            <columnExists tableName="messages_actor_response" columnName="text_question" />
        </preConditions>
        <comment>
            Updates already existing data in database according to new changes (messages-54).
            Insert scheduled_service_group_id into new source id column.
        </comment>
        <sql>
            UPDATE messages_actor_response ar
                LEFT JOIN messages_scheduled_service ss ON ar.scheduled_service_id = ss.messages_scheduled_service_id
                LEFT JOIN messages_scheduled_service_group ssg ON ss.group_id = ssg.messages_scheduled_service_group_id
            SET ar.patient_id = ssg.patient_id, ar.actor_id = ssg.actor_id,
                ar.source_id = ssg.messages_scheduled_service_group_id,
                ar.source_type = 'SCHEDULED_SERVICE_GROUP'
        </sql>
    </changeSet>

    <changeSet id="messages-60" author="Arkadiusz Lalo">
        <preConditions onFail="MARK_RAN">
            <tableExists tableName="messages_actor_response" />
            <columnExists tableName="messages_actor_response" columnName="source_type" />
            <columnExists tableName="messages_actor_response" columnName="scheduled_service_id" />
        </preConditions>
        <comment>
            Removes the unnecessary column from messages_actor_response table according to changes from messages-54.
            Additionally adds missing constraint for source_type column.
        </comment>
        <addNotNullConstraint tableName="messages_actor_response" columnName="source_type" columnDataType="varchar(255)"/>
        <dropForeignKeyConstraint baseTableName="messages_actor_response"
                          constraintName="messages_actor_response_scheduled_service_fk" />
        <dropColumn tableName="messages_actor_response" columnName="scheduled_service_id" />
    </changeSet>

    <changeSet id="messages-61" author="Arkadiusz Lalo" runOnChange="true">
        <preConditions onFail="MARK_RAN">
            <tableExists tableName="messages_template"/>
            <tableExists tableName="messages_template_field"/>
            <tableExists tableName="messages_scheduled_service"/>
            <sqlCheck expectedResult="1">SELECT COUNT(*) FROM messages_template WHERE name = 'Health tip'</sqlCheck>
        </preConditions>
        <comment>
            Brings the latest changes in the Health Tip service.
        </comment>
        <sql>
            DROP FUNCTION IF EXISTS GET_PREDICTION_START_DATE_FOR_HEALTH_TIP;
        </sql>
        <sqlFile encoding="UTF-8"
                 path="mysql/services/HealthTipStartDateFunction.sql"
                 splitStatements="false"
                 stripComments="false"/>
        <sqlFile encoding="UTF-8"
                 path="mysql/services/HealthTip.sql"
                 splitStatements="false"
                 stripComments="false"/>
    </changeSet>

    <changeSet id="messages-62" author="Arkadiusz Lalo" runOnChange="true">
        <preConditions onFail="MARK_RAN">
            <tableExists tableName="messages_template"/>
            <tableExists tableName="messages_template_field"/>
            <tableExists tableName="messages_scheduled_service"/>
            <sqlCheck expectedResult="1">SELECT COUNT(*) FROM messages_template WHERE name = 'Adherence feedback'</sqlCheck>
        </preConditions>
        <comment>
            Brings the latest changes in the Adherence feedback service.
        </comment>
        <sql>
            DROP FUNCTION IF EXISTS GET_PREDICTION_START_DATE_FOR_ADHERENCE_FEEDBACK;
        </sql>
        <sqlFile encoding="UTF-8"
                 path="mysql/services/AdherenceFeedbackStartDateFunction.sql"
                 splitStatements="false"
                 stripComments="false"/>
        <sqlFile encoding="UTF-8"
                 path="mysql/services/AdherenceFeedback.sql"
                 splitStatements="false"
                 stripComments="false"/>
    </changeSet>

    <changeSet id="messages-63" author="Arkadiusz Lalo">
        <preConditions>
            <tableExists tableName="global_property"/>
        </preConditions>

        <comment>
            Resets messages.notificationTemplate.injectedServices to the default value.
            It is in order to apply the new changes to all already existing environments.
            The migration can be removed if the liquibase refactor will be
            conducted (eg. replacing all changes by one changeSet).
        </comment>

        <delete tableName="global_property">
            <where>property='messages.notificationTemplate.injectedServices'</where>
        </delete>
    </changeSet>

    <changeSet id="messages-64" author="Arkadiusz Lalo">
        <preConditions>
            <tableExists tableName="messages_template"/>
        </preConditions>

        <comment>
            Adds the unique constraint on `name` column in the `messages_template` table.
        </comment>

        <addUniqueConstraint tableName="messages_template" columnNames="name"/>
    </changeSet>
    <changeSet id="messages-65" author="Paweł Cieszko" runOnChange="true">
        <preConditions onFail="MARK_RAN">
            <tableExists tableName="messages_template"/>
            <tableExists tableName="messages_template_field"/>
            <tableExists tableName="messages_scheduled_service"/>
            <sqlCheck expectedResult="1">SELECT COUNT(*) FROM messages_template WHERE name = 'Visit reminder'</sqlCheck>
        </preConditions>
        <comment>
            Brings the latest changes in the Visit reminder service.
        </comment>
        <sql>
            DROP FUNCTION IF EXISTS GET_PREDICTION_START_DATE_FOR_VISIT;
        </sql>
        <sqlFile encoding="UTF-8"
                 path="mysql/services/VisitReminderStartDateFunction.sql"
                 splitStatements="false"
                 stripComments="false"/>
        <sqlFile encoding="UTF-8"
                 path="mysql/services/VisitReminder.sql"
                 splitStatements="false"
                 stripComments="false"/>
    </changeSet>

    <changeSet id="messages-66" author="Arkadiusz Lalo" runOnChange="true">
        <preConditions onFail="MARK_RAN">
            <tableExists tableName="messages_template"/>
            <tableExists tableName="messages_template_field"/>
            <tableExists tableName="messages_scheduled_service"/>
            <sqlCheck expectedResult="1">SELECT COUNT(*) FROM messages_template WHERE name = 'Adherence report weekly'</sqlCheck>
        </preConditions>
        <comment>
            Brings the latest changes in the Adherence report weekly service.
        </comment>
        <sql>
            DROP FUNCTION IF EXISTS GET_PREDICTION_START_DATE_FOR_ADHERENCE_WEEKLY;
        </sql>
        <sqlFile encoding="UTF-8"
                 path="mysql/services/AdherenceReportWeeklyStartDateFunction.sql"
                 splitStatements="false"
                 stripComments="false"/>
        <sqlFile encoding="UTF-8"
                 path="mysql/services/AdherenceReportWeekly.sql"
                 splitStatements="false"
                 stripComments="false"/>
    </changeSet>

    <changeSet id="messages-67" author="Arkadiusz Lalo" runOnChange="true">
        <preConditions onFail="MARK_RAN">
            <tableExists tableName="messages_template"/>
            <tableExists tableName="messages_template_field"/>
            <tableExists tableName="messages_scheduled_service"/>
            <sqlCheck expectedResult="1">SELECT COUNT(*) FROM messages_template WHERE name = 'Adherence report daily'</sqlCheck>
        </preConditions>
        <comment>
            Brings the latest changes in the Adherence report daily service.
        </comment>
        <sql>
            DROP FUNCTION IF EXISTS GET_PREDICTION_START_DATE_FOR_ADHERENCE_DAILY;
        </sql>
        <sqlFile encoding="UTF-8"
                 path="mysql/services/AdherenceReportDailyStartDateFunction.sql"
                 splitStatements="false"
                 stripComments="false"/>
        <sqlFile encoding="UTF-8"
                 path="mysql/services/AdherenceReportDaily.sql"
                 splitStatements="false"
                 stripComments="false"/>
    </changeSet>

    <changeSet id="messages-68" author="Daniel Serkowski" runOnChange="true">
        <preConditions>
            <tableExists tableName="messages_template"/>
        </preConditions>

        <comment>
            Adding triggers and procedure which check patientTemplate uniqueness for
            actor_id, patient_id and template_id columns with the support for voided entries.

            This migration also provides the mechanism for automatic update of the procedure
            when the sql file with its definition is changed.
        </comment>

        <sql>
            DROP TRIGGER IF EXISTS messages_patient_template_insert_validation;
            DROP TRIGGER IF EXISTS messages_patient_template_update_validation;
            DROP PROCEDURE IF EXISTS validate_messages_patient_template;
        </sql>

        <sqlFile encoding="UTF-8"
                 path="mysql/validators/PatientTemplateValidation.sql"
                 splitStatements="false"
                 stripComments="true"/>

        <sql>
            CREATE TRIGGER messages_patient_template_insert_validation
            AFTER INSERT ON messages_patient_template
            FOR EACH ROW CALL validate_messages_patient_template(NEW.actor_id, NEW.patient_id, NEW.template_id);

            CREATE TRIGGER messages_patient_template_update_validation
            AFTER UPDATE ON messages_patient_template
            FOR EACH ROW CALL validate_messages_patient_template(NEW.actor_id, NEW.patient_id, NEW.template_id);
        </sql>
    </changeSet>

    <changeSet id="messages-69" author="Daniel Serkowski">
        <preConditions>
            <tableExists tableName="messages_patient_template"/>
            <foreignKeyConstraintExists foreignKeyName="messages_patient_template_actor_fk"/>
            <foreignKeyConstraintExists foreignKeyName="messages_patient_template_patient_fk"/>
            <foreignKeyConstraintExists foreignKeyName="messages_patient_template_template_fk"/>
            <indexExists indexName="messages_patient_template_actor_id_patient_id_template_id_ux"/>
        </preConditions>

        <comment>
            Remove the unique constraint because it have been replaced by the trigger
            supporting voided entries (introduced in messages-68).
        </comment>

        <!-- removing these 3 constraints for a while -->
        <dropForeignKeyConstraint baseTableName="messages_patient_template"
                                  constraintName="messages_patient_template_actor_fk"/>
        <dropForeignKeyConstraint baseTableName="messages_patient_template"
                                  constraintName="messages_patient_template_patient_fk"/>
        <dropForeignKeyConstraint baseTableName="messages_patient_template"
                                  constraintName="messages_patient_template_template_fk"/>

        <dropUniqueConstraint tableName="messages_patient_template"
                              constraintName="messages_patient_template_actor_id_patient_id_template_id_ux"/>

        <!-- the constraints restore -->
        <addForeignKeyConstraint constraintName="messages_patient_template_actor_fk"
                                 baseTableName="messages_patient_template" baseColumnNames="actor_id"
                                 referencedTableName="person" referencedColumnNames="person_id"/>
        <addForeignKeyConstraint constraintName="messages_patient_template_patient_fk"
                                 baseTableName="messages_patient_template" baseColumnNames="patient_id"
                                 referencedTableName="patient" referencedColumnNames="patient_id"/>
        <addForeignKeyConstraint constraintName="messages_patient_template_template_fk"
                                 baseTableName="messages_patient_template" baseColumnNames="template_id"
                                 referencedTableName="messages_template"
                                 referencedColumnNames="messages_template_id"/>
    </changeSet>

    <changeSet id="messages-70" author="Dawid Ruchniewicz">
        <preConditions>
            <tableExists tableName="messages_patient_template"/>
            <columnExists tableName="messages_patient_template" columnName="service_query" />
            <columnExists tableName="messages_patient_template" columnName="service_query_type" />
        </preConditions>
        <comment>
            Removed not null constraints from service_query and service_query_type fields in PatientTemplate
            to avoid unpredictable saving values to those fields
        </comment>
        <dropNotNullConstraint tableName="messages_patient_template"
                               columnName="service_query"
                               columnDataType="TEXT" />
        <dropNotNullConstraint tableName="messages_patient_template"
                               columnName="service_query_type"
                               columnDataType="varchar(255)" />
    </changeSet>

    <changeSet id="messages-71" author="Arkadiusz Lalo">
        <preConditions>
            <tableExists tableName="global_property"/>
        </preConditions>

        <comment>Resets message.daysToCallBeforeVisit.default to the default value (the property structure
            and its description have been changed). It is in order to apply the new changes to all already
            existing environments. The migration can be removed if the liquibase refactor will be conducted
            (eg. replacing all changes by one changeSet).</comment>

        <delete tableName="global_property">
            <where>property='message.daysToCallBeforeVisit.default'</where>
        </delete>
    </changeSet>

    <changeSet id="messages-72" author="Dawid Ruchniewicz">
        <preConditions>
            <tableExists tableName="messages_template_field"/>
        </preConditions>

        <comment>
            Updated default_value of Categories of the message for the HealthTip service to avoid setting
            this field for each new patient template (e.g. if we want set only Adherence Daily service
            we have to set category in HealthTip service).
        </comment>

        <sql>
            UPDATE messages_template_field
            SET default_value = 'HT_PREVENTION'
            WHERE uuid = '95572cd9-20b2-11ea-ac12-0242c0a82002'
            AND default_value = '';
        </sql>
    </changeSet>

    <changeSet id="messages-73" author="Dawid Ruchniewicz">
        <preConditions>
            <tableExists tableName="messages_template_field_default_values"/>
        </preConditions>

        <comment>
            Updated default_value of Categories of the message for the HealthTip service for other
            relationship types than patient (e.g. for Caregiver) to avoid setting this field for
            each new patient template (e.g. if we want set only Adherence Daily service we have to
            set category in HealthTip service).
        </comment>

        <sql>
            UPDATE messages_template_field_default_values mtfdv
            SET mtfdv.default_value='HT_PREVENTION'
            WHERE mtfdv.template_field IN
                (SELECT mtf.messages_template_field_id
                FROM messages_template_field mtf
                WHERE mtf.name = 'Categories of the message')
            AND mtfdv.default_value = '';
        </sql>
    </changeSet>

    <changeSet id="messages-74" author="Arkadiusz Lalo">
        <preConditions onFail="MARK_RAN">
            <tableExists tableName="global_property"/>
            <sqlCheck expectedResult="1">
                SELECT COUNT(*) FROM global_property WHERE property='messages.maxNumberOfRescheduling'
            </sqlCheck>
        </preConditions>

        <comment>Removed messages.maxNumberOfRescheduling property because the property name
            has been changed to 'messages.maxNumberOfAttempts'.
            The migration can be removed if the liquibase refactor will be conducted (eg. replacing all changes by one
            changeSet).</comment>

        <delete tableName="global_property">
            <where>property='messages.maxNumberOfRescheduling'</where>
        </delete>
    </changeSet>

    <changeSet id="messages-75" author="Dawid Ruchniewicz">
        <preConditions onFail="MARK_RAN">
            <tableExists tableName="global_property"/>
            <sqlCheck expectedResult="1">
                SELECT COUNT(*) FROM global_property WHERE property='messages.notificationTemplate.adherence-report-daily'
            </sqlCheck>
        </preConditions>

        <comment>
            Removed messages.notificationTemplate.adherence-report-daily property in order
            to update default value via activator. The migration can be removed if the liquibase
            refactor will be conducted (eg. replacing all changes by one changeSet).
        </comment>

        <delete tableName="global_property">
            <where>property='messages.notificationTemplate.adherence-report-daily'</where>
        </delete>
    </changeSet>

    <changeSet id="messages-76" author="Dawid Ruchniewicz">
        <preConditions onFail="MARK_RAN">
            <tableExists tableName="global_property"/>
            <sqlCheck expectedResult="1">
                SELECT COUNT(*) FROM global_property WHERE property='messages.notificationTemplate.adherence-report-weekly'
            </sqlCheck>
        </preConditions>

        <comment>
            Removed messages.notificationTemplate.adherence-report-weekly property in order
            to update default value via activator. The migration can be removed if the liquibase
            refactor will be conducted (eg. replacing all changes by one changeSet).
        </comment>

        <delete tableName="global_property">
            <where>property='messages.notificationTemplate.adherence-report-weekly'</where>
        </delete>
    </changeSet>

    <changeSet id="messages-77" author="Dawid Ruchniewicz">
        <preConditions onFail="MARK_RAN">
            <tableExists tableName="global_property"/>
            <sqlCheck expectedResult="1">
                SELECT COUNT(*) FROM global_property WHERE property='messages.notificationTemplate.visit-reminder'
            </sqlCheck>
        </preConditions>

        <comment>
            Removed messages.notificationTemplate.visit-reminder property in order
            to update default value via activator. The migration can be removed if the liquibase
            refactor will be conducted (eg. replacing all changes by one changeSet).
        </comment>

        <delete tableName="global_property">
            <where>property='messages.notificationTemplate.visit-reminder'</where>
        </delete>
    </changeSet>

    <changeSet id="messages-78" author="Dawid Ruchniewicz">
        <preConditions onFail="MARK_RAN">
            <tableExists tableName="global_property"/>
            <sqlCheck expectedResult="1">
                SELECT COUNT(*) FROM global_property WHERE property='messages.notificationTemplate.adherence-feedback'
            </sqlCheck>
        </preConditions>

        <comment>
            Removed messages.notificationTemplate.adherence-feedback property in order
            to update default value via activator. The migration can be removed if the liquibase
            refactor will be conducted (eg. replacing all changes by one changeSet).
        </comment>

        <delete tableName="global_property">
            <where>property='messages.notificationTemplate.adherence-feedback'</where>
        </delete>
    </changeSet>

    <changeSet id="messages-79" author="Arkadiusz Lalo">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="1">
                SELECT COUNT(*) FROM messages_template WHERE uuid = '9556f9ab-20b2-11ea-ac12-0242c0a82002'
            </sqlCheck>
        </preConditions>
        <comment>
            Updated the template date of created in order to change the templates display order.
        </comment>
        <update tableName="messages_template">
            <column name="date_created" value="2020-01-17 16:22:16"/>
            <where>uuid = '9556f9ab-20b2-11ea-ac12-0242c0a82002'</where>
        </update>
    </changeSet>

    <changeSet id="messages-80" author="Arkadiusz Lalo">
        <preConditions onFail="MARK_RAN">
            <tableExists tableName="messages_template_field"/>
            <not><columnExists tableName="messages_template_field" columnName="possible_values"/></not>
        </preConditions>
        <comment>Adds the possible_values column which can be used to store
            the set of possible values for specific field type</comment>
        <addColumn tableName="messages_template_field">
            <column name="possible_values" type="varchar(255)"/>
        </addColumn>
    </changeSet>

    <changeSet id="messages-81" author="Arkadiusz Lalo">
        <preConditions onFail="MARK_RAN">
            <tableExists tableName="messages_template_field"/>
            <columnExists tableName="messages_template_field" columnName="possible_values"/>
        </preConditions>
        <comment>Fill the default possible values for all of the SERVICE_TYPE fields</comment>
        <update tableName="messages_template_field">
            <column name="possible_values" value="Deactivate service|SMS|Call"/>
            <where>possible_values is NULL AND template_field_type = 'SERVICE_TYPE'</where>
        </update>
    </changeSet>

    <changeSet id="messages-81" author="Artur Fijał">
        <preConditions onFail="MARK_RAN">
            <tableExists tableName="global_property"/>
            <sqlCheck expectedResult="1">
                SELECT COUNT(*) FROM global_property WHERE property='messages.notificationTemplate.adherence-report-daily'
            </sqlCheck>
        </preConditions>

        <comment>
            Removed messages.notificationTemplate.adherence-report-daily property in order
            to update default value to one that contains parameters as map.
        </comment>

        <delete tableName="global_property">
            <where>property='messages.notificationTemplate.adherence-report-daily'</where>
        </delete>
    </changeSet>

    <changeSet id="messages-82" author="Artur Fijał">
        <preConditions onFail="MARK_RAN">
            <tableExists tableName="global_property"/>
            <sqlCheck expectedResult="1">
                SELECT COUNT(*) FROM global_property WHERE property='messages.notificationTemplate.adherence-report-weekly'
            </sqlCheck>
        </preConditions>

        <comment>
            Removed messages.notificationTemplate.adherence-report-weekly property in order
            to update default value to one that contains parameters as map.
        </comment>

        <delete tableName="global_property">
            <where>property='messages.notificationTemplate.adherence-report-weekly'</where>
        </delete>
    </changeSet>

    <changeSet id="messages-84" author="Artur Fijał">
        <preConditions onFail="MARK_RAN">
            <tableExists tableName="global_property"/>
            <sqlCheck expectedResult="1">
                SELECT COUNT(*) FROM global_property WHERE property='messages.notificationTemplate.visit-reminder'
            </sqlCheck>
        </preConditions>

        <comment>
            Removed messages.notificationTemplate.visit-reminder property in order
            to update default value to one that contains parameters as map.
        </comment>

        <delete tableName="global_property">
            <where>property='messages.notificationTemplate.visit-reminder'</where>
        </delete>
    </changeSet>

    <changeSet id="messages-85" author="Artur Fijał">
        <preConditions onFail="MARK_RAN">
            <tableExists tableName="global_property"/>
            <sqlCheck expectedResult="1">
                SELECT COUNT(*) FROM global_property WHERE property='messages.notificationTemplate.adherence-feedback'
            </sqlCheck>
        </preConditions>

        <comment>
            Removed messages.notificationTemplate.adherence-feedback property in order
            to update default value to one that contains parameters as map.
        </comment>

        <delete tableName="global_property">
            <where>property='messages.notificationTemplate.adherence-feedback'</where>
        </delete>
    </changeSet>

    <changeSet id="messages-86" author="Artur Fijał">
        <preConditions onFail="MARK_RAN">
            <tableExists tableName="global_property"/>
            <sqlCheck expectedResult="1">
                SELECT COUNT(*) FROM global_property WHERE property='messages.notificationTemplate.health-tip'
            </sqlCheck>
        </preConditions>

        <comment>
            Removed messages.notificationTemplate.adherence-feedback property in order
            to update default value to one that contains parameters as map.
        </comment>

        <delete tableName="global_property">
            <where>property='messages.notificationTemplate.health-tip'</where>
        </delete>
    </changeSet>

    <changeSet id="messages-87" author="Dawid Ruchniewicz">
        <comment>Limited dates views to 10 days</comment>

        <sql>
            DROP VIEW IF EXISTS DATES_LIST_10_DAYS;
            CREATE VIEW DATES_LIST_10_DAYS AS SELECT (CURDATE() + INTERVAL (((((t4 * 10000) + (t3 * 1000)) + (t2 * 100)) + (t1 * 10)) + t0) DAY) selected_date
            FROM ((((DIGITS_0 as t0 JOIN DIGITS_1 as t1) JOIN DIGITS_2 as t2) JOIN DIGITS_3 as t3) JOIN DIGITS_4 as t4)
            WHERE (CURDATE() + INTERVAL (((((t4 * 10000) + (t3 * 1000)) + (t2 * 100)) + (t1 * 10)) + t0) DAY) &lt; (SELECT DATE_ADD(CURDATE(), INTERVAL 10 DAY));
        </sql>
    </changeSet>

    <changeSet id="messages-88" author="Dawid Ruchniewicz">
        <comment>Limited UI dates view to 2000 days (about 5.5 years) in the future from today</comment>

        <sql>
            DROP VIEW IF EXISTS DATES_LIST;
            CREATE VIEW DATES_LIST AS SELECT (CURDATE() + INTERVAL (((((t4 * 10000) + (t3 * 1000)) + (t2 * 100)) + (t1 * 10)) + t0) DAY) selected_date
            FROM ((((DIGITS_0 as t0 JOIN DIGITS_1 as t1) JOIN DIGITS_2 as t2) JOIN DIGITS_3 as t3) JOIN DIGITS_4 as t4)
            WHERE (CURDATE() + INTERVAL (((((t4 * 10000) + (t3 * 1000)) + (t2 * 100)) + (t1 * 10)) + t0) DAY) &lt; (SELECT DATE_ADD(CURDATE(), INTERVAL 2000 DAY));
        </sql>
    </changeSet>

    <changeSet id="messages-89" author="Dawid Ruchniewicz">
        <preConditions onFail="MARK_RAN">
            <tableExists tableName="messages_template"/>
            <tableExists tableName="messages_patient_template"/>
        </preConditions>
        <comment>Added calendarServiceQuery column to template and patient template tables</comment>
        <addColumn tableName="messages_template">
            <column name="calendar_service_query" type="TEXT"/>
        </addColumn>
        <addColumn tableName="messages_patient_template">
            <column name="calendar_service_query" type="TEXT"/>
        </addColumn>
    </changeSet>

    <changeSet id="messages-90" author="Dawid Ruchniewicz" runOnChange="true">
        <preConditions onFail="MARK_RAN">
            <tableExists tableName="messages_template"/>
            <sqlCheck expectedResult="1">SELECT COUNT(*) FROM messages_template WHERE name = 'Visit reminder'</sqlCheck>
        </preConditions>
        <comment>
            Added visit service query used in the calendar view
        </comment>
        <sqlFile encoding="UTF-8"
                 path="mysql/services/VisitReminderCalendarQuery.sql"
                 splitStatements="false"
                 stripComments="false"/>
    </changeSet>

    <changeSet id="messages-2021-02-09-12:00" author="Piotr Wargulak">
        <comment>Template entity now derives from BaseOpenmrsMetadata</comment>
        <addColumn tableName="messages_template">
            <column name="description" type="varchar(255)" />
        </addColumn>
        <renameColumn tableName="messages_template" columnDataType="tinyint(1)" oldColumnName="voided" newColumnName="retired" />
        <renameColumn tableName="messages_template" columnDataType="datetime" oldColumnName="date_voided" newColumnName="date_retired" />
        <renameColumn tableName="messages_template" columnDataType="int(11)" oldColumnName="voided_by" newColumnName="retired_by" />
        <renameColumn tableName="messages_template" columnDataType="varchar(255)" oldColumnName="void_reason" newColumnName="retire_reason" />
    </changeSet>

    <changeSet id="messages-92" author="Dawid Ruchniewicz">
        <preConditions onFail="MARK_RAN">
            <tableExists tableName="messages_template"/>
        </preConditions>
        <comment>Added shouldUseOptimizedQuery column to template</comment>
        <addColumn tableName="messages_template">
            <column name="should_use_optimized_query" type="BOOLEAN" defaultValueBoolean="false"/>
        </addColumn>
    </changeSet>

    <changeSet id="messages-93" author="Dawid Ruchniewicz">
        <preConditions onFail="MARK_RAN">
            <tableExists tableName="messages_template"/>
        </preConditions>
        <comment>Enabled shouldUseOptimizedQuery option</comment>
        <update tableName="messages_template">
            <column name="should_use_optimized_query" valueBoolean="true"/>
            <where>name = 'Visit reminder'</where>
        </update>
    </changeSet>

    <changeSet id="messages-94-AGRE-1420-move-channelType-1" author="Piotr Wargulak">
        <preConditions onFail="MARK_RAN">
            <not>
                <columnExists tableName="messages_scheduled_service_group" columnName="channel_type"/>
            </not>
        </preConditions>
        <comment>
            Adds nullable ScheduledServiceGroup.channelType if needed. Sets 'Deactivate service' in all
            existing rows
        </comment>
        <addColumn tableName="messages_scheduled_service_group">
            <column name="channel_type" type="varchar(255)" value="Deactivate service">
                <constraints nullable="true"/>
            </column>
        </addColumn>
    </changeSet>

    <changeSet id="messages-94-AGRE-1420-move-channelType-2" author="Piotr Wargulak">
        <preConditions onFail="MARK_RAN">
            <columnExists tableName="messages_scheduled_service" columnName="channel_type"/>
        </preConditions>
        <comment>Drops ScheduledService.channelType if needed. Makes ScheduledServiceGroup.channelType not-null.</comment>
        <dropColumn tableName="messages_scheduled_service" columnName="channel_type"/>
        <addNotNullConstraint tableName="messages_scheduled_service_group" columnName="channel_type"
                              columnDataType="varchar(255)"/>
    </changeSet>
    <changeSet id="messages-94-AGRE-1420-move-channelType-3" author="Piotr Wargulak">
        <comment>Update services, DROP functions: AdherenceFeedbackStartDateFunction,
            AdherenceReportDailyStartDateFunction, AdherenceReportWeeklyStartDateFunction, HealthTipStartDateFunction,
            VisitReminderStartDateFunction
        </comment>
        <sql>DROP FUNCTION IF EXISTS GET_PREDICTION_START_DATE_FOR_ADHERENCE_FEEDBACK;</sql>
        <sql>DROP FUNCTION IF EXISTS GET_PREDICTION_START_DATE_FOR_ADHERENCE_DAILY;</sql>
        <sql>DROP FUNCTION IF EXISTS GET_PREDICTION_START_DATE_FOR_ADHERENCE_WEEKLY;</sql>
        <sql>DROP FUNCTION IF EXISTS GET_PREDICTION_START_DATE_FOR_HEALTH_TIP;</sql>
        <sql>DROP FUNCTION IF EXISTS GET_PREDICTION_START_DATE_FOR_VISIT;</sql>
    </changeSet>

    <changeSet id="messages-94-AGRE-1420-move-channelType-4" author="Piotr Wargulak">
        <comment>Update services, CREATE functions: AdherenceFeedbackStartDateFunction,
            AdherenceReportDailyStartDateFunction, AdherenceReportWeeklyStartDateFunction, HealthTipStartDateFunction,
            VisitReminderStartDateFunction
        </comment>
        <sqlFile encoding="UTF-8"
                 path="mysql/services/AdherenceFeedbackStartDateFunction.sql"
                 splitStatements="false"
                 stripComments="false"/>
        <sqlFile encoding="UTF-8"
                 path="mysql/services/AdherenceReportDailyStartDateFunction.sql"
                 splitStatements="false"
                 stripComments="false"/>
        <sqlFile encoding="UTF-8"
                 path="mysql/services/AdherenceReportWeeklyStartDateFunction.sql"
                 splitStatements="false"
                 stripComments="false"/>
        <sqlFile encoding="UTF-8"
                 path="mysql/services/HealthTipStartDateFunction.sql"
                 splitStatements="false"
                 stripComments="false"/>
        <sqlFile encoding="UTF-8"
                 path="mysql/services/VisitReminderStartDateFunction.sql"
                 splitStatements="false"
                 stripComments="false"/>
    </changeSet>

    <changeSet id="messages-94-AGRE-1420-move-channelType-5" author="Piotr Wargulak">
        <comment>Update services, update templates.</comment>
        <sqlFile encoding="UTF-8"
                 path="mysql/services/AdherenceFeedback.sql"
                 splitStatements="false"
                 stripComments="false"/>
        <sqlFile encoding="UTF-8"
                 path="mysql/services/AdherenceReportDaily.sql"
                 splitStatements="false"
                 stripComments="false"/>
        <sqlFile encoding="UTF-8"
                 path="mysql/services/AdherenceReportWeekly.sql"
                 splitStatements="false"
                 stripComments="false"/>
        <sqlFile encoding="UTF-8"
                 path="mysql/services/HealthTip.sql"
                 splitStatements="false"
                 stripComments="false"/>
        <sqlFile encoding="UTF-8"
                 path="mysql/services/VisitReminderCalendarQuery.sql"
                 splitStatements="false"
                 stripComments="false"/>
    </changeSet>

    <changeSet id="messages-AGRE-1626-Virtual-Follow-Up-service" author="Piotr Wargulak">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="0">SELECT COUNT(*) FROM messages_template WHERE name = 'Virtual Follow Up'</sqlCheck>
        </preConditions>
        <comment>Adds Virtual Follow Up message template with empty queries.</comment>
        <sql>
            INSERT INTO messages_template (
                service_query,
                service_query_type,
                uuid,
                creator,
                changed_by,
                date_changed,
                date_created,
                date_retired,
                retire_reason,
                retired,
                retired_by,
                name,
                calendar_service_query,
                description,
                should_use_optimized_query)
            VALUES(
                'SELECT "empty" FROM dual WHERE false;',
                'SQL',
                'e67649ee-a625-4a52-91dd-107665c2fcaa',
                1,
                NULL,
                NULL,
                '2021-06-17 00:00:00',
                NULL,
                NULL,
                0,
                NULL,
                'Virtual Follow Up',
                'SELECT "empty" FROM dual WHERE false;',
                'The Template for Virtual Follow Up messages.',
                1);
            INSERT INTO messages_template_field (
                name,
                mandatory,
                default_value,
                template_id,
                uuid,
                creator,
                changed_by,
                date_changed,
                date_created,
                date_voided,
                void_reason,
                voided,
                voided_by,
                template_field_type,
                possible_values)
            VALUES(
                'Service type',
                1,
                'Deactivate service',
                (SELECT mt.messages_template_id FROM messages_template mt WHERE mt.name = 'Virtual Follow Up'),
                '4324d726-d82b-4915-8dcd-12386aad3a30',
                1,
                NULL,
                NULL,
                '2021-06-17 00:00:00',
                NULL,
                NULL,
                0,
                NULL,
                'SERVICE_TYPE',
                'Deactivate service|SMS|Call');
            INSERT INTO messages_template_field (
                name,
                mandatory,
                default_value,
                template_id,
                uuid,
                creator,
                changed_by,
                date_changed,
                date_created,
                date_voided,
                void_reason,
                voided,
                voided_by,
                template_field_type,
                possible_values)
            VALUES(
                'After number of days',
                1,
                NULL,
                (SELECT mt.messages_template_id FROM messages_template mt WHERE mt.name = 'Virtual Follow Up'),
                '1f2a9027-e871-4eaf-92c4-8c99f8dbc380',
                1,
                NULL,
                NULL,
                '2021-06-17 00:00:00',
                NULL,
                NULL,
                0,
                NULL,
                'COMMON_MULTI_SELECT',
                '7,14,21,28,35,42,49,56,63,70');
        </sql>
    </changeSet>

    <changeSet id="messages-AGRE-1626-Virtual-Follow-Up-service-view" author="Piotr Wargulak">
        <comment>Adds DB View with 100 unsigned numbers (from 1) used by Virtual Follow Up message template.</comment>
        <sql><![CDATA[
            CREATE OR REPLACE
            ALGORITHM = UNDEFINED VIEW `openmrs`.`NUMBERS_100` AS
            SELECT
            (`t1`.`t1` * 10) + `t0`.`t0` + 1 AS `number`
            FROM
            `openmrs`.`DIGITS_0` `t0`
            JOIN
            `openmrs`.`DIGITS_1` `t1`
            WHERE
            (`t1`.`t1` * 10) + `t0`.`t0` + 1 < 100
        ]]></sql>
    </changeSet>

    <changeSet id="messages-AGRE-1626-Virtual-Follow-Up-service-functions" author="Piotr Wargulak">
        <comment>Adds DB functions used by Virtual Follow Up message template.</comment>
        <sqlFile encoding="UTF-8"
                 path="mysql/services/CommonStartDateFunction.sql"
                 splitStatements="false"
                 stripComments="false"/>
        <sqlFile encoding="UTF-8"
                 path="mysql/services/VirtualFollowUp/VirtualFollowUpGetLastDosageVisitFunction.sql"
                 splitStatements="false"
                 stripComments="false"/>
    </changeSet>

    <changeSet id="messages-AGRE-1626-Virtual-Follow-Up-service-queries" author="Piotr Wargulak">
        <comment>Sets correct SQL queries for Virtual Follow Up message template.</comment>
        <sqlFile encoding="UTF-8"
                 path="mysql/services/VirtualFollowUp/VirtualFollowUp.sql"
                 splitStatements="false"
                 stripComments="false"/>
        <sqlFile encoding="UTF-8"
                 path="mysql/services/VirtualFollowUp/VirtualFollowUpCalendarQuery.sql"
                 splitStatements="false"
                 stripComments="false"/>
    </changeSet>

    <changeSet id="messages-AGRE-1626-Missing-default-value" author="Piotr Wargulak">
        <comment>Sets default value to the 'After number of days' message field.</comment>
        <update tableName="messages_template_field">
            <column name="default_value" value="3,7,14,21,28,35,42,49,56,63,70" />
            <where>uuid='1f2a9027-e871-4eaf-92c4-8c99f8dbc380'</where>
        </update>
    </changeSet>
</databaseChangeLog>
