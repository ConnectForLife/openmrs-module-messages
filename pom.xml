<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.openmrs.maven.parents</groupId>
		<artifactId>maven-parent-openmrs-module</artifactId>
		<version>1.1.0</version>
	</parent>

	<groupId>org.openmrs.module</groupId>
	<artifactId>messages</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>Messages</name>
	<description>Messages module</description>

	<scm>
		<connection>scm:git:git@bitbucket.org/soldevelo/omrs-messages.git</connection>
		<developerConnection>scm:git:git@bitbucket.org/soldevelo/omrs-messages.git</developerConnection>
		<url>https://bitbucket.org/soldevelo/omrs-messages/</url>
	</scm>

	<modules>
		<module>api</module>
		<module>omod</module>
		<module>owa</module>
	</modules>

	<dependencyManagement>
		<dependencies>
			<!-- Importing versions from refapp distro -->
			<dependency>
				<groupId>org.openmrs.distro</groupId>
				<artifactId>referenceapplication</artifactId>
				<version>2.4</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>com.google.code.gson</groupId>
				<artifactId>gson</artifactId>
				<version>${gsonVersion}</version>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>${javax.servlet.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>${apacheHttpClientVersion}</version>
			</dependency>
			<dependency>
				<groupId>org.openmrs.module</groupId>
				<artifactId>uiframework-api</artifactId>
				<version>${uiframeworkVersion}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<!-- fixes the issue: https://github.com/h2database/h2database/issues/388-->
				<groupId>com.vividsolutions</groupId>
				<artifactId>jts-core</artifactId>
				<version>${jtsCoreVersion}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.openmrs</groupId>
				<artifactId>event-api</artifactId>
				<version>${eventVersion}</version>
				<scope>provided</scope>
				<exclusions>
					<exclusion>
						<groupId>commons-codec</groupId>
						<artifactId>commons-codec</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>${checkStylePluginVersion}</version>
					<configuration>
						<configLocation>checkstyle.xml</configLocation>
					</configuration>
					<executions>
						<execution>
							<id>verify-checkstyle</id>
							<phase>validate</phase>
							<configuration>
								<configLocation>checkstyle.xml</configLocation>
								<encoding>${project.build.sourceEncoding}</encoding>
								<consoleOutput>true</consoleOutput>
								<logViolationsToConsole>true</logViolationsToConsole>
								<failOnViolation>true</failOnViolation>
								<failsOnError>true</failsOnError>
								<includeTestSourceDirectory>true</includeTestSourceDirectory>
							</configuration>
							<goals>
								<goal>check</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-pmd-plugin</artifactId>
					<version>${pmdPluginVersion}</version>
					<configuration>
						<rulesets>
							<ruleset>${project.basedir}/../pmd.xml</ruleset>
						</rulesets>
						<linkXRef>false</linkXRef>
						<sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
						<minimumTokens>100</minimumTokens>
						<printFailingErrors>true</printFailingErrors>
						<analysisCache>true</analysisCache>
						<includeTests>false</includeTests>
						<failOnViolation>true</failOnViolation>
					</configuration>
					<executions>
						<execution>
							<id>validate</id>
							<phase>validate</phase>
							<goals>
								<goal>check</goal>
								<goal>cpd-check</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>findbugs-maven-plugin</artifactId>
					<version>${findBugsPluginVersion}</version>
					<configuration>
						<includeFilterFile>findbugs-include.xml</includeFilterFile>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>com.googlecode.maven-java-formatter-plugin</groupId>
				<artifactId>maven-java-formatter-plugin</artifactId>
				<executions>
					<execution>
						<phase>none</phase>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>default</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>${surefireVersion}</version>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>code-coverage</id>
			<dependencies>
				<dependency>
					<groupId>org.jacoco</groupId>
					<artifactId>org.jacoco.agent</artifactId>
					<classifier>runtime</classifier>
					<version>${jacocoVersion}</version>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${jacocoVersion}</version>
						<executions>
							<!-- Off line instrumentation is needed to compute coverage for Power Mock tests -->
							<execution>
								<id>default-instrument</id>
								<goals>
									<goal>instrument</goal>
								</goals>
							</execution>
							<execution>
								<id>default-restore-instrumented-classes</id>
								<goals>
									<goal>restore-instrumented-classes</goal>
								</goals>
							</execution>
							<execution>
								<id>default-report</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>report</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>${surefireVersion}</version>
						<dependencies>
							<dependency>
								<groupId>org.apache.maven.surefire</groupId>
								<artifactId>surefire-junit47</artifactId>
								<version>${surefireVersion}</version>
							</dependency>
						</dependencies>
						<configuration>
							<!-- Workaround to https://code.google.com/p/powermock/issues/detail?id=504 -->
							<argLine>-XX:-UseSplitVerifier</argLine>
							<systemPropertyVariables>
								<jacoco-agent.destfile>target/jacoco.exec</jacoco-agent.destfile>
							</systemPropertyVariables>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>dev</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-checkstyle-plugin</artifactId>
						<version>${checkStylePluginVersion}</version>
						<configuration>
							<configLocation>checkstyle.xml</configLocation>
						</configuration>
						<executions>
							<execution>
								<id>verify-checkstyle</id>
								<phase>none</phase>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-pmd-plugin</artifactId>
						<version>${pmdPluginVersion}</version>
						<executions>
							<execution>
								<id>validate</id>
								<phase>none</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<repositories>
		<repository>
			<id>openmrs-repo</id>
			<name>OpenMRS Nexus Repository</name>
			<url>http://mavenrepo.openmrs.org/nexus/content/repositories/public</url>
		</repository>
		<repository>
			<id>central</id>
			<name>Maven Repository Switchboard</name>
			<layout>default</layout>
			<url>http://repo1.maven.org/maven2</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>openmrs-repo</id>
			<name>OpenMRS Nexus Repository</name>
			<url>http://mavenrepo.openmrs.org/nexus/content/repositories/public</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

	<properties>
		<apacheHttpClientVersion>4.4.1</apacheHttpClientVersion>
		<openmrsPlatformVersion>2.0.1</openmrsPlatformVersion>
		<javaCompilerSource>1.8</javaCompilerSource>
		<javaCompilerTarget>1.8</javaCompilerTarget>
		<gsonVersion>2.8.5</gsonVersion>
		<pmdPluginVersion>3.12.0</pmdPluginVersion>
		<checkStylePluginVersion>3.0.0</checkStylePluginVersion>
		<findBugsPluginVersion>3.0.5</findBugsPluginVersion>
		<legacyVersion>1.5.0</legacyVersion>
		<jacocoVersion>0.8.2</jacocoVersion>
		<surefireVersion>2.17</surefireVersion>
		<javax.servlet.version>3.0.1</javax.servlet.version>
		<uiframeworkVersion>3.9</uiframeworkVersion>
		<eventVersion>2.6.0</eventVersion>
		<jtsCoreVersion>1.14.0</jtsCoreVersion>
	</properties>
</project>
